{"ast":null,"code":"var _jsxFileName = \"/Users/luna/Documents/Elice_1st_Project/portfolio-share-service-racer/front/src/pages/login/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../../static/font.css';\nimport { Card, Container, Col, Row, Form, Button } from 'react-bootstrap';\nimport { Typography } from '@material-ui/core';\nimport * as Api from '../../api';\nimport { DispatchContext } from '../../App';\nimport { UserStateContext } from '../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginForm() {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useContext(DispatchContext);\n  const userState = useContext(UserStateContext); //useState로 email 상태를 생성함.\n\n  const [email, setEmail] = useState(''); //useState로 password 상태를 생성함.\n\n  const [password, setPassword] = useState(''); //이메일이 abc@example.com 형태인지 regex를 이용해 확인함.\n\n  const validateEmail = email => {\n    return email.toLowerCase().match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n  }; //위 validateEmail 함수를 통해 이메일 형태 적합 여부를 확인함.\n\n\n  const isEmailValid = validateEmail(email); // 비밀번호가 4글자 이상인지 여부를 확인함.\n\n  const isPasswordValid = password.length >= 4; //\n  // 이메일과 비밀번호 조건이 동시에 만족되는지 확인함.\n\n  const isFormValid = isEmailValid && isPasswordValid;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      // \"user/login\" 엔드포인트로 post요청함.\n      const res = await Api.post('user/login', {\n        email,\n        password\n      }); // 유저 정보는 response의 data임.\n\n      const user = res.data; // JWT 토큰은 유저 정보의 token임.\n\n      const jwtToken = user.token; // sessionStorage에 \"userToken\"이라는 키로 JWT 토큰을 저장함.\n\n      sessionStorage.setItem('userToken', jwtToken); // dispatch 함수를 이용해 로그인 성공 상태로 만듦.\n\n      console.log(user);\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: user\n      }); // 기본 페이지로 이동함.\n\n      navigate('/', {\n        replace: true\n      });\n    } catch (err) {\n      if (err.response.status === 400) {\n        alert(err.response.data.error);\n      }\n\n      console.log('로그인에 실패하였습니다.\\n', err);\n    }\n  };\n\n  useEffect(() => {\n    // 만약 전역 상태의 user가 null이라면, 로그인 페이지로 이동함.\n    if (!userState.user) {\n      navigate('/login');\n      return;\n    } else {\n      navigate(`/user/${userState.user._id}`);\n    }\n  }, [userState, navigate]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    style: {\n      height: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"align-items-center\",\n      style: {\n        marginTop: '100px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        sm: 6,\n        className: \"d-flex align-items-center flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"d-flex align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h1\",\n            style: {\n              fontFamily: 'BMKIRANGHAERANG',\n              color: 'white',\n              textShadow: '-5px 0px #576069, 0px 5px #576069, 5px 0px #576069, 0px -5px #576069'\n            },\n            children: \"Forefolio.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"d-flex align-items-center text-center\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              color: 'white'\n            },\n            children: [\"Let\\u2019s start the first step on your Odyssey as developer. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 86\n            }, this), \"It might be a long and hard journey. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 66\n            }, this), \"But with Forefolio, you can do it!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this), \"\\uAC1C\\uBC1C\\uC790 \\uC624\\uB527\\uC138\\uC774\\uC758 \\uCCAB \\uAC78\\uC74C\\uC744 \\uC2DC\\uC791\\uD574\\uBCF4\\uC138\\uC694.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), \"\\uAE38\\uACE0 \\uD798\\uB4E0 \\uC5EC\\uC815\\uC774 \\uB420 \\uC218\\uB3C4 \\uC788\\uACA0\\uC9C0\\uB9CC,\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), \"Forefolio\\uC640 \\uD568\\uAED8\\uB77C\\uBA74 \\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"justify-content-md-center mt-5\",\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              lg: 8,\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"loginEmail\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      style: {\n                        fontFamily: 'BMKIRANGHAERANG',\n                        color: '#576069'\n                      },\n                      children: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"email\",\n                    autoComplete: \"on\",\n                    value: email,\n                    onChange: e => setEmail(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 41\n                  }, this), !isEmailValid && /*#__PURE__*/_jsxDEV(Form.Text, {\n                    className: \"text-success\",\n                    children: \"\\uC774\\uBA54\\uC77C \\uD615\\uC2DD\\uC774 \\uC62C\\uBC14\\uB974\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"loginPassword\",\n                  className: \"mt-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      style: {\n                        fontFamily: 'BMKIRANGHAERANG',\n                        color: '#576069'\n                      },\n                      children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 135,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"password\",\n                    autoComplete: \"on\",\n                    value: password,\n                    onChange: e => setPassword(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 41\n                  }, this), !isPasswordValid && /*#__PURE__*/_jsxDEV(Form.Text, {\n                    className: \"text-success\",\n                    children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB294 4\\uAE00\\uC790 \\uC774\\uC0C1\\uC785\\uB2C8\\uB2E4.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Row,\n                  className: \"mt-3 text-center\",\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    sm: {\n                      span: 20\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      style: {\n                        backgroundColor: '#2a3741',\n                        border: 'none'\n                      },\n                      type: \"submit\",\n                      disabled: !isFormValid,\n                      onClick: e => handleSubmit(e),\n                      children: \"\\uB85C\\uADF8\\uC778\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 152,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Row,\n                  className: \"mt-3 text-center\",\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    sm: {\n                      span: 20\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      className: \"mb-3\",\n                      variant: \"light\",\n                      onClick: () => navigate('/register'),\n                      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\\uD558\\uAE30\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 164,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginForm, \"WrhhzRUmfwPVkc2LhlItLqxtvJg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/luna/Documents/Elice_1st_Project/portfolio-share-service-racer/front/src/pages/login/LoginForm.js"],"names":["React","useState","useContext","useEffect","useNavigate","Card","Container","Col","Row","Form","Button","Typography","Api","DispatchContext","UserStateContext","LoginForm","navigate","dispatch","userState","email","setEmail","password","setPassword","validateEmail","toLowerCase","match","isEmailValid","isPasswordValid","length","isFormValid","handleSubmit","e","preventDefault","res","post","user","data","jwtToken","token","sessionStorage","setItem","console","log","type","payload","replace","err","response","status","alert","error","_id","height","marginTop","fontFamily","color","textShadow","target","value","span","backgroundColor","border"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../../static/font.css';\nimport { Card, Container, Col, Row, Form, Button } from 'react-bootstrap';\nimport { Typography } from '@material-ui/core';\n\nimport * as Api from '../../api';\nimport { DispatchContext } from '../../App';\nimport { UserStateContext } from '../../App';\n\nfunction LoginForm() {\n    const navigate = useNavigate();\n    const dispatch = useContext(DispatchContext);\n    const userState = useContext(UserStateContext);\n\n    //useState로 email 상태를 생성함.\n    const [email, setEmail] = useState('');\n    //useState로 password 상태를 생성함.\n    const [password, setPassword] = useState('');\n\n    //이메일이 abc@example.com 형태인지 regex를 이용해 확인함.\n    const validateEmail = (email) => {\n        return email\n            .toLowerCase()\n            .match(\n                /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n            );\n    };\n\n    //위 validateEmail 함수를 통해 이메일 형태 적합 여부를 확인함.\n    const isEmailValid = validateEmail(email);\n    // 비밀번호가 4글자 이상인지 여부를 확인함.\n    const isPasswordValid = password.length >= 4;\n    //\n    // 이메일과 비밀번호 조건이 동시에 만족되는지 확인함.\n    const isFormValid = isEmailValid && isPasswordValid;\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        try {\n            // \"user/login\" 엔드포인트로 post요청함.\n            const res = await Api.post('user/login', {\n                email,\n                password,\n            });\n\n            // 유저 정보는 response의 data임.\n            const user = res.data;\n            // JWT 토큰은 유저 정보의 token임.\n            const jwtToken = user.token;\n            // sessionStorage에 \"userToken\"이라는 키로 JWT 토큰을 저장함.\n            sessionStorage.setItem('userToken', jwtToken);\n            // dispatch 함수를 이용해 로그인 성공 상태로 만듦.\n            console.log(user);\n            dispatch({\n                type: 'LOGIN_SUCCESS',\n                payload: user,\n            });\n\n            // 기본 페이지로 이동함.\n            navigate('/', { replace: true });\n        } catch (err) {\n            if (err.response.status === 400) {\n                alert(err.response.data.error);\n            }\n            console.log('로그인에 실패하였습니다.\\n', err);\n        }\n    };\n\n    useEffect(() => {\n        // 만약 전역 상태의 user가 null이라면, 로그인 페이지로 이동함.\n        if (!userState.user) {\n            navigate('/login');\n            return;\n        } else {\n            navigate(`/user/${userState.user._id}`);\n        }\n    }, [userState, navigate]);\n\n    return (\n        <Container fluid style={{ height: '100%' }}>\n            <Row className='align-items-center' style={{ marginTop: '100px' }}>\n                <Col sm={6} className='d-flex align-items-center flex-column'>\n                    <Row className='d-flex align-items-center'>\n                        <Typography\n                            variant='h1'\n                            style={{\n                                fontFamily: 'BMKIRANGHAERANG',\n                                color: 'white',\n                                textShadow: '-5px 0px #576069, 0px 5px #576069, 5px 0px #576069, 0px -5px #576069',\n                            }}>\n                            Forefolio.com\n                        </Typography>\n                    </Row>\n                    <Row className='d-flex align-items-center text-center'>\n                        <Typography style={{ color: 'white' }}>\n                            Let’s start the first step on your Odyssey as developer. <br />\n                            It might be a long and hard journey. <br />\n                            But with Forefolio, you can do it!\n                            <br />\n                            <br />\n                            개발자 오딧세이의 첫 걸음을 시작해보세요.\n                            <br />\n                            길고 힘든 여정이 될 수도 있겠지만,\n                            <br />\n                            Forefolio와 함께라면 할 수 있습니다!\n                        </Typography>\n                    </Row>\n                </Col>\n                <Col sm={6}>\n                    <Card>\n                        <Row className='justify-content-md-center mt-5'>\n                            <Col lg={8}>\n                                <Form onSubmit={handleSubmit}>\n                                    <Form.Group controlId='loginEmail'>\n                                        <Form.Label>\n                                            <Typography style={{ fontFamily: 'BMKIRANGHAERANG', color: '#576069' }}>\n                                                이메일 주소\n                                            </Typography>\n                                        </Form.Label>\n                                        <Form.Control\n                                            type='email'\n                                            autoComplete='on'\n                                            value={email}\n                                            onChange={(e) => setEmail(e.target.value)}\n                                        />\n                                        {!isEmailValid && (\n                                            <Form.Text className='text-success'>이메일 형식이 올바르지 않습니다.</Form.Text>\n                                        )}\n                                    </Form.Group>\n\n                                    <Form.Group controlId='loginPassword' className='mt-3'>\n                                        <Form.Label>\n                                            <Typography style={{ fontFamily: 'BMKIRANGHAERANG', color: '#576069' }}>\n                                                비밀번호\n                                            </Typography>\n                                        </Form.Label>\n                                        <Form.Control\n                                            type='password'\n                                            autoComplete='on'\n                                            value={password}\n                                            onChange={(e) => setPassword(e.target.value)}\n                                        />\n                                        {!isPasswordValid && (\n                                            <Form.Text className='text-success'>비밀번호는 4글자 이상입니다.</Form.Text>\n                                        )}\n                                    </Form.Group>\n\n                                    <Form.Group as={Row} className='mt-3 text-center'>\n                                        <Col sm={{ span: 20 }}>\n                                            <Button\n                                                style={{ backgroundColor: '#2a3741', border: 'none' }}\n                                                type='submit'\n                                                disabled={!isFormValid}\n                                                onClick={(e) => handleSubmit(e)}>\n                                                로그인\n                                            </Button>\n                                        </Col>\n                                    </Form.Group>\n\n                                    <Form.Group as={Row} className='mt-3 text-center'>\n                                        <Col sm={{ span: 20 }}>\n                                            <Button className='mb-3' variant='light' onClick={() => navigate('/register')}>\n                                                회원가입하기\n                                            </Button>\n                                        </Col>\n                                    </Form.Group>\n                                </Form>\n                            </Col>\n                        </Row>\n                    </Card>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}