{"ast":null,"code":"var _jsxFileName = \"/Users/luna/Documents/Elice_1st_Project/portfolio-share-service-racer/front/src/components/project/ProjectDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Form, FloatingLabel } from 'react-bootstrap';\nimport * as Api from '../../api';\nimport ProjectForm from './ProjectForm';\nimport ProjectP from './ProjectP';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProjectDetail(_ref) {\n  _s();\n\n  let {\n    portfolioOwnerId,\n    isEditable\n  } = _ref;\n  const [dbItem, setDbItem] = useState([]);\n  const [isToggle, setIsToggle] = useState(false); // 추가 버튼 클릭 유무\n\n  const [isEdit, setIsEdit] = useState(false); // 편집 버튼 클릭 유무\n\n  const [currentEditId, setcurrentEditId] = useState(''); // Edit 버튼을 클릭 시 버튼 표시를 구분하기 위한 값\n\n  const [projectName, setProjectName] = useState(''); // 프로젝트 이름\n\n  const [projectStartDate, setProjectStartDate] = useState(''); // 프로젝트 시작일자\n\n  const [projectEndDate, setProjectEndDate] = useState(''); // 프로젝트 종료일자\n\n  const [projectDescription, setProjectDescription] = useState(''); // 프로젝트 설명\n\n  const [projectGitLink, setProjectGitLink] = useState(''); // 프로젝트 GitLink 주소\n\n  const isDateValid = projectStartDate < projectEndDate;\n\n  const onChangeName = e => {\n    setProjectName(e.target.value);\n  };\n\n  const onChangeStartDate = e => {\n    setProjectStartDate(e.target.value);\n  };\n\n  const onChangeEndDate = e => {\n    setProjectEndDate(e.target.value);\n  };\n\n  const onChangeDescription = e => {\n    setProjectDescription(e.target.value);\n  };\n\n  const onChangeGitLink = e => {\n    setProjectGitLink(e.target.value);\n  };\n\n  const AddInput = () => {\n    setIsToggle(true);\n    setProjectName('');\n    setProjectStartDate('');\n    setProjectEndDate('');\n    setProjectDescription('');\n    setProjectGitLink('');\n  };\n\n  const fetchProject = async ownerId => {\n    try {\n      // \"/project\" 엔드포인트로 요청해 사용자 정보를 불러옴.(userId는 req.currentUserId 사용)\n      const res = await Api.get(`project/${ownerId.userId}`); // 사용자 정보는 response의 data임.\n\n      const ownerData = res.data; // portfolioOwner을 해당 사용자 정보로 세팅함.\n\n      setDbItem(ownerData);\n    } catch (err) {\n      if (err.response.status === 400) {\n        alert(err.response.data.error);\n      }\n\n      console.log('사용자 데이터 불러오기에 실패하였습니다.', err);\n    }\n  };\n\n  const userId = portfolioOwnerId;\n\n  const handleSubmit = async id => {\n    const item = dbItem.filter(item => item._id === id)[0];\n\n    if (item === undefined || item.isSave === false) {\n      try {\n        // \"/project\" 엔드포인트로 post요청함.(userId는 req.currentUserId 사용)\n        await Api.post(`project/`, {\n          projectName,\n          projectStartDate,\n          projectEndDate,\n          projectDescription,\n          projectGitLink\n        });\n        setIsToggle(false);\n        setIsEdit(false);\n        fetchProject({\n          userId\n        });\n        setProjectName('');\n        setProjectStartDate('');\n        setProjectEndDate('');\n        setProjectDescription('');\n        setProjectGitLink('');\n      } catch (err) {\n        if (err.response.status === 400) {\n          alert(err.response.data.error);\n        }\n\n        console.log('프로젝트 추가에 실패하였습니다.', err);\n      }\n    } else {\n      try {\n        // \"project/projectId\" 엔드포인트로 put요청함.\n        await Api.put(`project/${item._id}`, {\n          projectName,\n          projectStartDate,\n          projectEndDate,\n          projectDescription,\n          projectGitLink\n        });\n        setIsToggle(false);\n        setIsEdit(false);\n        fetchProject({\n          userId\n        });\n      } catch (err) {\n        if (err.response.status === 400) {\n          alert(err.response.data.error);\n        }\n\n        console.log('프로젝트 수정에 실패하였습니다.', err);\n      }\n    }\n  };\n\n  const handleEdit = id => {\n    setDbItem(prevItems => {\n      return prevItems.map(item => {\n        if (item._id === id) {\n          return { ...item,\n            isEdit: true\n          };\n        } else {\n          return item;\n        }\n      });\n    });\n    const item = dbItem.filter(item => item._id === id)[0];\n    setProjectName(item.projectName);\n    setProjectStartDate(item.projectStartDate);\n    setProjectEndDate(item.projectEndDate);\n    setProjectDescription(item.projectDescription);\n    setProjectGitLink(item.projectGitLink);\n    setcurrentEditId(item._id);\n    setIsEdit(true);\n  };\n\n  const handleCancel = () => {\n    fetchProject({\n      userId\n    });\n    setIsToggle(false);\n    setIsEdit(false);\n  };\n\n  const handleDelete = async id => {\n    try {\n      // \"project/projectId\" 엔드포인트로 delete 요청함.\n      await Api.delete(`project/${id}`);\n      fetchProject({\n        userId\n      });\n      setIsToggle(false);\n      setIsEdit(false);\n    } catch (err) {\n      if (err.response.status === 400) {\n        alert(err.response.data.error);\n      }\n\n      console.log('프로젝트 삭제에 실패하였습니다.', err);\n    }\n  };\n\n  useEffect(() => {\n    fetchProject({\n      userId\n    });\n  }, [userId]);\n  const formSendFunction = {\n    handleSubmit,\n    handleCancel,\n    handleDelete,\n    onChangeName,\n    onChangeStartDate,\n    onChangeEndDate,\n    onChangeDescription,\n    onChangeGitLink\n  };\n  const formSendcurrentData = {\n    projectName,\n    projectStartDate,\n    projectEndDate,\n    projectDescription,\n    projectGitLink,\n    currentEditId\n  };\n  const formSendisFlag = {\n    isDateValid\n  };\n  const pSendFunction = {\n    handleEdit\n  };\n  const pSendisFlag = {\n    isEditable,\n    isToggle,\n    isEdit\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [dbItem.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: item.isSave === true && item.isEdit === false ? /*#__PURE__*/_jsxDEV(ProjectP, {\n        pSendFunction: pSendFunction,\n        isFlag: pSendisFlag,\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(ProjectForm, {\n        formSendFunction: formSendFunction,\n        currentData: formSendcurrentData,\n        isFlag: formSendisFlag,\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 25\n      }, this)\n    }, item._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }, this)), isToggle === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n          controlId: \"floatingInput\",\n          label: \"\\uC218\\uC0C1 \\uBA85\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            style: {\n              width: '100%'\n            },\n            type: \"text\",\n            placeholder: \"\\uD504\\uB85C\\uC81D\\uD2B8 \\uBA85\",\n            value: projectName,\n            onChange: onChangeName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n          controlId: \"floatingInput\",\n          label: \"\\uC218\\uC0C1 \\uBA85\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            style: {\n              width: '100%'\n            },\n            type: \"date\",\n            placeholder: \"\\uD504\\uB85C\\uC81D\\uD2B8 \\uC2DC\\uC791\\uC77C\\uC790\",\n            value: projectStartDate,\n            onChange: onChangeStartDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(FloatingLabel, {\n          controlId: \"floatingInput\",\n          label: \"\\uC218\\uC0C1 \\uBA85\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            style: {\n              width: '100%'\n            },\n            type: \"date\",\n            placeholder: \"\\uD504\\uB85C\\uC81D\\uD2B8 \\uC885\\uB8CC\\uC77C\\uC790\",\n            value: projectEndDate,\n            onChange: onChangeEndDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }, this), projectStartDate && projectEndDate && !isDateValid && /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"date-success\",\n          children: \"\\uD504\\uB85C\\uC81D\\uD2B8 \\uC2DC\\uC791\\uC77C\\uC790\\uBCF4\\uB2E4 \\uD504\\uB85C\\uC81D\\uD2B8 \\uC885\\uB8CC\\uC77C\\uC790\\uAC00 \\uC774\\uC804\\uC785\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n          controlId: \"floatingInput\",\n          label: \"\\uC218\\uC0C1 \\uBA85\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            style: {\n              width: '100%'\n            },\n            type: \"text\",\n            placeholder: \"\\uD504\\uB85C\\uC81D\\uD2B8 \\uC124\\uBA85\",\n            value: projectDescription,\n            onChange: onChangeDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n          controlId: \"floatingInput\",\n          label: \"\\uC218\\uC0C1 \\uBA85\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            style: {\n              width: '100%'\n            },\n            type: \"text\",\n            placeholder: \"\\uD504\\uB85C\\uC81D\\uD2B8 GitLink\",\n            value: projectGitLink,\n            onChange: onChangeGitLink\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 text-center\",\n        children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: \"me-2\",\n            variant: \"primary\",\n            onClick: () => handleSubmit(),\n            children: \"\\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => handleCancel(),\n            children: \"\\uCDE8\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }, this) : '', isEditable && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 text-center\",\n      children: dbItem.length < 10 && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: AddInput,\n        disabled: isToggle || isEdit ? true : false,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProjectDetail, \"R0jwgcaxGIxXSWpDMOXblnCAD7Q=\");\n\n_c = ProjectDetail;\nexport default ProjectDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectDetail\");","map":{"version":3,"sources":["/Users/luna/Documents/Elice_1st_Project/portfolio-share-service-racer/front/src/components/project/ProjectDetail.js"],"names":["React","useState","useEffect","Button","Form","FloatingLabel","Api","ProjectForm","ProjectP","ProjectDetail","portfolioOwnerId","isEditable","dbItem","setDbItem","isToggle","setIsToggle","isEdit","setIsEdit","currentEditId","setcurrentEditId","projectName","setProjectName","projectStartDate","setProjectStartDate","projectEndDate","setProjectEndDate","projectDescription","setProjectDescription","projectGitLink","setProjectGitLink","isDateValid","onChangeName","e","target","value","onChangeStartDate","onChangeEndDate","onChangeDescription","onChangeGitLink","AddInput","fetchProject","ownerId","res","get","userId","ownerData","data","err","response","status","alert","error","console","log","handleSubmit","id","item","filter","_id","undefined","isSave","post","put","handleEdit","prevItems","map","handleCancel","handleDelete","delete","formSendFunction","formSendcurrentData","formSendisFlag","pSendFunction","pSendisFlag","width","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Form, FloatingLabel } from 'react-bootstrap';\n\nimport * as Api from '../../api';\n\nimport ProjectForm from './ProjectForm';\nimport ProjectP from './ProjectP';\n\nfunction ProjectDetail({ portfolioOwnerId, isEditable }) {\n    const [dbItem, setDbItem] = useState([]);\n    const [isToggle, setIsToggle] = useState(false); // 추가 버튼 클릭 유무\n    const [isEdit, setIsEdit] = useState(false); // 편집 버튼 클릭 유무\n    const [currentEditId, setcurrentEditId] = useState(''); // Edit 버튼을 클릭 시 버튼 표시를 구분하기 위한 값\n\n    const [projectName, setProjectName] = useState(''); // 프로젝트 이름\n    const [projectStartDate, setProjectStartDate] = useState(''); // 프로젝트 시작일자\n    const [projectEndDate, setProjectEndDate] = useState(''); // 프로젝트 종료일자\n    const [projectDescription, setProjectDescription] = useState(''); // 프로젝트 설명\n    const [projectGitLink, setProjectGitLink] = useState(''); // 프로젝트 GitLink 주소\n\n    const isDateValid = projectStartDate < projectEndDate;\n\n    const onChangeName = (e) => {\n        setProjectName(e.target.value);\n    };\n\n    const onChangeStartDate = (e) => {\n        setProjectStartDate(e.target.value);\n    };\n\n    const onChangeEndDate = (e) => {\n        setProjectEndDate(e.target.value);\n    };\n\n    const onChangeDescription = (e) => {\n        setProjectDescription(e.target.value);\n    };\n\n    const onChangeGitLink = (e) => {\n        setProjectGitLink(e.target.value);\n    };\n\n    const AddInput = () => {\n        setIsToggle(true);\n\n        setProjectName('');\n        setProjectStartDate('');\n        setProjectEndDate('');\n        setProjectDescription('');\n        setProjectGitLink('');\n    };\n\n    const fetchProject = async (ownerId) => {\n        try {\n            // \"/project\" 엔드포인트로 요청해 사용자 정보를 불러옴.(userId는 req.currentUserId 사용)\n            const res = await Api.get(`project/${ownerId.userId}`);\n            // 사용자 정보는 response의 data임.\n            const ownerData = res.data;\n            // portfolioOwner을 해당 사용자 정보로 세팅함.\n            setDbItem(ownerData);\n        } catch (err) {\n            if (err.response.status === 400) {\n                alert(err.response.data.error);\n            }\n            console.log('사용자 데이터 불러오기에 실패하였습니다.', err);\n        }\n    };\n\n    const userId = portfolioOwnerId;\n\n    const handleSubmit = async (id) => {\n        const item = dbItem.filter((item) => item._id === id)[0];\n\n        if (item === undefined || item.isSave === false) {\n            try {\n                // \"/project\" 엔드포인트로 post요청함.(userId는 req.currentUserId 사용)\n                await Api.post(`project/`, {\n                    projectName,\n                    projectStartDate,\n                    projectEndDate,\n                    projectDescription,\n                    projectGitLink,\n                });\n\n                setIsToggle(false);\n                setIsEdit(false);\n\n                fetchProject({ userId });\n\n                setProjectName('');\n                setProjectStartDate('');\n                setProjectEndDate('');\n                setProjectDescription('');\n                setProjectGitLink('');\n            } catch (err) {\n                if (err.response.status === 400) {\n                    alert(err.response.data.error);\n                }\n                console.log('프로젝트 추가에 실패하였습니다.', err);\n            }\n        } else {\n            try {\n                // \"project/projectId\" 엔드포인트로 put요청함.\n                await Api.put(`project/${item._id}`, {\n                    projectName,\n                    projectStartDate,\n                    projectEndDate,\n                    projectDescription,\n                    projectGitLink,\n                });\n\n                setIsToggle(false);\n                setIsEdit(false);\n\n                fetchProject({ userId });\n            } catch (err) {\n                if (err.response.status === 400) {\n                    alert(err.response.data.error);\n                }\n                console.log('프로젝트 수정에 실패하였습니다.', err);\n            }\n        }\n    };\n\n    const handleEdit = (id) => {\n        setDbItem((prevItems) => {\n            return prevItems.map((item) => {\n                if (item._id === id) {\n                    return {\n                        ...item,\n                        isEdit: true,\n                    };\n                } else {\n                    return item;\n                }\n            });\n        });\n\n        const item = dbItem.filter((item) => item._id === id)[0];\n        setProjectName(item.projectName);\n        setProjectStartDate(item.projectStartDate);\n        setProjectEndDate(item.projectEndDate);\n        setProjectDescription(item.projectDescription);\n        setProjectGitLink(item.projectGitLink);\n\n        setcurrentEditId(item._id);\n        setIsEdit(true);\n    };\n\n    const handleCancel = () => {\n        fetchProject({ userId });\n\n        setIsToggle(false);\n        setIsEdit(false);\n    };\n\n    const handleDelete = async (id) => {\n        try {\n            // \"project/projectId\" 엔드포인트로 delete 요청함.\n            await Api.delete(`project/${id}`);\n\n            fetchProject({ userId });\n\n            setIsToggle(false);\n            setIsEdit(false);\n        } catch (err) {\n            if (err.response.status === 400) {\n                alert(err.response.data.error);\n            }\n            console.log('프로젝트 삭제에 실패하였습니다.', err);\n        }\n    };\n\n    useEffect(() => {\n        fetchProject({ userId });\n    }, [userId]);\n\n    const formSendFunction = {\n        handleSubmit,\n        handleCancel,\n        handleDelete,\n        onChangeName,\n        onChangeStartDate,\n        onChangeEndDate,\n        onChangeDescription,\n        onChangeGitLink,\n    };\n    const formSendcurrentData = {\n        projectName,\n        projectStartDate,\n        projectEndDate,\n        projectDescription,\n        projectGitLink,\n        currentEditId,\n    };\n    const formSendisFlag = { isDateValid };\n    const pSendFunction = { handleEdit };\n    const pSendisFlag = { isEditable, isToggle, isEdit };\n\n    return (\n        <div>\n            {dbItem.map((item) => (\n                <div key={item._id}>\n                    {item.isSave === true && item.isEdit === false ? (\n                        <ProjectP pSendFunction={pSendFunction} isFlag={pSendisFlag} item={item} />\n                    ) : (\n                        <ProjectForm\n                            formSendFunction={formSendFunction}\n                            currentData={formSendcurrentData}\n                            isFlag={formSendisFlag}\n                            item={item}\n                        />\n                    )}\n                </div>\n            ))}\n            {isToggle === true ? (\n                <div>\n                    <div className='mb-2'>\n                        <FloatingLabel controlId='floatingInput' label='수상 명' className='mb-3'>\n                            <Form.Control\n                                style={{ width: '100%' }}\n                                type='text'\n                                placeholder='프로젝트 명'\n                                value={projectName}\n                                onChange={onChangeName}\n                            />\n                        </FloatingLabel>\n                    </div>\n                    <div className='mb-2'>\n                        <FloatingLabel controlId='floatingInput' label='수상 명' className='mb-3'>\n                            <Form.Control\n                                style={{ width: '100%' }}\n                                type='date'\n                                placeholder='프로젝트 시작일자'\n                                value={projectStartDate}\n                                onChange={onChangeStartDate}\n                            />\n                        </FloatingLabel>\n                    </div>\n                    <div className='mb-2'>\n                        <FloatingLabel controlId='floatingInput' label='수상 명' className='mb-3'>\n                            <Form.Control\n                                style={{ width: '100%' }}\n                                type='date'\n                                placeholder='프로젝트 종료일자'\n                                value={projectEndDate}\n                                onChange={onChangeEndDate}\n                            />\n                        </FloatingLabel>\n                        {projectStartDate && projectEndDate && !isDateValid && (\n                            <Form.Text className='date-success'>프로젝트 시작일자보다 프로젝트 종료일자가 이전입니다.</Form.Text>\n                        )}\n                    </div>\n                    <div className='mb-2'>\n                        <FloatingLabel controlId='floatingInput' label='수상 명' className='mb-3'>\n                            <Form.Control\n                                style={{ width: '100%' }}\n                                type='text'\n                                placeholder='프로젝트 설명'\n                                value={projectDescription}\n                                onChange={onChangeDescription}\n                            />\n                        </FloatingLabel>\n                    </div>\n                    <div className='mb-2'>\n                        <FloatingLabel controlId='floatingInput' label='수상 명' className='mb-3'>\n                            <Form.Control\n                                style={{ width: '100%' }}\n                                type='text'\n                                placeholder='프로젝트 GitLink'\n                                value={projectGitLink}\n                                onChange={onChangeGitLink}\n                            />\n                        </FloatingLabel>\n                    </div>\n                    <div className='mb-3 text-center'>\n                        <React.Fragment>\n                            <Button className='me-2' variant='primary' onClick={() => handleSubmit()}>\n                                확인\n                            </Button>\n                            <Button variant='secondary' onClick={() => handleCancel()}>\n                                취소\n                            </Button>\n                        </React.Fragment>\n                    </div>\n                </div>\n            ) : (\n                ''\n            )}\n            {isEditable && (\n                <div className='mb-3 text-center'>\n                    {dbItem.length < 10 && (\n                        <Button variant='primary' onClick={AddInput} disabled={isToggle || isEdit ? true : false}>\n                            +\n                        </Button>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ProjectDetail;\n"]},"metadata":{},"sourceType":"module"}