{"ast":null,"code":"var _jsxFileName = \"/Users/luna/Documents/Elice_1st_Project/my_test/front/src/components/education/EducationDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport * as Api from '../../api';\nimport EducationForm from './EducationForm';\nimport EducationP from './EducationP';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EducationDetail(_ref) {\n  _s();\n\n  let {\n    portfolioOwnerId,\n    isEditable\n  } = _ref;\n  const [dbItem, setDbItem] = useState([]);\n  const [isToggle, setIsToggle] = useState(false); // 추가 버튼 클릭 유무\n\n  const [isEdit, setIsEdit] = useState(false); // 편집 버튼 클릭 유무\n\n  const [currentEditId, setcurrentEditId] = useState(''); // Edit 버튼을 클릭 시 버튼 표시를 구분하기 위한 값\n\n  const [eduSchool, setEduSchool] = useState(''); // 학교이름\n\n  const [eduMajor, setEduMajor] = useState(''); // 전공\n\n  const [eduEnterDate, setEduEnterDate] = useState(''); // 입학일자\n\n  const [eduGraduateDate, setEduGraduateDate] = useState(''); // 졸업일자\n\n  const [eduDegree, setEduDegree] = useState(''); // 학위\n\n  const isDateValid = eduEnterDate < eduGraduateDate;\n\n  const onChangeSchool = e => {\n    setEduSchool(e.target.value);\n  };\n\n  const onChangeMajor = e => {\n    setEduMajor(e.target.value);\n  };\n\n  const onChangeEnterDate = e => {\n    setEduEnterDate(e.target.value);\n  };\n\n  const onChangeGraduateDate = e => {\n    setEduGraduateDate(e.target.value);\n  };\n\n  const onChangeDegree = e => {\n    setEduDegree(e.target.value);\n  };\n\n  const AddInput = () => {\n    setIsToggle(true);\n    setEduSchool('');\n    setEduMajor('');\n    setEduEnterDate('');\n    setEduGraduateDate('');\n    setEduDegree('');\n  };\n\n  const fetchEducation = async ownerId => {\n    try {\n      // \"/edu\" 엔드포인트로 요청해 사용자 정보를 불러옴.(userId는 req.currentUserId 사용)\n      const res = await Api.get('edu'); // 사용자 정보는 response의 data임.\n\n      const ownerData = res.data; // portfolioOwner을 해당 사용자 정보로 세팅함.\n\n      setDbItem(ownerData);\n    } catch (err) {\n      console.log('사용자 데이터 불러오기에 실패하였습니다.', err);\n    }\n  };\n\n  const userId = portfolioOwnerId;\n\n  const handleSubmit = async id => {\n    const item = dbItem.filter(item => item._id === id)[0];\n\n    if (item === undefined || item.isSave === false) {\n      try {\n        if (!isDateValid) {\n          throw new Error('입학날짜보다 졸업일자가 이전입니다.');\n        }\n\n        try {\n          // \"/edu\" 엔드포인트로 post요청함.(userId는 req.currentUserId 사용)\n          await Api.post(`edu/`, {\n            eduSchool,\n            eduMajor,\n            eduEnterDate,\n            eduGraduateDate,\n            eduDegree\n          });\n          setIsToggle(false);\n          setIsEdit(false);\n          fetchEducation({\n            userId\n          });\n          setEduSchool('');\n          setEduMajor('');\n          setEduEnterDate('');\n          setEduGraduateDate('');\n          setEduDegree('');\n        } catch (err) {\n          console.log('학위 추가에 실패하였습니다.', err);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      try {\n        // \"edu/educationId\" 엔드포인트로 put요청함.\n        await Api.put(`edu/${item._id}`, {\n          eduSchool,\n          eduMajor,\n          eduEnterDate,\n          eduGraduateDate,\n          eduDegree\n        });\n        setIsToggle(false);\n        setIsEdit(false);\n        fetchEducation({\n          userId\n        });\n      } catch (err) {\n        console.log('학위 수정에 실패하였습니다.', err);\n      }\n    }\n  };\n\n  const handleEdit = id => {\n    setDbItem(prevItems => {\n      return prevItems.map(item => {\n        if (item._id === id) {\n          return { ...item,\n            isEdit: true\n          };\n        } else {\n          return item;\n        }\n      });\n    });\n    const item = dbItem.filter(item => item._id === id)[0];\n    setEduSchool(item.eduSchool);\n    setEduMajor(item.eduMajor);\n    setEduEnterDate(item.eduEnterDate);\n    setEduGraduateDate(item.eduGraduateDate);\n    setEduDegree(item.eduDegree);\n    setcurrentEditId(item._id);\n    setIsEdit(true);\n  };\n\n  const handleCancel = () => {\n    fetchEducation({\n      userId\n    });\n    setIsToggle(false);\n    setIsEdit(false);\n  };\n\n  const handleDelete = async id => {\n    try {\n      // \"edu/educationId\" 엔드포인트로 delete 요청함.\n      await Api.delete(`edu/${id}`);\n      fetchEducation({\n        userId\n      });\n      setIsToggle(false);\n      setIsEdit(false);\n    } catch (err) {\n      console.log('학위 삭제에 실패하였습니다.', err);\n    }\n  };\n\n  useEffect(() => {\n    fetchEducation({\n      userId\n    });\n  }, [userId]);\n  const formSendFunction = {\n    handleSubmit,\n    handleCancel,\n    handleDelete,\n    onChangeSchool,\n    onChangeMajor,\n    onChangeEnterDate,\n    onChangeGraduateDate,\n    onChangeDegree\n  };\n  const formSendcurrentData = {\n    eduSchool,\n    eduMajor,\n    eduEnterDate,\n    eduGraduateDate,\n    eduDegree,\n    currentEditId\n  };\n  const formSendisFlag = {\n    isDateValid\n  };\n  const pSendFunction = {\n    handleEdit\n  };\n  const pSendisFlag = {\n    isEditable\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [dbItem.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: item.isSave === true && item.isEdit === false ? /*#__PURE__*/_jsxDEV(EducationP, {\n        pSendFunction: pSendFunction,\n        isFlag: pSendisFlag,\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(EducationForm, {\n        formSendFunction: formSendFunction,\n        currentData: formSendcurrentData,\n        isFlag: formSendisFlag,\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }, this)\n    }, item._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }, this)), isToggle === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          style: {\n            width: '100%'\n          },\n          type: \"text\",\n          placeholder: \"\\uD559\\uAD50\\uC774\\uB984\",\n          value: eduSchool,\n          onChange: onChangeSchool\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          style: {\n            width: '100%'\n          },\n          type: \"text\",\n          placeholder: \"\\uC804\\uACF5\",\n          value: eduMajor,\n          onChange: onChangeMajor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          style: {\n            width: '100%'\n          },\n          type: \"date\",\n          placeholder: \"\\uC785\\uD559\\uC77C\\uC790\",\n          value: eduEnterDate,\n          onChange: onChangeEnterDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          style: {\n            width: '100%'\n          },\n          type: \"date\",\n          placeholder: \"\\uC878\\uC5C5\\uC77C\\uC790\",\n          value: eduGraduateDate,\n          onChange: onChangeGraduateDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 25\n        }, this), eduEnterDate && eduGraduateDate && !isDateValid && /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"date-success\",\n          children: \"\\uC785\\uD559\\uB0A0\\uC9DC\\uBCF4\\uB2E4 \\uC878\\uC5C5\\uC77C\\uC790\\uAC00 \\uC774\\uC804\\uC785\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n          inline: true,\n          type: \"radio\",\n          label: `재학중`,\n          onChange: onChangeDegree\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n          inline: true,\n          type: \"radio\",\n          label: `학사졸업`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n          inline: true,\n          type: \"radio\",\n          label: `석사졸업`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n          inline: true,\n          type: \"radio\",\n          label: `박사졸업`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 text-center\",\n        children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => handleSubmit(),\n            children: \"\\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 29\n          }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => handleCancel(),\n            children: \"\\uCDE8\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 29\n          }, this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }, this) : '', isEditable && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 text-center\",\n      children: dbItem.length < 10 && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: AddInput,\n        disabled: isToggle || isEdit ? true : false,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EducationDetail, \"PIBqlfQcC++CSvToofM3t32EjbU=\");\n\n_c = EducationDetail;\nexport default EducationDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"EducationDetail\");","map":{"version":3,"sources":["/Users/luna/Documents/Elice_1st_Project/my_test/front/src/components/education/EducationDetail.js"],"names":["React","useState","useEffect","Button","Form","Api","EducationForm","EducationP","EducationDetail","portfolioOwnerId","isEditable","dbItem","setDbItem","isToggle","setIsToggle","isEdit","setIsEdit","currentEditId","setcurrentEditId","eduSchool","setEduSchool","eduMajor","setEduMajor","eduEnterDate","setEduEnterDate","eduGraduateDate","setEduGraduateDate","eduDegree","setEduDegree","isDateValid","onChangeSchool","e","target","value","onChangeMajor","onChangeEnterDate","onChangeGraduateDate","onChangeDegree","AddInput","fetchEducation","ownerId","res","get","ownerData","data","err","console","log","userId","handleSubmit","id","item","filter","_id","undefined","isSave","Error","post","put","handleEdit","prevItems","map","handleCancel","handleDelete","delete","formSendFunction","formSendcurrentData","formSendisFlag","pSendFunction","pSendisFlag","width","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Form } from 'react-bootstrap';\n\nimport * as Api from '../../api';\n\nimport EducationForm from './EducationForm';\nimport EducationP from './EducationP';\n\nfunction EducationDetail({ portfolioOwnerId, isEditable }) {\n    const [dbItem, setDbItem] = useState([]);\n    const [isToggle, setIsToggle] = useState(false); // 추가 버튼 클릭 유무\n    const [isEdit, setIsEdit] = useState(false); // 편집 버튼 클릭 유무\n    const [currentEditId, setcurrentEditId] = useState(''); // Edit 버튼을 클릭 시 버튼 표시를 구분하기 위한 값\n\n    const [eduSchool, setEduSchool] = useState(''); // 학교이름\n    const [eduMajor, setEduMajor] = useState(''); // 전공\n    const [eduEnterDate, setEduEnterDate] = useState(''); // 입학일자\n    const [eduGraduateDate, setEduGraduateDate] = useState(''); // 졸업일자\n    const [eduDegree, setEduDegree] = useState(''); // 학위\n\n    const isDateValid = eduEnterDate < eduGraduateDate;\n\n    const onChangeSchool = (e) => {\n        setEduSchool(e.target.value);\n    };\n\n    const onChangeMajor = (e) => {\n        setEduMajor(e.target.value);\n    };\n\n    const onChangeEnterDate = (e) => {\n        setEduEnterDate(e.target.value);\n    };\n\n    const onChangeGraduateDate = (e) => {\n        setEduGraduateDate(e.target.value);\n    };\n\n    const onChangeDegree = (e) => {\n        setEduDegree(e.target.value);\n    };\n\n    const AddInput = () => {\n        setIsToggle(true);\n\n        setEduSchool('');\n        setEduMajor('');\n        setEduEnterDate('');\n        setEduGraduateDate('');\n        setEduDegree('');\n    };\n\n    const fetchEducation = async (ownerId) => {\n        try {\n            // \"/edu\" 엔드포인트로 요청해 사용자 정보를 불러옴.(userId는 req.currentUserId 사용)\n            const res = await Api.get('edu');\n            // 사용자 정보는 response의 data임.\n            const ownerData = res.data;\n            // portfolioOwner을 해당 사용자 정보로 세팅함.\n            setDbItem(ownerData);\n        } catch (err) {\n            console.log('사용자 데이터 불러오기에 실패하였습니다.', err);\n        }\n    };\n\n    const userId = portfolioOwnerId;\n\n    const handleSubmit = async (id) => {\n        const item = dbItem.filter((item) => item._id === id)[0];\n\n        if (item === undefined || item.isSave === false) {\n            try {\n                if (!isDateValid) {\n                    throw new Error('입학날짜보다 졸업일자가 이전입니다.');\n                }\n\n                try {\n                    // \"/edu\" 엔드포인트로 post요청함.(userId는 req.currentUserId 사용)\n                    await Api.post(`edu/`, {\n                        eduSchool,\n                        eduMajor,\n                        eduEnterDate,\n                        eduGraduateDate,\n                        eduDegree,\n                    });\n\n                    setIsToggle(false);\n                    setIsEdit(false);\n\n                    fetchEducation({ userId });\n\n                    setEduSchool('');\n                    setEduMajor('');\n                    setEduEnterDate('');\n                    setEduGraduateDate('');\n                    setEduDegree('');\n                } catch (err) {\n                    console.log('학위 추가에 실패하였습니다.', err);\n                }\n            } catch (err) {\n                console.log(err);\n            }\n        } else {\n            try {\n                // \"edu/educationId\" 엔드포인트로 put요청함.\n                await Api.put(`edu/${item._id}`, {\n                    eduSchool,\n                    eduMajor,\n                    eduEnterDate,\n                    eduGraduateDate,\n                    eduDegree,\n                });\n\n                setIsToggle(false);\n                setIsEdit(false);\n\n                fetchEducation({ userId });\n            } catch (err) {\n                console.log('학위 수정에 실패하였습니다.', err);\n            }\n        }\n    };\n\n    const handleEdit = (id) => {\n        setDbItem((prevItems) => {\n            return prevItems.map((item) => {\n                if (item._id === id) {\n                    return {\n                        ...item,\n                        isEdit: true,\n                    };\n                } else {\n                    return item;\n                }\n            });\n        });\n\n        const item = dbItem.filter((item) => item._id === id)[0];\n        setEduSchool(item.eduSchool);\n        setEduMajor(item.eduMajor);\n        setEduEnterDate(item.eduEnterDate);\n        setEduGraduateDate(item.eduGraduateDate);\n        setEduDegree(item.eduDegree);\n\n        setcurrentEditId(item._id);\n        setIsEdit(true);\n    };\n\n    const handleCancel = () => {\n        fetchEducation({ userId });\n\n        setIsToggle(false);\n        setIsEdit(false);\n    };\n\n    const handleDelete = async (id) => {\n        try {\n            // \"edu/educationId\" 엔드포인트로 delete 요청함.\n            await Api.delete(`edu/${id}`);\n\n            fetchEducation({ userId });\n\n            setIsToggle(false);\n            setIsEdit(false);\n        } catch (err) {\n            console.log('학위 삭제에 실패하였습니다.', err);\n        }\n    };\n\n    useEffect(() => {\n        fetchEducation({ userId });\n    }, [userId]);\n\n    const formSendFunction = {\n        handleSubmit,\n        handleCancel,\n        handleDelete,\n        onChangeSchool,\n        onChangeMajor,\n        onChangeEnterDate,\n        onChangeGraduateDate,\n        onChangeDegree,\n    };\n    const formSendcurrentData = { eduSchool, eduMajor, eduEnterDate, eduGraduateDate, eduDegree, currentEditId };\n    const formSendisFlag = { isDateValid };\n    const pSendFunction = { handleEdit };\n    const pSendisFlag = { isEditable };\n\n    return (\n        <div>\n            {dbItem.map((item) => (\n                <div key={item._id}>\n                    {item.isSave === true && item.isEdit === false ? (\n                        <EducationP pSendFunction={pSendFunction} isFlag={pSendisFlag} item={item} />\n                    ) : (\n                        <EducationForm\n                            formSendFunction={formSendFunction}\n                            currentData={formSendcurrentData}\n                            isFlag={formSendisFlag}\n                            item={item}\n                        />\n                    )}\n                </div>\n            ))}\n            {isToggle === true ? (\n                <div>\n                    <div className='mb-2'>\n                        <Form.Control\n                            style={{ width: '100%' }}\n                            type='text'\n                            placeholder='학교이름'\n                            value={eduSchool}\n                            onChange={onChangeSchool}\n                        />\n                    </div>\n                    <div className='mb-2'>\n                        <Form.Control\n                            style={{ width: '100%' }}\n                            type='text'\n                            placeholder='전공'\n                            value={eduMajor}\n                            onChange={onChangeMajor}\n                        />\n                    </div>\n                    <div className='mb-2'>\n                        <Form.Control\n                            style={{ width: '100%' }}\n                            type='date'\n                            placeholder='입학일자'\n                            value={eduEnterDate}\n                            onChange={onChangeEnterDate}\n                        />\n                    </div>\n                    <div className='mb-2'>\n                        <Form.Control\n                            style={{ width: '100%' }}\n                            type='date'\n                            placeholder='졸업일자'\n                            value={eduGraduateDate}\n                            onChange={onChangeGraduateDate}\n                        />\n                        {eduEnterDate && eduGraduateDate && !isDateValid && (\n                            <Form.Text className='date-success'>입학날짜보다 졸업일자가 이전입니다.</Form.Text>\n                        )}\n                    </div>\n                    <div className='mb-2'>\n                        <Form.Check inline type='radio' label={`재학중`} onChange={onChangeDegree} />\n                        <Form.Check inline type='radio' label={`학사졸업`} />\n                        <Form.Check inline type='radio' label={`석사졸업`} />\n                        <Form.Check inline type='radio' label={`박사졸업`} />\n                    </div>\n                    <div className='mb-3 text-center'>\n                        <React.Fragment>\n                            <Button variant='primary' onClick={() => handleSubmit()}>\n                                확인\n                            </Button>{' '}\n                            <Button variant='secondary' onClick={() => handleCancel()}>\n                                취소\n                            </Button>{' '}\n                        </React.Fragment>\n                    </div>\n                </div>\n            ) : (\n                ''\n            )}\n            {isEditable && (\n                <div className='mb-3 text-center'>\n                    {dbItem.length < 10 && (\n                        <Button variant='primary' onClick={AddInput} disabled={isToggle || isEdit ? true : false}>\n                            +\n                        </Button>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default EducationDetail;\n"]},"metadata":{},"sourceType":"module"}