{"ast":null,"code":"var _jsxFileName = \"/Users/luna/Documents/Elice_1st_Project/portfolio-share-service-racer/front/src/components/user/UserEditForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Form, Card, Col, Row } from \"react-bootstrap\";\nimport * as Api from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserEditForm(_ref) {\n  _s();\n\n  let {\n    user,\n    setIsEditing,\n    setUser\n  } = _ref;\n  //useState로 name 상태를 생성함.\n  const [name, setName] = useState(user.name); //useState로 email 상태를 생성함.\n\n  const [email, setEmail] = useState(user.email); //useState로 description 상태를 생성함.\n\n  const [description, setDescription] = useState(user.description); //useState로 gitLink 상태를 생성함.\n\n  const [gitLink, setGitLink] = useState(user.gitLink === \"undefined\" ? \"\" : user.gitLink); //useState로 userImage 상태를 생성함.\n\n  const [userImage, setUserImage] = useState(user.userImage);\n\n  const validateForm = () => {\n    if (userImage.size > 1024 * 1024) {\n      alert(\"이미지 크기는 1MB 이하여야 합니다.\");\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      if (!validateForm()) {\n        return;\n      }\n\n      const formData = new FormData();\n      formData.append(\"userImage\", userImage);\n      formData.append(\"name\", name);\n      formData.append(\"description\", description);\n      formData.append(\"gitLink\", gitLink); // \"user/유저id\" 엔드포인트로 PUT 요청함.\n\n      const res = await Api.putFile(`user/${user._id}`, formData); // 유저 정보는 response의 data임.\n\n      const updatedUser = res.data; // 해당 유저 정보로 user을 세팅함.\n\n      setUser(updatedUser); // isEditing을 false로 세팅함.\n\n      setIsEditing(false);\n    } catch (err) {\n      if (err.response.status === 400) {\n        alert(err.response.data.error);\n      }\n\n      console.log(\"유저 수정에 실패하였습니다.\", err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-2 ms-3 mr-5\",\n    style: {\n      width: \"18rem\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"useEditName\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"\\uC774\\uB984\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"userEditEmail\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"\\uC774\\uBA54\\uC77C\",\n            value: email,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"userEditDescription\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"\\uC815\\uBCF4, \\uC778\\uC0AC\\uB9D0\",\n            value: description,\n            onChange: e => setDescription(e.target.value),\n            maxLength: 15\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"userEditGitLink\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Git \\uC8FC\\uC18C\",\n            value: gitLink,\n            onChange: e => setGitLink(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"userEditGitLink\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"file\",\n            onChange: e => setUserImage(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Row,\n          className: \"mt-3 text-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            sm: {\n              span: 20\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              className: \"me-3\",\n              children: \"\\uD655\\uC778\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: () => setIsEditing(false),\n              children: \"\\uCDE8\\uC18C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserEditForm, \"Tq1zFxKEccRF8rpQ3Iwt8J9Xqo4=\");\n\n_c = UserEditForm;\nexport default UserEditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditForm\");","map":{"version":3,"sources":["/Users/luna/Documents/Elice_1st_Project/portfolio-share-service-racer/front/src/components/user/UserEditForm.js"],"names":["React","useState","Button","Form","Card","Col","Row","Api","UserEditForm","user","setIsEditing","setUser","name","setName","email","setEmail","description","setDescription","gitLink","setGitLink","userImage","setUserImage","validateForm","size","alert","handleSubmit","e","preventDefault","formData","FormData","append","res","putFile","_id","updatedUser","data","err","response","status","error","console","log","width","target","value","files","span"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,GAA7B,EAAkCC,GAAlC,QAA6C,iBAA7C;AACA,OAAO,KAAKC,GAAZ,MAAqB,WAArB;;;AAEA,SAASC,YAAT,OAAuD;AAAA;;AAAA,MAAjC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,YAAR;AAAsBC,IAAAA;AAAtB,GAAiC;AACrD;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAACQ,IAAI,CAACG,IAAN,CAAhC,CAFqD,CAGrD;;AACA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAACQ,IAAI,CAACK,KAAN,CAAlC,CAJqD,CAKrD;;AACA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAACQ,IAAI,CAACO,WAAN,CAA9C,CANqD,CAOrD;;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAACQ,IAAI,CAACS,OAAL,KAAiB,WAAjB,GAA+B,EAA/B,GAAoCT,IAAI,CAACS,OAA1C,CAAtC,CARqD,CASrD;;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAACQ,IAAI,CAACW,SAAN,CAA1C;;AAEA,QAAME,YAAY,GAAG,MAAM;AACzB,QAAIF,SAAS,CAACG,IAAV,GAAiB,OAAO,IAA5B,EAAkC;AAChCC,MAAAA,KAAK,CAAC,uBAAD,CAAL;AACA,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD,GAND;;AAQA,QAAMC,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACF,UAAI,CAACL,YAAY,EAAjB,EAAqB;AACnB;AACD;;AAED,YAAMM,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6BV,SAA7B;AACAQ,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBlB,IAAxB;AACAgB,MAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+Bd,WAA/B;AACAY,MAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BZ,OAA3B,EATE,CAWF;;AACA,YAAMa,GAAG,GAAG,MAAMxB,GAAG,CAACyB,OAAJ,CAAa,QAAOvB,IAAI,CAACwB,GAAI,EAA7B,EAAgCL,QAAhC,CAAlB,CAZE,CAaF;;AACA,YAAMM,WAAW,GAAGH,GAAG,CAACI,IAAxB,CAdE,CAeF;;AACAxB,MAAAA,OAAO,CAACuB,WAAD,CAAP,CAhBE,CAkBF;;AACAxB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KApBD,CAoBE,OAAO0B,GAAP,EAAY;AACZ,UAAIA,GAAG,CAACC,QAAJ,CAAaC,MAAb,KAAwB,GAA5B,EAAiC;AAC/Bd,QAAAA,KAAK,CAACY,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBI,KAAnB,CAAL;AACD;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BL,GAA/B;AACD;AACF,GA5BD;;AA8BA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAiC,IAAA,KAAK,EAAE;AAAEM,MAAAA,KAAK,EAAE;AAAT,KAAxC;AAAA,2BACE,QAAC,IAAD,CAAM,IAAN;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEjB,YAAhB;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,aAAtB;AAAoC,UAAA,SAAS,EAAC,MAA9C;AAAA,iCACE,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,MAAnB;AAA0B,YAAA,WAAW,EAAC,cAAtC;AAA2C,YAAA,KAAK,EAAEb,IAAlD;AAAwD,YAAA,QAAQ,EAAGc,CAAD,IAAOb,OAAO,CAACa,CAAC,CAACiB,MAAF,CAASC,KAAV;AAAhF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,eAAtB;AAAsC,UAAA,SAAS,EAAC,MAAhD;AAAA,iCACE,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,OAAnB;AAA2B,YAAA,WAAW,EAAC,oBAAvC;AAA6C,YAAA,KAAK,EAAE9B,KAApD;AAA2D,YAAA,QAAQ;AAAnE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF,eASE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,qBAAtB;AAA4C,UAAA,SAAS,EAAC,MAAtD;AAAA,iCACE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,WAAW,EAAC,kCAFd;AAGE,YAAA,KAAK,EAAEE,WAHT;AAIE,YAAA,QAAQ,EAAGU,CAAD,IAAOT,cAAc,CAACS,CAAC,CAACiB,MAAF,CAASC,KAAV,CAJjC;AAKE,YAAA,SAAS,EAAE;AALb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATF,eAmBE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,iBAAtB;AAAwC,UAAA,SAAS,EAAC,MAAlD;AAAA,iCACE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,WAAW,EAAC,kBAFd;AAGE,YAAA,KAAK,EAAE1B,OAHT;AAIE,YAAA,QAAQ,EAAGQ,CAAD,IAAOP,UAAU,CAACO,CAAC,CAACiB,MAAF,CAASC,KAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAnBF,eA4BE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,iBAAtB;AAAA,iCACE,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,MAAnB;AAA0B,YAAA,QAAQ,EAAGlB,CAAD,IAAOL,YAAY,CAACK,CAAC,CAACiB,MAAF,CAASE,KAAT,CAAe,CAAf,CAAD;AAAvD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA5BF,eAgCE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAEvC,GAAhB;AAAqB,UAAA,SAAS,EAAC,kBAA/B;AAAA,iCACE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE;AAAEwC,cAAAA,IAAI,EAAE;AAAR,aAAT;AAAA,oCACE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,SAAhB;AAA0B,cAAA,IAAI,EAAC,QAA/B;AAAwC,cAAA,SAAS,EAAC,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,WAAhB;AAA4B,cAAA,OAAO,EAAE,MAAMpC,YAAY,CAAC,KAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAhCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiDD;;GAnGQF,Y;;KAAAA,Y;AAqGT,eAAeA,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Form, Card, Col, Row } from \"react-bootstrap\";\nimport * as Api from \"../../api\";\n\nfunction UserEditForm({ user, setIsEditing, setUser }) {\n  //useState로 name 상태를 생성함.\n  const [name, setName] = useState(user.name);\n  //useState로 email 상태를 생성함.\n  const [email, setEmail] = useState(user.email);\n  //useState로 description 상태를 생성함.\n  const [description, setDescription] = useState(user.description);\n  //useState로 gitLink 상태를 생성함.\n  const [gitLink, setGitLink] = useState(user.gitLink === \"undefined\" ? \"\" : user.gitLink);\n  //useState로 userImage 상태를 생성함.\n  const [userImage, setUserImage] = useState(user.userImage);\n\n  const validateForm = () => {\n    if (userImage.size > 1024 * 1024) {\n      alert(\"이미지 크기는 1MB 이하여야 합니다.\");\n      return false;\n    }\n    return true;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (!validateForm()) {\n        return;\n      }\n\n      const formData = new FormData();\n      formData.append(\"userImage\", userImage);\n      formData.append(\"name\", name);\n      formData.append(\"description\", description);\n      formData.append(\"gitLink\", gitLink);\n\n      // \"user/유저id\" 엔드포인트로 PUT 요청함.\n      const res = await Api.putFile(`user/${user._id}`, formData);\n      // 유저 정보는 response의 data임.\n      const updatedUser = res.data;\n      // 해당 유저 정보로 user을 세팅함.\n      setUser(updatedUser);\n\n      // isEditing을 false로 세팅함.\n      setIsEditing(false);\n    } catch (err) {\n      if (err.response.status === 400) {\n        alert(err.response.data.error);\n      }\n      console.log(\"유저 수정에 실패하였습니다.\", err);\n    }\n  };\n\n  return (\n    <Card className=\"mb-2 ms-3 mr-5\" style={{ width: \"18rem\" }}>\n      <Card.Body>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group controlId=\"useEditName\" className=\"mb-3\">\n            <Form.Control type=\"text\" placeholder=\"이름\" value={name} onChange={(e) => setName(e.target.value)} />\n          </Form.Group>\n\n          <Form.Group controlId=\"userEditEmail\" className=\"mb-3\">\n            <Form.Control type=\"email\" placeholder=\"이메일\" value={email} disabled />\n          </Form.Group>\n\n          <Form.Group controlId=\"userEditDescription\" className=\"mb-3\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"정보, 인사말\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              maxLength={15}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"userEditGitLink\" className=\"mb-3\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Git 주소\"\n              value={gitLink}\n              onChange={(e) => setGitLink(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"userEditGitLink\">\n            <Form.Control type=\"file\" onChange={(e) => setUserImage(e.target.files[0])} />\n          </Form.Group>\n\n          <Form.Group as={Row} className=\"mt-3 text-center\">\n            <Col sm={{ span: 20 }}>\n              <Button variant=\"primary\" type=\"submit\" className=\"me-3\">\n                확인\n              </Button>\n              <Button variant=\"secondary\" onClick={() => setIsEditing(false)}>\n                취소\n              </Button>\n            </Col>\n          </Form.Group>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default UserEditForm;\n"]},"metadata":{},"sourceType":"module"}