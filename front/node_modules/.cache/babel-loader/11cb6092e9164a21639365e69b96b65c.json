{"ast":null,"code":"var _jsxFileName = \"/Users/luna/Documents/Elice_1st_Project/my_test/front/src/components/certificate/CertificateDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport * as Api from '../../api';\nimport CertificateForm from './CertificateForm';\nimport CertificateP from './CertificateP';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CertificateDetail(_ref) {\n  _s();\n\n  let {\n    portfolioOwnerId,\n    isEditable\n  } = _ref;\n  const [dbItem, setDbItem] = useState([]);\n  const [isToggle, setIsToggle] = useState(false); // 추가 버튼 클릭 유무\n\n  const [isEdit, setIsEdit] = useState(false); // 편집 버튼 클릭 유무\n\n  const [currentEditId, setcurrentEditId] = useState(''); // Edit 버튼을 클릭 시 버튼 표시를 구분하기 위한 값\n\n  const [certName, setCertName] = useState(''); // 자격증 명\n\n  const [certAcDate, setCertAcDate] = useState(''); // 취득일자\n\n  const onChangeName = e => {\n    setCertName(e.target.value);\n  };\n\n  const onChangeDate = e => {\n    setCertAcDate(e.target.value);\n  };\n\n  const AddInput = () => {\n    setIsToggle(true);\n    setCertName('');\n    setCertAcDate('');\n  };\n\n  const fetchCert = async ownerId => {\n    try {\n      // \"/cert\" 엔드포인트로 요청해 사용자 정보를 불러옴.(userId는 req.currentUserId 사용)\n      const res = await Api.get('cert'); // 사용자 정보는 response의 data임.\n\n      const ownerData = res.data; // portfolioOwner을 해당 사용자 정보로 세팅함.\n\n      setDbItem(ownerData);\n    } catch (err) {\n      console.log('사용자 데이터 불러오기에 실패하였습니다.', err);\n    }\n  };\n\n  const userId = portfolioOwnerId;\n\n  const handleSubmit = async id => {\n    const item = dbItem.filter(item => item._id === id)[0];\n\n    if (item === undefined || item.isSave === false) {\n      try {\n        // \"/cert\" 엔드포인트로 post요청함.(userId는 req.currentUserId 사용)\n        await Api.post(`cert/`, {\n          certName,\n          certAcDate\n        });\n        setIsToggle(false);\n        setIsEdit(false);\n        fetchCert({\n          userId\n        });\n        setCertName('');\n        setCertAcDate('');\n      } catch (err) {\n        console.log('자격증 추가에 실패하였습니다.', err);\n      }\n    } else {\n      try {\n        // \"cert/certId\" 엔드포인트로 put요청함.\n        await Api.put(`cert/${item._id}`, {\n          certName,\n          certAcDate\n        });\n        setIsToggle(false);\n        setIsEdit(false);\n        fetchCert({\n          userId\n        });\n      } catch (err) {\n        console.log('자격증 수정에 실패하였습니다.', err);\n      }\n    }\n  };\n\n  const handleEdit = id => {\n    setDbItem(prevItems => {\n      return prevItems.map(item => {\n        if (item._id === id) {\n          return { ...item,\n            isEdit: true\n          };\n        } else {\n          return item;\n        }\n      });\n    });\n    const item = dbItem.filter(item => item._id === id)[0];\n    setCertName(item.certName);\n    setCertAcDate(item.certAcDate);\n    setcurrentEditId(item._id);\n    setIsEdit(true);\n  };\n\n  const handleCancel = () => {\n    fetchCert({\n      userId\n    });\n    setIsToggle(false);\n    setIsEdit(false);\n  };\n\n  const handleDelete = async id => {\n    try {\n      // \"cert/certId\" 엔드포인트로 delete 요청함.\n      await Api.delete(`cert/${id}`);\n      fetchCert({\n        userId\n      });\n      setIsToggle(false);\n      setIsEdit(false);\n    } catch (err) {\n      console.log('자격증 삭제에 실패하였습니다.', err);\n    }\n  };\n\n  useEffect(() => {\n    fetchCert({\n      userId\n    });\n  }, [userId]);\n  const formSendFunction = {\n    handleSubmit,\n    handleCancel,\n    handleDelete,\n    onChangeName,\n    onChangeDate\n  };\n  const formSendcurrentData = {\n    certName,\n    certAcDate,\n    currentEditId\n  };\n  const pSendFunction = {\n    handleEdit\n  };\n  const pSendisFlag = {\n    isEditable\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [dbItem.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: item.isSave === true && item.isEdit === false ? /*#__PURE__*/_jsxDEV(CertificateP, {\n        pSendFunction: pSendFunction,\n        isFlag: pSendisFlag,\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(CertificateForm, {\n        formSendFunction: formSendFunction,\n        currentData: formSendcurrentData,\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }, this)\n    }, item._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }, this)), isToggle === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          style: {\n            width: '100%'\n          },\n          type: \"text\",\n          placeholder: \"\\uC790\\uACA9\\uC99D \\uBA85\",\n          value: certName,\n          onChange: onChangeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          style: {\n            width: '100%'\n          },\n          type: \"date\",\n          placeholder: \"\\uCDE8\\uB4DD\\uC77C\\uC790\",\n          value: certAcDate,\n          onChange: onChangeDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 text-center\",\n        children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => handleSubmit(),\n            children: \"\\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 29\n          }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => handleCancel(),\n            children: \"\\uCDE8\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 29\n          }, this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }, this) : '', isEditable && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 text-center\",\n      children: dbItem.length < 10 && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: AddInput,\n        disabled: isToggle || isEdit ? true : false,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CertificateDetail, \"hU9xQ7KqRG8h/A3dF0L86Jfiqmk=\");\n\n_c = CertificateDetail;\nexport default CertificateDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"CertificateDetail\");","map":{"version":3,"sources":["/Users/luna/Documents/Elice_1st_Project/my_test/front/src/components/certificate/CertificateDetail.js"],"names":["React","useState","useEffect","Button","Form","Api","CertificateForm","CertificateP","CertificateDetail","portfolioOwnerId","isEditable","dbItem","setDbItem","isToggle","setIsToggle","isEdit","setIsEdit","currentEditId","setcurrentEditId","certName","setCertName","certAcDate","setCertAcDate","onChangeName","e","target","value","onChangeDate","AddInput","fetchCert","ownerId","res","get","ownerData","data","err","console","log","userId","handleSubmit","id","item","filter","_id","undefined","isSave","post","put","handleEdit","prevItems","map","handleCancel","handleDelete","delete","formSendFunction","formSendcurrentData","pSendFunction","pSendisFlag","width","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Form } from 'react-bootstrap';\n\nimport * as Api from '../../api';\n\nimport CertificateForm from './CertificateForm';\nimport CertificateP from './CertificateP';\n\nfunction CertificateDetail({ portfolioOwnerId, isEditable }) {\n    const [dbItem, setDbItem] = useState([]);\n    const [isToggle, setIsToggle] = useState(false); // 추가 버튼 클릭 유무\n    const [isEdit, setIsEdit] = useState(false); // 편집 버튼 클릭 유무\n    const [currentEditId, setcurrentEditId] = useState(''); // Edit 버튼을 클릭 시 버튼 표시를 구분하기 위한 값\n\n    const [certName, setCertName] = useState(''); // 자격증 명\n    const [certAcDate, setCertAcDate] = useState(''); // 취득일자\n\n    const onChangeName = (e) => {\n        setCertName(e.target.value);\n    };\n\n    const onChangeDate = (e) => {\n        setCertAcDate(e.target.value);\n    };\n\n    const AddInput = () => {\n        setIsToggle(true);\n\n        setCertName('');\n        setCertAcDate('');\n    };\n\n    const fetchCert = async (ownerId) => {\n        try {\n            // \"/cert\" 엔드포인트로 요청해 사용자 정보를 불러옴.(userId는 req.currentUserId 사용)\n            const res = await Api.get('cert');\n            // 사용자 정보는 response의 data임.\n            const ownerData = res.data;\n            // portfolioOwner을 해당 사용자 정보로 세팅함.\n            setDbItem(ownerData);\n        } catch (err) {\n            console.log('사용자 데이터 불러오기에 실패하였습니다.', err);\n        }\n    };\n\n    const userId = portfolioOwnerId;\n\n    const handleSubmit = async (id) => {\n        const item = dbItem.filter((item) => item._id === id)[0];\n\n        if (item === undefined || item.isSave === false) {\n            try {\n                // \"/cert\" 엔드포인트로 post요청함.(userId는 req.currentUserId 사용)\n                await Api.post(`cert/`, {\n                    certName,\n                    certAcDate,\n                });\n\n                setIsToggle(false);\n                setIsEdit(false);\n\n                fetchCert({ userId });\n\n                setCertName('');\n                setCertAcDate('');\n            } catch (err) {\n                console.log('자격증 추가에 실패하였습니다.', err);\n            }\n        } else {\n            try {\n                // \"cert/certId\" 엔드포인트로 put요청함.\n                await Api.put(`cert/${item._id}`, {\n                    certName,\n                    certAcDate,\n                });\n\n                setIsToggle(false);\n                setIsEdit(false);\n\n                fetchCert({ userId });\n            } catch (err) {\n                console.log('자격증 수정에 실패하였습니다.', err);\n            }\n        }\n    };\n\n    const handleEdit = (id) => {\n        setDbItem((prevItems) => {\n            return prevItems.map((item) => {\n                if (item._id === id) {\n                    return {\n                        ...item,\n                        isEdit: true,\n                    };\n                } else {\n                    return item;\n                }\n            });\n        });\n\n        const item = dbItem.filter((item) => item._id === id)[0];\n        setCertName(item.certName);\n        setCertAcDate(item.certAcDate);\n\n        setcurrentEditId(item._id);\n        setIsEdit(true);\n    };\n\n    const handleCancel = () => {\n        fetchCert({ userId });\n\n        setIsToggle(false);\n        setIsEdit(false);\n    };\n\n    const handleDelete = async (id) => {\n        try {\n            // \"cert/certId\" 엔드포인트로 delete 요청함.\n            await Api.delete(`cert/${id}`);\n\n            fetchCert({ userId });\n\n            setIsToggle(false);\n            setIsEdit(false);\n        } catch (err) {\n            console.log('자격증 삭제에 실패하였습니다.', err);\n        }\n    };\n\n    useEffect(() => {\n        fetchCert({ userId });\n    }, [userId]);\n\n    const formSendFunction = { handleSubmit, handleCancel, handleDelete, onChangeName, onChangeDate };\n    const formSendcurrentData = { certName, certAcDate, currentEditId };\n    const pSendFunction = { handleEdit };\n    const pSendisFlag = { isEditable };\n\n    return (\n        <div>\n            {dbItem.map((item) => (\n                <div key={item._id}>\n                    {item.isSave === true && item.isEdit === false ? (\n                        <CertificateP pSendFunction={pSendFunction} isFlag={pSendisFlag} item={item} />\n                    ) : (\n                        <CertificateForm\n                            formSendFunction={formSendFunction}\n                            currentData={formSendcurrentData}\n                            item={item}\n                        />\n                    )}\n                </div>\n            ))}\n            {isToggle === true ? (\n                <div>\n                    <div className='mb-2'>\n                        <Form.Control\n                            style={{ width: '100%' }}\n                            type='text'\n                            placeholder='자격증 명'\n                            value={certName}\n                            onChange={onChangeName}\n                        />\n                    </div>\n                    <div className='mb-2'>\n                        <Form.Control\n                            style={{ width: '100%' }}\n                            type='date'\n                            placeholder='취득일자'\n                            value={certAcDate}\n                            onChange={onChangeDate}\n                        />\n                    </div>\n                    <div className='mb-3 text-center'>\n                        <React.Fragment>\n                            <Button variant='primary' onClick={() => handleSubmit()}>\n                                확인\n                            </Button>{' '}\n                            <Button variant='secondary' onClick={() => handleCancel()}>\n                                취소\n                            </Button>{' '}\n                        </React.Fragment>\n                    </div>\n                </div>\n            ) : (\n                ''\n            )}\n            {isEditable && (\n                <div className='mb-3 text-center'>\n                    {dbItem.length < 10 && (\n                        <Button variant='primary' onClick={AddInput} disabled={isToggle || isEdit ? true : false}>\n                            +\n                        </Button>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default CertificateDetail;\n"]},"metadata":{},"sourceType":"module"}