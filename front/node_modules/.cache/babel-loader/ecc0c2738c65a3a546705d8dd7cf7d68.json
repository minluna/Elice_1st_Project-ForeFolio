{"ast":null,"code":"var _jsxFileName = \"/Users/luna/Documents/Elice_1st_Project/my_test/front/src/components/user/UserEditForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Form, Card, Col, Row } from 'react-bootstrap';\nimport * as Api from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserEditForm(_ref) {\n  _s();\n\n  let {\n    user,\n    setIsEditing,\n    setUser\n  } = _ref;\n  //useState로 name 상태를 생성함.\n  const [name, setName] = useState(user.name); //useState로 email 상태를 생성함.\n\n  const [email, setEmail] = useState(user.email); //useState로 description 상태를 생성함.\n\n  const [description, setDescription] = useState(user.description); //useState로 gitLink 상태를 생성함.\n\n  const [gitLink, setGitLink] = useState(user.gitLink);\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // \"users/유저id\" 엔드포인트로 PUT 요청함.\n\n    const res = await Api.put(`users/${user.id}`, {\n      name,\n      email,\n      description,\n      gitLink\n    }); // 유저 정보는 response의 data임.\n\n    const updatedUser = res.data; // 해당 유저 정보로 user을 세팅함.\n\n    setUser(updatedUser); // isEditing을 false로 세팅함.\n\n    setIsEditing(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-2\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"useEditName\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"\\uC774\\uB984\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"userEditEmail\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"\\uC774\\uBA54\\uC77C\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"userEditDescription\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"\\uC815\\uBCF4, \\uC778\\uC0AC\\uB9D0\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Row,\n          className: \"mt-3 text-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            sm: {\n              span: 20\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              className: \"me-3\",\n              children: \"\\uD655\\uC778\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: () => setIsEditing(false),\n              children: \"\\uCDE8\\uC18C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserEditForm, \"mdtlkeeRQfBd5vyxEGNTINUWCgU=\");\n\n_c = UserEditForm;\nexport default UserEditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditForm\");","map":{"version":3,"sources":["/Users/luna/Documents/Elice_1st_Project/my_test/front/src/components/user/UserEditForm.js"],"names":["React","useState","Button","Form","Card","Col","Row","Api","UserEditForm","user","setIsEditing","setUser","name","setName","email","setEmail","description","setDescription","gitLink","setGitLink","handleSubmit","e","preventDefault","res","put","id","updatedUser","data","target","value","span"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Form, Card, Col, Row } from 'react-bootstrap';\nimport * as Api from '../../api';\n\nfunction UserEditForm({ user, setIsEditing, setUser }) {\n    //useState로 name 상태를 생성함.\n    const [name, setName] = useState(user.name);\n    //useState로 email 상태를 생성함.\n    const [email, setEmail] = useState(user.email);\n    //useState로 description 상태를 생성함.\n    const [description, setDescription] = useState(user.description);\n    //useState로 gitLink 상태를 생성함.\n    const [gitLink, setGitLink] = useState(user.gitLink);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        // \"users/유저id\" 엔드포인트로 PUT 요청함.\n        const res = await Api.put(`users/${user.id}`, {\n            name,\n            email,\n            description,\n            gitLink,\n        });\n        // 유저 정보는 response의 data임.\n        const updatedUser = res.data;\n        // 해당 유저 정보로 user을 세팅함.\n        setUser(updatedUser);\n\n        // isEditing을 false로 세팅함.\n        setIsEditing(false);\n    };\n\n    return (\n        <Card className='mb-2'>\n            <Card.Body>\n                <Form onSubmit={handleSubmit}>\n                    <Form.Group controlId='useEditName' className='mb-3'>\n                        <Form.Control type='text' placeholder='이름' value={name} onChange={(e) => setName(e.target.value)} />\n                    </Form.Group>\n\n                    <Form.Group controlId='userEditEmail' className='mb-3'>\n                        <Form.Control\n                            type='email'\n                            placeholder='이메일'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        />\n                    </Form.Group>\n\n                    <Form.Group controlId='userEditDescription'>\n                        <Form.Control\n                            type='text'\n                            placeholder='정보, 인사말'\n                            value={description}\n                            onChange={(e) => setDescription(e.target.value)}\n                        />\n                    </Form.Group>\n\n                    <Form.Group as={Row} className='mt-3 text-center'>\n                        <Col sm={{ span: 20 }}>\n                            <Button variant='primary' type='submit' className='me-3'>\n                                확인\n                            </Button>\n                            <Button variant='secondary' onClick={() => setIsEditing(false)}>\n                                취소\n                            </Button>\n                        </Col>\n                    </Form.Group>\n                </Form>\n            </Card.Body>\n        </Card>\n    );\n}\n\nexport default UserEditForm;\n"]},"metadata":{},"sourceType":"module"}