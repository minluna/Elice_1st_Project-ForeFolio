{"ast":null,"code":"var _jsxFileName = \"/Users/luna/Documents/Elice_1st_Project/my_test/front/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, createContext } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport * as Api from './api';\nimport { loginReducer } from './reducer';\nimport Header from './components/header/Header';\nimport LoginForm from './pages/login/LoginForm';\nimport Network from './pages/network/Network';\nimport RegisterForm from './pages/register/RegisterForm';\nimport Portfolio from './pages/portfolio/Portfolio';\nimport Wanted from './pages/wanted/Wanted';\nimport WantedCreate from './pages/wanted/WantedCreate';\nimport WantedRead from './pages/wanted/WantedRead';\nimport WantedUpdate from './pages/wanted/WantedUpdate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserStateContext = /*#__PURE__*/createContext(null);\nexport const DispatchContext = /*#__PURE__*/createContext(null);\n\nfunction App() {\n  _s();\n\n  // useReducer 훅을 통해 userState 상태와 dispatch함수를 생성함.\n  const [userState, dispatch] = useReducer(loginReducer, {\n    user: null\n  }); // 아래의 fetchCurrentUser 함수가 실행된 다음에 컴포넌트가 구현되도록 함.\n  // 아래 코드를 보면 isFetchCompleted 가 true여야 컴포넌트가 구현됨.\n\n  const [isFetchCompleted, setIsFetchCompleted] = useState(false);\n\n  const fetchCurrentUser = async () => {\n    try {\n      // 이전에 발급받은 토큰이 있다면, 이를 가지고 유저 정보를 받아옴.\n      const res = await Api.get('user/current');\n      const currentUser = res.data; // dispatch 함수를 통해 로그인 성공 상태로 만듦.\n\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: currentUser\n      });\n      console.log('%c sessionStorage에 토큰 있음.', 'color: #d93d1a;');\n    } catch {\n      console.log('%c SessionStorage에 토큰 없음.', 'color: #d93d1a;');\n    } // fetchCurrentUser 과정이 끝났으므로, isFetchCompleted 상태를 true로 바꿔줌\n\n\n    setIsFetchCompleted(true);\n  }; // useEffect함수를 통해 fetchCurrentUser 함수를 실행함.\n\n\n  useEffect(() => {\n    fetchCurrentUser();\n  }, []);\n\n  if (!isFetchCompleted) {\n    return 'loading...';\n  }\n\n  console.log(userState);\n  return /*#__PURE__*/_jsxDEV(DispatchContext.Provider, {\n    value: dispatch,\n    children: /*#__PURE__*/_jsxDEV(UserStateContext.Provider, {\n      value: userState,\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            element: /*#__PURE__*/_jsxDEV(Portfolio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 56\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 55\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            element: /*#__PURE__*/_jsxDEV(RegisterForm, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 58\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/users/:userId\",\n            element: /*#__PURE__*/_jsxDEV(Portfolio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 63\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/network\",\n            element: /*#__PURE__*/_jsxDEV(Network, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/wanted\",\n            element: /*#__PURE__*/_jsxDEV(Wanted, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 56\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/wanted/create\",\n            element: /*#__PURE__*/_jsxDEV(WantedCreate, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 63\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/wanted/read\",\n            element: /*#__PURE__*/_jsxDEV(WantedRead, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 61\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/wanted/update\",\n            element: /*#__PURE__*/_jsxDEV(WantedUpdate, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 63\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(Portfolio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"Ught9RutyZMDaDSAObN0+bonukg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/luna/Documents/Elice_1st_Project/my_test/front/src/App.js"],"names":["React","useState","useEffect","useReducer","createContext","BrowserRouter","Router","Routes","Route","Api","loginReducer","Header","LoginForm","Network","RegisterForm","Portfolio","Wanted","WantedCreate","WantedRead","WantedUpdate","UserStateContext","DispatchContext","App","userState","dispatch","user","isFetchCompleted","setIsFetchCompleted","fetchCurrentUser","res","get","currentUser","data","type","payload","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer, createContext } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport * as Api from './api';\nimport { loginReducer } from './reducer';\n\nimport Header from './components/header/Header';\nimport LoginForm from './pages/login/LoginForm';\nimport Network from './pages/network/Network';\nimport RegisterForm from './pages/register/RegisterForm';\nimport Portfolio from './pages/portfolio/Portfolio';\nimport Wanted from './pages/wanted/Wanted';\nimport WantedCreate from './pages/wanted/WantedCreate';\nimport WantedRead from './pages/wanted/WantedRead';\nimport WantedUpdate from './pages/wanted/WantedUpdate';\n\nexport const UserStateContext = createContext(null);\nexport const DispatchContext = createContext(null);\n\nfunction App() {\n    // useReducer 훅을 통해 userState 상태와 dispatch함수를 생성함.\n    const [userState, dispatch] = useReducer(loginReducer, {\n        user: null,\n    });\n\n    // 아래의 fetchCurrentUser 함수가 실행된 다음에 컴포넌트가 구현되도록 함.\n    // 아래 코드를 보면 isFetchCompleted 가 true여야 컴포넌트가 구현됨.\n    const [isFetchCompleted, setIsFetchCompleted] = useState(false);\n\n    const fetchCurrentUser = async () => {\n        try {\n            // 이전에 발급받은 토큰이 있다면, 이를 가지고 유저 정보를 받아옴.\n            const res = await Api.get('user/current');\n            const currentUser = res.data;\n\n            // dispatch 함수를 통해 로그인 성공 상태로 만듦.\n            dispatch({\n                type: 'LOGIN_SUCCESS',\n                payload: currentUser,\n            });\n\n            console.log('%c sessionStorage에 토큰 있음.', 'color: #d93d1a;');\n        } catch {\n            console.log('%c SessionStorage에 토큰 없음.', 'color: #d93d1a;');\n        }\n        // fetchCurrentUser 과정이 끝났으므로, isFetchCompleted 상태를 true로 바꿔줌\n        setIsFetchCompleted(true);\n    };\n\n    // useEffect함수를 통해 fetchCurrentUser 함수를 실행함.\n    useEffect(() => {\n        fetchCurrentUser();\n    }, []);\n\n    if (!isFetchCompleted) {\n        return 'loading...';\n    }\n    console.log(userState);\n    return (\n        <DispatchContext.Provider value={dispatch}>\n            <UserStateContext.Provider value={userState}>\n                <Router>\n                    <Header />\n                    <Routes>\n                        <Route path='/' exact element={<Portfolio />} />\n                        <Route path='/login' element={<LoginForm />} />\n                        <Route path='/register' element={<RegisterForm />} />\n                        <Route path='/users/:userId' element={<Portfolio />} />\n                        <Route path='/network' element={<Network />} />\n                        <Route path='/wanted' element={<Wanted />} />\n                        <Route path='/wanted/create' element={<WantedCreate />} />\n                        <Route path='/wanted/read' element={<WantedRead />} />\n                        <Route path='/wanted/update' element={<WantedUpdate />} />\n                        <Route path='*' element={<Portfolio />} />\n                    </Routes>\n                </Router>\n            </UserStateContext.Provider>\n        </DispatchContext.Provider>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}