{"ast":null,"code":"var _jsxFileName = \"/Users/luna/Documents/Elice_1st_Project/portfolio-share-service-racer/front/src/pages/wanted/Wanted.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useContext, useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Row, Col, Badge, ListGroup, Button } from 'react-bootstrap';\nimport * as Api from '../../api';\nimport { UserStateContext } from '../../App';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentCount = _ref => {\n  _s();\n\n  let {\n    wantedId\n  } = _ref;\n  const [count, setCount] = useState(0);\n  const fetchWantedCommentLength = useCallback(async () => {\n    const res = await Api.get(`comment/${wantedId}`);\n    const commentLength = res.data.length;\n    setCount(commentLength);\n  }, [wantedId]);\n  useEffect(() => {\n    fetchWantedCommentLength();\n  }, [fetchWantedCommentLength]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: count\n  }, void 0, false);\n};\n\n_s(CommentCount, \"LPNhoPHp6RN7yT4REqXWHJ6D6LY=\");\n\n_c = CommentCount;\n\nfunction Wanted() {\n  _s2();\n\n  const navigate = useNavigate();\n  const userState = useContext(UserStateContext); // useState 훅을 통해 users 상태를 생성함.\n\n  const [wantedList, setWantedList] = useState([]);\n  useEffect(() => {\n    // 만약 전역 상태의 user가 null이라면, 로그인 페이지로 이동함.\n    if (!userState.user) {\n      navigate('/login');\n      return;\n    }\n\n    try {\n      // \"wantedlist\" 엔드포인트로 GET 요청을 하고, wantedList response의 data로 세팅함.\n      Api.get('wanted').then(res => setWantedList(res.data));\n    } catch (err) {\n      if (err.response.status === 400) {\n        alert(err.response.data.error);\n      }\n\n      console.log('wantedList를 불러오는데 실패했습니다.', err);\n    }\n  }, [userState, navigate]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"text-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD300\\uC6D0 \\uAD6C\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uD300\\uC6D0 \\uBAA8\\uC9D1\\uC744 \\uD655\\uC778\\uD558\\uACE0 \\uD504\\uB85C\\uC81D\\uD2B8\\uC5D0 \\uCC38\\uC5EC\\uD574\\uBCF4\\uC138\\uC694.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), \"\\uC6D0\\uD558\\uB294 \\uD504\\uB85C\\uC81D\\uD2B8\\uAC00 \\uC5C6\\uC744 \\uACBD\\uC6B0 \\uC9C1\\uC811 \\uD300\\uC6D0\\uC744 \\uBAA8\\uC9D1\\uD560 \\uC218 \\uC788\\uC5B4\\uC694.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"position-relative\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"m-3 position-absolute bottom-0 end-0\",\n          variant: \"primary\",\n          onClick: () => navigate('/wanted/create'),\n          children: \"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: wantedList.map(item => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          action: true,\n          as: \"li\",\n          className: \"d-flex justify-content-between align-items-start \",\n          onClick: () => navigate('/wanted/read', {\n            state: {\n              wanted: item\n            }\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ms-2 me-auto\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fw-bold\",\n              children: item.wantedTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this), item.wantedContent]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Badge, {\n            bg: \"primary\",\n            pill: true,\n            children: /*#__PURE__*/_jsxDEV(CommentCount, {\n              wantedId: item._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this)]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Wanted, \"krQd5o9KdApidBaZfeXF8hLg+eU=\", false, function () {\n  return [useNavigate];\n});\n\n_c2 = Wanted;\nexport default Wanted;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CommentCount\");\n$RefreshReg$(_c2, \"Wanted\");","map":{"version":3,"sources":["/Users/luna/Documents/Elice_1st_Project/portfolio-share-service-racer/front/src/pages/wanted/Wanted.js"],"names":["React","useEffect","useContext","useState","useCallback","useNavigate","Container","Row","Col","Badge","ListGroup","Button","Api","UserStateContext","CommentCount","wantedId","count","setCount","fetchWantedCommentLength","res","get","commentLength","data","length","Wanted","navigate","userState","wantedList","setWantedList","user","then","err","response","status","alert","error","console","log","map","item","state","wanted","wantedTitle","wantedContent","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Row, Col, Badge, ListGroup, Button } from 'react-bootstrap';\n\nimport * as Api from '../../api';\nimport { UserStateContext } from '../../App';\n\nconst CommentCount = ({ wantedId }) => {\n    const [count, setCount] = useState(0);\n    const fetchWantedCommentLength = useCallback(async () => {\n        const res = await Api.get(`comment/${wantedId}`);\n        const commentLength = res.data.length;\n        setCount(commentLength);\n    }, [wantedId]);\n\n    useEffect(() => {\n        fetchWantedCommentLength();\n    }, [fetchWantedCommentLength]);\n    return <>{count}</>;\n};\n\nfunction Wanted() {\n    const navigate = useNavigate();\n    const userState = useContext(UserStateContext);\n    // useState 훅을 통해 users 상태를 생성함.\n    const [wantedList, setWantedList] = useState([]);\n\n    useEffect(() => {\n        // 만약 전역 상태의 user가 null이라면, 로그인 페이지로 이동함.\n        if (!userState.user) {\n            navigate('/login');\n            return;\n        }\n        try {\n            // \"wantedlist\" 엔드포인트로 GET 요청을 하고, wantedList response의 data로 세팅함.\n            Api.get('wanted').then((res) => setWantedList(res.data));\n        } catch (err) {\n            if (err.response.status === 400) {\n                alert(err.response.data.error);\n            }\n            console.log('wantedList를 불러오는데 실패했습니다.', err);\n        }\n    }, [userState, navigate]);\n\n    return (\n        <Container>\n            <Row>\n                <Col className='text-left'>\n                    <h3>팀원 구하기</h3>\n                    <p>\n                        팀원 모집을 확인하고 프로젝트에 참여해보세요.\n                        <br />\n                        원하는 프로젝트가 없을 경우 직접 팀원을 모집할 수 있어요.\n                    </p>\n                </Col>\n                <Col className='position-relative'>\n                    <Button\n                        className='m-3 position-absolute bottom-0 end-0'\n                        variant='primary'\n                        onClick={() => navigate('/wanted/create')}>\n                        게시글 작성\n                    </Button>\n                </Col>\n            </Row>\n            <Row>\n                <ListGroup>\n                    {wantedList.map((item) => (\n                        <ListGroup.Item\n                            action\n                            key={item._id}\n                            as='li'\n                            className='d-flex justify-content-between align-items-start '\n                            onClick={() => navigate('/wanted/read', { state: { wanted: item } })}>\n                            <div className='ms-2 me-auto'>\n                                <div className='fw-bold'>{item.wantedTitle}</div>\n                                {item.wantedContent}\n                            </div>\n                            <Badge bg='primary' pill>\n                                <CommentCount wantedId={item._id} />\n                            </Badge>\n                        </ListGroup.Item>\n                    ))}\n                </ListGroup>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Wanted;\n"]},"metadata":{},"sourceType":"module"}