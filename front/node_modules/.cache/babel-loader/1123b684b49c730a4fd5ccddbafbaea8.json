{"ast":null,"code":"var _jsxFileName = \"/Users/luna/Documents/Elice_1st_Project/portfolio-share-service-racer/front/src/pages/portfolio/Portfolio.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport { UserStateContext } from '../../App';\nimport * as Api from '../../api';\nimport User from '../../components/user/User';\nimport Award from '../../components/award/Award';\nimport Education from '../../components/education/Education';\nimport Certificate from '../../components/certificate/Certificate';\nimport Project from '../../components/project/Project';\nimport Stack from '../../components/stack/Stack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Portfolio() {\n  _s();\n\n  var _userState$user$_id2, _userState$user, _userState$user2, _userState$user$_id3, _userState$user3, _userState$user4, _userState$user$_id4, _userState$user5, _userState$user6, _userState$user$_id5, _userState$user7, _userState$user8, _userState$user$_id6, _userState$user9, _userState$user10, _userState$user$_id7, _userState$user11, _userState$user12;\n\n  const navigate = useNavigate();\n  const params = useParams(); // useState 훅을 통해 portfolioOwner 상태를 생성함.\n\n  const [portfolioOwner, setPortfolioOwner] = useState(null); // fetchPorfolioOwner 함수가 완료된 이후에만 (isFetchCompleted가 true여야) 컴포넌트가 구현되도록 함.\n  // 아래 코드를 보면, isFetchCompleted가 false이면 \"loading...\"만 반환되어서, 화면에 이 로딩 문구만 뜨게 됨.\n\n  const [isFetchCompleted, setIsFetchCompleted] = useState(false);\n  const userState = useContext(UserStateContext);\n\n  const fetchPorfolioOwner = async ownerId => {\n    try {\n      // 유저 id를 가지고 \"/user/유저id\" 엔드포인트로 요청해 사용자 정보를 불러옴.\n      const res = await Api.get('user', ownerId); // 사용자 정보는 response의 data임.\n\n      const ownerData = res.data; // portfolioOwner을 해당 사용자 정보로 세팅함.\n\n      setPortfolioOwner(ownerData); // fetchPorfolioOwner 과정이 끝났으므로, isFetchCompleted를 true로 바꿈.\n\n      setIsFetchCompleted(true);\n    } catch (err) {\n      if (err.response.status === 400) {\n        alert('유저 정보를 불러오는데 실패하였습니다.');\n      }\n\n      console.log('유저 정보를 불러오는데 실패하였습니다.', err);\n    }\n  };\n\n  useEffect(() => {\n    // 전역 상태의 user가 null이라면 로그인이 안 된 상태이므로, 로그인 페이지로 돌림.\n    if (!userState.user) {\n      navigate('/login', {\n        replace: true\n      });\n      return;\n    }\n\n    if (params.userId) {\n      // 만약 현재 URL이 \"/user/:userId\" 라면, 이 userId를 유저 id로 설정함.\n      const ownerId = params.userId; // 해당 유저 id로 fetchPorfolioOwner 함수를 실행함.\n\n      fetchPorfolioOwner(ownerId);\n    } else {\n      var _userState$user$_id;\n\n      // 이외의 경우, 즉 URL이 \"/\" 라면, 전역 상태의 user.id를 유저 id로 설정함.\n      const ownerId = (_userState$user$_id = userState.user._id) !== null && _userState$user$_id !== void 0 ? _userState$user$_id : userState.user.id; // 해당 유저 id로 fetchPorfolioOwner 함수를 실행함.\n\n      fetchPorfolioOwner(ownerId);\n    }\n  }, [params, userState, navigate]);\n\n  if (!isFetchCompleted) {\n    return 'loading...';\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      xs: \"auto\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: true,\n        className: \"mb-2\",\n        children: /*#__PURE__*/_jsxDEV(User, {\n          portfolioOwnerId: portfolioOwner.userInfo._id,\n          isEditable: portfolioOwner.userInfo._id === ((_userState$user$_id2 = (_userState$user = userState.user) === null || _userState$user === void 0 ? void 0 : _userState$user._id) !== null && _userState$user$_id2 !== void 0 ? _userState$user$_id2 : (_userState$user2 = userState.user) === null || _userState$user2 === void 0 ? void 0 : _userState$user2.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'left'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Award, {\n              portfolioOwnerId: portfolioOwner.userInfo._id,\n              isEditable: portfolioOwner.userInfo._id === ((_userState$user$_id3 = (_userState$user3 = userState.user) === null || _userState$user3 === void 0 ? void 0 : _userState$user3._id) !== null && _userState$user$_id3 !== void 0 ? _userState$user$_id3 : (_userState$user4 = userState.user) === null || _userState$user4 === void 0 ? void 0 : _userState$user4.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Education, {\n              portfolioOwnerId: portfolioOwner.userInfo._id,\n              isEditable: portfolioOwner.userInfo._id === ((_userState$user$_id4 = (_userState$user5 = userState.user) === null || _userState$user5 === void 0 ? void 0 : _userState$user5._id) !== null && _userState$user$_id4 !== void 0 ? _userState$user$_id4 : (_userState$user6 = userState.user) === null || _userState$user6 === void 0 ? void 0 : _userState$user6.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Certificate, {\n              portfolioOwnerId: portfolioOwner.userInfo._id,\n              isEditable: portfolioOwner.userInfo._id === ((_userState$user$_id5 = (_userState$user7 = userState.user) === null || _userState$user7 === void 0 ? void 0 : _userState$user7._id) !== null && _userState$user$_id5 !== void 0 ? _userState$user$_id5 : (_userState$user8 = userState.user) === null || _userState$user8 === void 0 ? void 0 : _userState$user8.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Project, {\n              portfolioOwnerId: portfolioOwner.userInfo._id,\n              isEditable: portfolioOwner.userInfo._id === ((_userState$user$_id6 = (_userState$user9 = userState.user) === null || _userState$user9 === void 0 ? void 0 : _userState$user9._id) !== null && _userState$user$_id6 !== void 0 ? _userState$user$_id6 : (_userState$user10 = userState.user) === null || _userState$user10 === void 0 ? void 0 : _userState$user10.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              portfolioOwnerId: portfolioOwner.userInfo._id,\n              isEditable: portfolioOwner.userInfo._id === ((_userState$user$_id7 = (_userState$user11 = userState.user) === null || _userState$user11 === void 0 ? void 0 : _userState$user11._id) !== null && _userState$user$_id7 !== void 0 ? _userState$user$_id7 : (_userState$user12 = userState.user) === null || _userState$user12 === void 0 ? void 0 : _userState$user12.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Portfolio, \"ozN5wJsbZI17qb28PSn+j5/v+Ps=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Portfolio;\nexport default Portfolio;\n\nvar _c;\n\n$RefreshReg$(_c, \"Portfolio\");","map":{"version":3,"sources":["/Users/luna/Documents/Elice_1st_Project/portfolio-share-service-racer/front/src/pages/portfolio/Portfolio.js"],"names":["React","useContext","useState","useEffect","useNavigate","useParams","Container","Col","Row","UserStateContext","Api","User","Award","Education","Certificate","Project","Stack","Portfolio","navigate","params","portfolioOwner","setPortfolioOwner","isFetchCompleted","setIsFetchCompleted","userState","fetchPorfolioOwner","ownerId","res","get","ownerData","data","err","response","status","alert","console","log","user","replace","userId","_id","id","userInfo","textAlign"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport { UserStateContext } from '../../App';\nimport * as Api from '../../api';\n\nimport User from '../../components/user/User';\nimport Award from '../../components/award/Award';\nimport Education from '../../components/education/Education';\nimport Certificate from '../../components/certificate/Certificate';\nimport Project from '../../components/project/Project';\nimport Stack from '../../components/stack/Stack';\n\nfunction Portfolio() {\n    const navigate = useNavigate();\n    const params = useParams();\n    // useState 훅을 통해 portfolioOwner 상태를 생성함.\n    const [portfolioOwner, setPortfolioOwner] = useState(null);\n    // fetchPorfolioOwner 함수가 완료된 이후에만 (isFetchCompleted가 true여야) 컴포넌트가 구현되도록 함.\n    // 아래 코드를 보면, isFetchCompleted가 false이면 \"loading...\"만 반환되어서, 화면에 이 로딩 문구만 뜨게 됨.\n    const [isFetchCompleted, setIsFetchCompleted] = useState(false);\n    const userState = useContext(UserStateContext);\n\n    const fetchPorfolioOwner = async (ownerId) => {\n        try {\n            // 유저 id를 가지고 \"/user/유저id\" 엔드포인트로 요청해 사용자 정보를 불러옴.\n            const res = await Api.get('user', ownerId);\n            // 사용자 정보는 response의 data임.\n            const ownerData = res.data;\n            // portfolioOwner을 해당 사용자 정보로 세팅함.\n            setPortfolioOwner(ownerData);\n            // fetchPorfolioOwner 과정이 끝났으므로, isFetchCompleted를 true로 바꿈.\n            setIsFetchCompleted(true);\n        } catch (err) {\n            if (err.response.status === 400) {\n                alert('유저 정보를 불러오는데 실패하였습니다.');\n            }\n            console.log('유저 정보를 불러오는데 실패하였습니다.', err);\n        }\n    };\n\n    useEffect(() => {\n        // 전역 상태의 user가 null이라면 로그인이 안 된 상태이므로, 로그인 페이지로 돌림.\n        if (!userState.user) {\n            navigate('/login', { replace: true });\n            return;\n        }\n\n        if (params.userId) {\n            // 만약 현재 URL이 \"/user/:userId\" 라면, 이 userId를 유저 id로 설정함.\n            const ownerId = params.userId;\n            // 해당 유저 id로 fetchPorfolioOwner 함수를 실행함.\n            fetchPorfolioOwner(ownerId);\n        } else {\n            // 이외의 경우, 즉 URL이 \"/\" 라면, 전역 상태의 user.id를 유저 id로 설정함.\n            const ownerId = userState.user._id ?? userState.user.id;\n\n            // 해당 유저 id로 fetchPorfolioOwner 함수를 실행함.\n            fetchPorfolioOwner(ownerId);\n        }\n    }, [params, userState, navigate]);\n\n    if (!isFetchCompleted) {\n        return 'loading...';\n    }\n\n    return (\n        <Container>\n            <Row xs='auto'>\n                <Col xs className='mb-2'>\n                    <User\n                        portfolioOwnerId={portfolioOwner.userInfo._id}\n                        isEditable={portfolioOwner.userInfo._id === (userState.user?._id ?? userState.user?.id)}\n                    />\n                </Col>\n                <Col xs>\n                    <div style={{ textAlign: 'left' }}>\n                        <div className='mb-3'>\n                            <Award\n                                portfolioOwnerId={portfolioOwner.userInfo._id}\n                                isEditable={portfolioOwner.userInfo._id === (userState.user?._id ?? userState.user?.id)}\n                            />\n                        </div>\n                        <div className='mb-3'>\n                            <Education\n                                portfolioOwnerId={portfolioOwner.userInfo._id}\n                                isEditable={portfolioOwner.userInfo._id === (userState.user?._id ?? userState.user?.id)}\n                            />\n                        </div>\n                        <div className='mb-3'>\n                            <Certificate\n                                portfolioOwnerId={portfolioOwner.userInfo._id}\n                                isEditable={portfolioOwner.userInfo._id === (userState.user?._id ?? userState.user?.id)}\n                            />\n                        </div>\n                        <div className='mb-3'>\n                            <Project\n                                portfolioOwnerId={portfolioOwner.userInfo._id}\n                                isEditable={portfolioOwner.userInfo._id === (userState.user?._id ?? userState.user?.id)}\n                            />\n                        </div>\n                        <div className='mb-3'>\n                            <Stack\n                                portfolioOwnerId={portfolioOwner.userInfo._id}\n                                isEditable={portfolioOwner.userInfo._id === (userState.user?._id ?? userState.user?.id)}\n                            />\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Portfolio;\n"]},"metadata":{},"sourceType":"module"}