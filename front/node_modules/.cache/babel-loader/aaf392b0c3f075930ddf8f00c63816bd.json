{"ast":null,"code":"var _jsxFileName = \"/Users/luna/Documents/Elice_1st_Project/my_test/front/src/components/user/User.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport UserEditForm from './UserEditForm';\nimport UserCard from './UserCard';\nimport * as Api from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction User(_ref) {\n  _s();\n\n  let {\n    portfolioOwnerId,\n    isEditable\n  } = _ref;\n  // useState 훅을 통해 isEditing 상태를 생성함.\n  const [isEditing, setIsEditing] = useState(false); // useState 훅을 통해 user 상태를 생성함.\n\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    // \"users/유저id\" 엔드포인트로 GET 요청을 하고, user를 response의 data로 세팅함.\n    Api.get('users', portfolioOwnerId).then(res => setUser(res.data));\n  }, [portfolioOwnerId]);\n  console.log(user);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isEditing ? /*#__PURE__*/_jsxDEV(UserEditForm, {\n      user: user,\n      setIsEditing: setIsEditing,\n      setUser: setUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(UserCard, {\n      user: user,\n      setIsEditing: setIsEditing,\n      isEditable: isEditable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n\n_s(User, \"iGIPJ4Er6Rw1E6Qne78puC+amBc=\");\n\n_c = User;\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/Users/luna/Documents/Elice_1st_Project/my_test/front/src/components/user/User.js"],"names":["React","useState","useEffect","UserEditForm","UserCard","Api","User","portfolioOwnerId","isEditable","isEditing","setIsEditing","user","setUser","get","then","res","data","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,WAArB;;;;AAEA,SAASC,IAAT,OAAgD;AAAA;;AAAA,MAAlC;AAAEC,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,GAAkC;AAC5C;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C,CAF4C,CAG5C;;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,IAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAG,IAAAA,GAAG,CAACQ,GAAJ,CAAQ,OAAR,EAAiBN,gBAAjB,EAAmCO,IAAnC,CAAyCC,GAAD,IAASH,OAAO,CAACG,GAAG,CAACC,IAAL,CAAxD;AACH,GAHQ,EAGN,CAACT,gBAAD,CAHM,CAAT;AAKAU,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AAEA,sBACI;AAAA,cACKF,SAAS,gBACN,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEE,IAApB;AAA0B,MAAA,YAAY,EAAED,YAAxC;AAAsD,MAAA,OAAO,EAAEE;AAA/D;AAAA;AAAA;AAAA;AAAA,YADM,gBAGN,QAAC,QAAD;AAAU,MAAA,IAAI,EAAED,IAAhB;AAAsB,MAAA,YAAY,EAAED,YAApC;AAAkD,MAAA,UAAU,EAAEF;AAA9D;AAAA;AAAA;AAAA;AAAA;AAJR,mBADJ;AASH;;GAtBQF,I;;KAAAA,I;AAwBT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport UserEditForm from './UserEditForm';\nimport UserCard from './UserCard';\nimport * as Api from '../../api';\n\nfunction User({ portfolioOwnerId, isEditable }) {\n    // useState 훅을 통해 isEditing 상태를 생성함.\n    const [isEditing, setIsEditing] = useState(false);\n    // useState 훅을 통해 user 상태를 생성함.\n    const [user, setUser] = useState(null);\n\n    useEffect(() => {\n        // \"users/유저id\" 엔드포인트로 GET 요청을 하고, user를 response의 data로 세팅함.\n        Api.get('users', portfolioOwnerId).then((res) => setUser(res.data));\n    }, [portfolioOwnerId]);\n\n    console.log(user);\n\n    return (\n        <>\n            {isEditing ? (\n                <UserEditForm user={user} setIsEditing={setIsEditing} setUser={setUser} />\n            ) : (\n                <UserCard user={user} setIsEditing={setIsEditing} isEditable={isEditable} />\n            )}\n        </>\n    );\n}\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}