{"ast":null,"code":"var _jsxFileName = \"/Users/luna/Documents/Elice_1st_Project/portfolio-share-service-racer/front/src/components/award/AwardDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport * as Api from '../../api';\nimport AwardForm from './AwardForm';\nimport AwardP from './AwardP';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AwardDetail(_ref) {\n  _s();\n\n  let {\n    portfolioOwnerId,\n    isEditable\n  } = _ref;\n  const [dbItem, setDbItem] = useState([]);\n  const [isToggle, setIsToggle] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n  const [currentEditId, setcurrentEditId] = useState('');\n  const [awardName, setAwardName] = useState('');\n  const [awardDate, setAwardDate] = useState('');\n  const [awardInstitution, setAwardInstitution] = useState('');\n  const [awardDescription, setAwardDescription] = useState('');\n\n  const onChangeName = e => {\n    setAwardName(e.target.value);\n  };\n\n  const onChangeDate = e => {\n    setAwardDate(e.target.value);\n  };\n\n  const onChangeInstitution = e => {\n    setAwardInstitution(e.target.value);\n  };\n\n  const onChangeDescription = e => {\n    setAwardDescription(e.target.value);\n  };\n\n  const AddInput = () => {\n    setIsToggle(true);\n    setAwardName('');\n    setAwardDate('');\n    setAwardInstitution('');\n    setAwardDescription('');\n  };\n\n  const fetchAward = async portfolioOwnerId => {\n    try {\n      const res = await Api.get(`award/${portfolioOwnerId}`);\n      const ownerData = res.data;\n      setDbItem(ownerData);\n    } catch (err) {\n      if (err.respone.status === 400) {\n        alert(err.response.data.error);\n      }\n\n      console.log('DB 불러오기를 실패하였습니다.', err);\n    }\n  };\n\n  const userId = portfolioOwnerId;\n\n  const handleSubmit = async id => {\n    const item = dbItem.filter(item => item._id === id)[0];\n\n    if (item === undefined || item.isSave === false) {\n      try {\n        await Api.post(`award/`, {\n          awardName,\n          awardDate,\n          awardInstitution,\n          awardDescription\n        });\n        setIsToggle(false);\n        setIsEdit(false);\n        fetchAward({\n          userId\n        });\n        setAwardName('');\n        setAwardDate('');\n        setAwardInstitution('');\n        setAwardDescription('');\n      } catch (err) {\n        if (err.response.status === 400) {\n          alert(err.response.data.error);\n        }\n\n        console.log('수상이력 추가에 실패하였습니다.', err);\n      }\n    } else {\n      try {\n        await Api.put(`award/${item._id}`, {\n          awardName,\n          awardDate,\n          awardInstitution,\n          awardDescription\n        });\n        setIsToggle(false);\n        setIsEdit(false);\n        fetchAward({\n          userId\n        });\n      } catch (err) {\n        console.log('수상이력 수정에 실패하였습니다.', err);\n      }\n    }\n  };\n\n  const handleEdit = id => {\n    setDbItem(prevItems => {\n      return prevItems.map(item => {\n        if (item._id === id) {\n          return { ...item,\n            isEdit: true\n          };\n        } else {\n          return item;\n        }\n      });\n    });\n    const item = dbItem.filter(item => item._id === id)[0];\n    setAwardName(item.awardName);\n    setAwardDate(item.awardDate);\n    setAwardInstitution(item.awardInstitution);\n    setAwardDescription(item.awardDescription);\n    setcurrentEditId(item._id);\n    setIsEdit(true);\n  };\n\n  const handleCancel = () => {\n    fetchAward({\n      userId\n    });\n    setIsToggle(false);\n    setIsEdit(false);\n  };\n\n  const handleDelete = async id => {\n    try {\n      await Api.delete(`award/${id}`);\n      fetchAward({\n        userId\n      });\n      setIsToggle(false);\n      setIsEdit(false);\n    } catch (err) {\n      if (err.response.status === 400) {\n        alert(err.response.data.error);\n      }\n\n      console.log('수상이력 삭제에 실패하였습니다.', err);\n    }\n  };\n\n  useEffect(() => {\n    fetchAward({\n      userId\n    });\n  }, [userId]);\n  const formSendFunction = {\n    handleSubmit,\n    handleCancel,\n    handleDelete,\n    onChangeName,\n    onChangeDate,\n    onChangeInstitution,\n    onChangeDescription\n  };\n  const formSendcurrentData = {\n    awardName,\n    awardDate,\n    awardInstitution,\n    awardDescription,\n    currentEditId\n  };\n  const pSendFunction = {\n    handleEdit\n  };\n  const pSendisFlag = {\n    isEditable,\n    isToggle,\n    isEdit\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [dbItem.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: item.isSave === true && item.isEdit === false ? /*#__PURE__*/_jsxDEV(AwardP, {\n        pSendFunction: pSendFunction,\n        isFlag: pSendisFlag,\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(AwardForm, {\n        formSendFunction: formSendFunction,\n        currentData: formSendcurrentData,\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 25\n      }, this)\n    }, item._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }, this)), isToggle === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          style: {\n            width: '100%'\n          },\n          type: \"text\",\n          placeholder: \"\\uC218\\uC0C1\\uBA85\",\n          value: awardName,\n          onChange: onChangeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          style: {\n            width: '100%'\n          },\n          type: \"date\",\n          placeholder: \"\\uC218\\uC0C1\\uC77C\\uC790\",\n          value: awardDate,\n          onChange: onChangeDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          style: {\n            width: '100%'\n          },\n          type: \"text\",\n          placeholder: \"\\uC218\\uC0C1\\uAE30\\uAD00\",\n          value: awardInstitution,\n          onChange: onChangeInstitution\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          style: {\n            width: '100%'\n          },\n          type: \"text\",\n          placeholder: \"\\uC218\\uC5EC\\uB0B4\\uC6A9\",\n          value: awardDescription,\n          onChange: onChangeDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 text-center\",\n        children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: \"me-3\",\n            variant: \"primary\",\n            onClick: () => handleSubmit(),\n            children: \"\\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => handleCancel(),\n            children: \"\\uCDE8\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }, this) : '', isEditable && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 text-center\",\n      children: dbItem.length < 10 && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: AddInput,\n        disabled: isToggle || isEdit ? true : false,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AwardDetail, \"Yz8XfBKt2eIXaI3EDY3uBsZvnCY=\");\n\n_c = AwardDetail;\nexport default AwardDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"AwardDetail\");","map":{"version":3,"sources":["/Users/luna/Documents/Elice_1st_Project/portfolio-share-service-racer/front/src/components/award/AwardDetail.js"],"names":["React","useState","useEffect","Button","Form","Api","AwardForm","AwardP","AwardDetail","portfolioOwnerId","isEditable","dbItem","setDbItem","isToggle","setIsToggle","isEdit","setIsEdit","currentEditId","setcurrentEditId","awardName","setAwardName","awardDate","setAwardDate","awardInstitution","setAwardInstitution","awardDescription","setAwardDescription","onChangeName","e","target","value","onChangeDate","onChangeInstitution","onChangeDescription","AddInput","fetchAward","res","get","ownerData","data","err","respone","status","alert","response","error","console","log","userId","handleSubmit","id","item","filter","_id","undefined","isSave","post","put","handleEdit","prevItems","map","handleCancel","handleDelete","delete","formSendFunction","formSendcurrentData","pSendFunction","pSendisFlag","width","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Form } from 'react-bootstrap';\n\nimport * as Api from '../../api';\n\nimport AwardForm from './AwardForm';\nimport AwardP from './AwardP';\n\nfunction AwardDetail({ portfolioOwnerId, isEditable }) {\n    const [dbItem, setDbItem] = useState([]);\n    const [isToggle, setIsToggle] = useState(false);\n    const [isEdit, setIsEdit] = useState(false);\n    const [currentEditId, setcurrentEditId] = useState('');\n\n    const [awardName, setAwardName] = useState('');\n    const [awardDate, setAwardDate] = useState('');\n    const [awardInstitution, setAwardInstitution] = useState('');\n    const [awardDescription, setAwardDescription] = useState('');\n\n    const onChangeName = (e) => {\n        setAwardName(e.target.value);\n    };\n\n    const onChangeDate = (e) => {\n        setAwardDate(e.target.value);\n    };\n\n    const onChangeInstitution = (e) => {\n        setAwardInstitution(e.target.value);\n    };\n\n    const onChangeDescription = (e) => {\n        setAwardDescription(e.target.value);\n    };\n\n    const AddInput = () => {\n        setIsToggle(true);\n\n        setAwardName('');\n        setAwardDate('');\n        setAwardInstitution('');\n        setAwardDescription('');\n    };\n\n    const fetchAward = async (portfolioOwnerId) => {\n        try {\n            const res = await Api.get(`award/${portfolioOwnerId}`);\n            const ownerData = res.data;\n            setDbItem(ownerData);\n        } catch (err) {\n            if (err.respone.status === 400) {\n                alert(err.response.data.error);\n            }\n            console.log('DB 불러오기를 실패하였습니다.', err);\n        }\n    };\n\n    const userId = portfolioOwnerId;\n\n    const handleSubmit = async (id) => {\n        const item = dbItem.filter((item) => item._id === id)[0];\n\n        if (item === undefined || item.isSave === false) {\n            try {\n                await Api.post(`award/`, {\n                    awardName,\n                    awardDate,\n                    awardInstitution,\n                    awardDescription,\n                });\n\n                setIsToggle(false);\n                setIsEdit(false);\n\n                fetchAward({ userId });\n\n                setAwardName('');\n                setAwardDate('');\n                setAwardInstitution('');\n                setAwardDescription('');\n            } catch (err) {\n                if (err.response.status === 400) {\n                    alert(err.response.data.error);\n                }\n                console.log('수상이력 추가에 실패하였습니다.', err);\n            }\n        } else {\n            try {\n                await Api.put(`award/${item._id}`, {\n                    awardName,\n                    awardDate,\n                    awardInstitution,\n                    awardDescription,\n                });\n\n                setIsToggle(false);\n                setIsEdit(false);\n\n                fetchAward({ userId });\n            } catch (err) {\n                console.log('수상이력 수정에 실패하였습니다.', err);\n            }\n        }\n    };\n\n    const handleEdit = (id) => {\n        setDbItem((prevItems) => {\n            return prevItems.map((item) => {\n                if (item._id === id) {\n                    return {\n                        ...item,\n                        isEdit: true,\n                    };\n                } else {\n                    return item;\n                }\n            });\n        });\n\n        const item = dbItem.filter((item) => item._id === id)[0];\n        setAwardName(item.awardName);\n        setAwardDate(item.awardDate);\n        setAwardInstitution(item.awardInstitution);\n        setAwardDescription(item.awardDescription);\n\n        setcurrentEditId(item._id);\n        setIsEdit(true);\n    };\n\n    const handleCancel = () => {\n        fetchAward({ userId });\n\n        setIsToggle(false);\n        setIsEdit(false);\n    };\n\n    const handleDelete = async (id) => {\n        try {\n            await Api.delete(`award/${id}`);\n\n            fetchAward({ userId });\n\n            setIsToggle(false);\n            setIsEdit(false);\n        } catch (err) {\n            if (err.response.status === 400) {\n                alert(err.response.data.error);\n            }\n            console.log('수상이력 삭제에 실패하였습니다.', err);\n        }\n    };\n\n    useEffect(() => {\n        fetchAward({ userId });\n    }, [userId]);\n\n    const formSendFunction = {\n        handleSubmit,\n        handleCancel,\n        handleDelete,\n        onChangeName,\n        onChangeDate,\n        onChangeInstitution,\n        onChangeDescription,\n    };\n    const formSendcurrentData = { awardName, awardDate, awardInstitution, awardDescription, currentEditId };\n    const pSendFunction = { handleEdit };\n    const pSendisFlag = { isEditable, isToggle, isEdit };\n\n    return (\n        <div>\n            {dbItem.map((item) => (\n                <div key={item._id}>\n                    {item.isSave === true && item.isEdit === false ? (\n                        <AwardP pSendFunction={pSendFunction} isFlag={pSendisFlag} item={item} />\n                    ) : (\n                        <AwardForm formSendFunction={formSendFunction} currentData={formSendcurrentData} item={item} />\n                    )}\n                </div>\n            ))}\n            {isToggle === true ? (\n                <div>\n                    <div className='mb-2'>\n                        <Form.Control\n                            style={{ width: '100%' }}\n                            type='text'\n                            placeholder='수상명'\n                            value={awardName}\n                            onChange={onChangeName}\n                        />\n                    </div>\n                    <div className='mb-2'>\n                        <Form.Control\n                            style={{ width: '100%' }}\n                            type='date'\n                            placeholder='수상일자'\n                            value={awardDate}\n                            onChange={onChangeDate}\n                        />\n                    </div>\n                    <div className='mb-2'>\n                        <Form.Control\n                            style={{ width: '100%' }}\n                            type='text'\n                            placeholder='수상기관'\n                            value={awardInstitution}\n                            onChange={onChangeInstitution}\n                        />\n                    </div>\n                    <div className='mb-2'>\n                        <Form.Control\n                            style={{ width: '100%' }}\n                            type='text'\n                            placeholder='수여내용'\n                            value={awardDescription}\n                            onChange={onChangeDescription}\n                        />\n                    </div>\n                    <div className='mb-3 text-center'>\n                        <React.Fragment>\n                            <Button className='me-3' variant='primary' onClick={() => handleSubmit()}>\n                                확인\n                            </Button>\n                            <Button variant='secondary' onClick={() => handleCancel()}>\n                                취소\n                            </Button>\n                        </React.Fragment>\n                    </div>\n                </div>\n            ) : (\n                ''\n            )}\n            {isEditable && (\n                <div className='mb-3 text-center'>\n                    {dbItem.length < 10 && (\n                        <Button variant='primary' onClick={AddInput} disabled={isToggle || isEdit ? true : false}>\n                            +\n                        </Button>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default AwardDetail;\n"]},"metadata":{},"sourceType":"module"}