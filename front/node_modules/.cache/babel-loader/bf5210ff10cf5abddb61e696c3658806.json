{"ast":null,"code":"var _jsxFileName = \"/Users/luna/Documents/Elice_1st_Project/portfolio-share-service-racer/front/src/components/education/EducationDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Form, FloatingLabel } from 'react-bootstrap';\nimport * as Api from '../../api';\nimport EducationForm from './EducationForm';\nimport EducationP from './EducationP';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EducationDetail(_ref) {\n  _s();\n\n  let {\n    portfolioOwnerId,\n    isEditable\n  } = _ref;\n  const [dbItem, setDbItem] = useState([]);\n  const [isToggle, setIsToggle] = useState(false); // 추가 버튼 클릭 유무\n\n  const [isEdit, setIsEdit] = useState(false); // 편집 버튼 클릭 유무\n\n  const [currentEditId, setcurrentEditId] = useState(''); // Edit 버튼을 클릭 시 버튼 표시를 구분하기 위한 값\n\n  const [eduSchool, setEduSchool] = useState(''); // 학교이름\n\n  const [eduMajor, setEduMajor] = useState(''); // 전공\n\n  const [eduEnterDate, setEduEnterDate] = useState(''); // 입학일자\n\n  const [eduGraduateDate, setEduGraduateDate] = useState(''); // 졸업일자\n\n  const [eduDegree, setEduDegree] = useState('재학'); // 학위\n\n  const isDateValid = eduEnterDate < eduGraduateDate;\n\n  const onChangeSchool = e => {\n    setEduSchool(e.target.value);\n  };\n\n  const onChangeMajor = e => {\n    setEduMajor(e.target.value);\n  };\n\n  const onChangeEnterDate = e => {\n    setEduEnterDate(e.target.value);\n  };\n\n  const onChangeGraduateDate = e => {\n    setEduGraduateDate(e.target.value);\n  };\n\n  const offChangeGraduateDate = e => {\n    setEduGraduateDate('');\n  };\n\n  const onChangeDegree = e => {\n    setEduDegree(e.target.value);\n  };\n\n  const AddInput = () => {\n    setIsToggle(true);\n    setEduSchool('');\n    setEduMajor('');\n    setEduEnterDate('');\n    setEduGraduateDate('');\n    setEduDegree('재학');\n  };\n\n  const fetchEducation = async ownerId => {\n    try {\n      // \"/edu\" 엔드포인트로 요청해 사용자 정보를 불러옴.(userId는 req.currentUserId 사용)\n      const res = await Api.get(`edu/${ownerId.userId}`); // 사용자 정보는 response의 data임.\n\n      const ownerData = res.data; // portfolioOwner을 해당 사용자 정보로 세팅함.\n\n      setDbItem(ownerData);\n    } catch (err) {\n      if (err.response.status === 400) {\n        alert(err.response.data.error);\n      }\n\n      console.log('사용자 데이터 불러오기에 실패하였습니다.', err);\n    }\n  };\n\n  const userId = portfolioOwnerId;\n\n  const handleSubmit = async id => {\n    const item = dbItem.filter(item => item._id === id)[0];\n\n    if (item === undefined || item.isSave === false) {\n      try {\n        // \"/edu\" 엔드포인트로 post요청함.(userId는 req.currentUserId 사용)\n        await Api.post(`edu/`, {\n          eduSchool,\n          eduMajor,\n          eduEnterDate,\n          eduGraduateDate,\n          eduDegree\n        });\n        setIsToggle(false);\n        setIsEdit(false);\n        fetchEducation({\n          userId\n        });\n        setEduSchool('');\n        setEduMajor('');\n        setEduEnterDate('');\n        setEduGraduateDate('');\n        setEduDegree('');\n      } catch (err) {\n        if (err.response.status === 400) {\n          alert(err.response.data.error);\n        }\n\n        console.log('학위 추가에 실패하였습니다.', err);\n      }\n    } else {\n      try {\n        // \"edu/educationId\" 엔드포인트로 put요청함.\n        await Api.put(`edu/${item._id}`, {\n          eduSchool,\n          eduMajor,\n          eduEnterDate,\n          eduGraduateDate,\n          eduDegree\n        });\n        setIsToggle(false);\n        setIsEdit(false);\n        fetchEducation({\n          userId\n        });\n      } catch (err) {\n        if (err.response.status === 400) {\n          alert(err.response.data.error);\n        }\n\n        console.log('학위 수정에 실패하였습니다.', err);\n      }\n    }\n  };\n\n  const handleEdit = id => {\n    setDbItem(prevItems => {\n      return prevItems.map(item => {\n        if (item._id === id) {\n          return { ...item,\n            isEdit: true\n          };\n        } else {\n          return item;\n        }\n      });\n    });\n    const item = dbItem.filter(item => item._id === id)[0];\n    setEduSchool(item.eduSchool);\n    setEduMajor(item.eduMajor);\n    setEduEnterDate(item.eduEnterDate);\n    setEduGraduateDate(item.eduGraduateDate);\n    setEduDegree(item.eduDegree);\n    setcurrentEditId(item._id);\n    setIsEdit(true);\n  };\n\n  const handleCancel = () => {\n    fetchEducation({\n      userId\n    });\n    setIsToggle(false);\n    setIsEdit(false);\n  };\n\n  const handleDelete = async id => {\n    try {\n      // \"edu/educationId\" 엔드포인트로 delete 요청함.\n      await Api.delete(`edu/${id}`);\n      fetchEducation({\n        userId\n      });\n      setIsToggle(false);\n      setIsEdit(false);\n    } catch (err) {\n      if (err.response.status === 400) {\n        alert(err.response.data.error);\n      }\n\n      console.log('학위 삭제에 실패하였습니다.', err);\n    }\n  };\n\n  useEffect(() => {\n    fetchEducation({\n      userId\n    });\n  }, [userId]);\n  const formSendFunction = {\n    handleSubmit,\n    handleCancel,\n    handleDelete,\n    onChangeSchool,\n    onChangeMajor,\n    onChangeEnterDate,\n    onChangeGraduateDate,\n    offChangeGraduateDate,\n    onChangeDegree\n  };\n  const formSendcurrentData = {\n    eduSchool,\n    eduMajor,\n    eduEnterDate,\n    eduGraduateDate,\n    eduDegree,\n    currentEditId\n  };\n  const formSendisFlag = {\n    isDateValid\n  };\n  const pSendFunction = {\n    handleEdit\n  };\n  const pSendisFlag = {\n    isEditable,\n    isToggle,\n    isEdit\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [dbItem.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: item.isSave === true && item.isEdit === false ? /*#__PURE__*/_jsxDEV(EducationP, {\n        pSendFunction: pSendFunction,\n        isFlag: pSendisFlag,\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(EducationForm, {\n        formSendFunction: formSendFunction,\n        currentData: formSendcurrentData,\n        isFlag: formSendisFlag,\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }, this)\n    }, item._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }, this)), isToggle === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n          controlId: \"floatingInput\",\n          label: \"\\uD559\\uAD50\\uC774\\uB984*\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            style: {\n              width: '100%'\n            },\n            type: \"text\",\n            placeholder: \"\\uD559\\uAD50\\uC774\\uB984\",\n            value: eduSchool,\n            onChange: onChangeSchool\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n          controlId: \"floatingInput\",\n          label: \"\\uC804\\uACF5*\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            style: {\n              width: '100%'\n            },\n            type: \"text\",\n            placeholder: \"\\uC804\\uACF5\",\n            value: eduMajor,\n            onChange: onChangeMajor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n          controlId: \"floatingInput\",\n          label: \"\\uC785\\uD559\\uC77C\\uC790*\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            style: {\n              width: '100%'\n            },\n            type: \"date\",\n            placeholder: \"\\uC785\\uD559\\uC77C\\uC790\",\n            value: eduEnterDate,\n            onChange: onChangeEnterDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(FloatingLabel, {\n          controlId: \"floatingInput\",\n          label: \"\\uC878\\uC5C5\\uC77C\\uC790\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            style: {\n              width: '100%'\n            },\n            type: \"date\",\n            placeholder: \"\\uC878\\uC5C5\\uC77C\\uC790\",\n            value: eduDegree === '재학' || eduDegree === '휴학' ? '' : eduGraduateDate,\n            onChange: eduDegree === '재학' || eduDegree === '휴학' ? offChangeGraduateDate : onChangeGraduateDate,\n            disabled: eduDegree === '재학' || eduDegree === '휴학' ? true : false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }, this), eduEnterDate && eduGraduateDate && !isDateValid && eduDegree !== '재학' && eduDegree !== '휴학' && /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"date-success\",\n          children: \"\\uC785\\uD559\\uB0A0\\uC9DC\\uBCF4\\uB2E4 \\uC878\\uC5C5\\uC77C\\uC790\\uAC00 \\uC774\\uC804\\uC785\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n          inline: true,\n          label: \"\\uC7AC\\uD559\",\n          name: \"group1\",\n          type: \"radio\",\n          value: \"\\uC7AC\\uD559\",\n          checked: eduDegree === '재학',\n          onChange: onChangeDegree\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n          inline: true,\n          label: \"\\uD734\\uD559\",\n          name: \"group1\",\n          type: \"radio\",\n          value: \"\\uD734\\uD559\",\n          checked: eduDegree === '휴학',\n          onChange: onChangeDegree\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n          inline: true,\n          label: \"\\uD559\\uC0AC\\uC878\\uC5C5\",\n          name: \"group1\",\n          type: \"radio\",\n          value: \"\\uD559\\uC0AC\\uC878\\uC5C5\",\n          checked: eduDegree === '학사졸업',\n          onChange: onChangeDegree\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n          inline: true,\n          label: \"\\uC11D\\uC0AC\\uC878\\uC5C5\",\n          name: \"group1\",\n          type: \"radio\",\n          value: \"\\uC11D\\uC0AC\\uC878\\uC5C5\",\n          checked: eduDegree === '석사졸업',\n          onChange: onChangeDegree\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n          inline: true,\n          label: \"\\uBC15\\uC0AC\\uC878\\uC5C5\",\n          name: \"group1\",\n          type: \"radio\",\n          value: \"\\uBC15\\uC0AC\\uC878\\uC5C5\",\n          checked: eduDegree === '박사졸업',\n          onChange: onChangeDegree\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 text-center\",\n        children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              backgroundColor: '#3077e1',\n              border: 'none'\n            },\n            variant: \"primary\",\n            className: \"me-2\",\n            onClick: () => handleSubmit(),\n            children: \"\\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              backgroundColor: '#7469bc',\n              border: 'none'\n            },\n            variant: \"secondary\",\n            onClick: () => handleCancel(),\n            children: \"\\uCDE8\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }, this) : '', isEditable && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 text-center\",\n      children: dbItem.length < 10 && /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          backgroundColor: '#2a3741',\n          border: 'none'\n        },\n        variant: \"primary\",\n        onClick: AddInput,\n        disabled: isToggle || isEdit ? true : false,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EducationDetail, \"vx+kKMH/pCtliGSF+3/zxMcEE1U=\");\n\n_c = EducationDetail;\nexport default EducationDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"EducationDetail\");","map":{"version":3,"sources":["/Users/luna/Documents/Elice_1st_Project/portfolio-share-service-racer/front/src/components/education/EducationDetail.js"],"names":["React","useState","useEffect","Button","Form","FloatingLabel","Api","EducationForm","EducationP","EducationDetail","portfolioOwnerId","isEditable","dbItem","setDbItem","isToggle","setIsToggle","isEdit","setIsEdit","currentEditId","setcurrentEditId","eduSchool","setEduSchool","eduMajor","setEduMajor","eduEnterDate","setEduEnterDate","eduGraduateDate","setEduGraduateDate","eduDegree","setEduDegree","isDateValid","onChangeSchool","e","target","value","onChangeMajor","onChangeEnterDate","onChangeGraduateDate","offChangeGraduateDate","onChangeDegree","AddInput","fetchEducation","ownerId","res","get","userId","ownerData","data","err","response","status","alert","error","console","log","handleSubmit","id","item","filter","_id","undefined","isSave","post","put","handleEdit","prevItems","map","handleCancel","handleDelete","delete","formSendFunction","formSendcurrentData","formSendisFlag","pSendFunction","pSendisFlag","width","backgroundColor","border","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,aAAvB,QAA4C,iBAA5C;AAEA,OAAO,KAAKC,GAAZ,MAAqB,WAArB;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,SAASC,eAAT,OAA2D;AAAA;;AAAA,MAAlC;AAAEC,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,GAAkC;AACvD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,KAAD,CAAxC,CAFuD,CAEN;;AACjD,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,KAAD,CAApC,CAHuD,CAGV;;AAC7C,QAAM,CAACiB,aAAD,EAAgBC,gBAAhB,IAAoClB,QAAQ,CAAC,EAAD,CAAlD,CAJuD,CAIC;;AAExD,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,EAAD,CAA1C,CANuD,CAMP;;AAChD,QAAM,CAACqB,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAAC,EAAD,CAAxC,CAPuD,CAOT;;AAC9C,QAAM,CAACuB,YAAD,EAAeC,eAAf,IAAkCxB,QAAQ,CAAC,EAAD,CAAhD,CARuD,CAQD;;AACtD,QAAM,CAACyB,eAAD,EAAkBC,kBAAlB,IAAwC1B,QAAQ,CAAC,EAAD,CAAtD,CATuD,CASK;;AAC5D,QAAM,CAAC2B,SAAD,EAAYC,YAAZ,IAA4B5B,QAAQ,CAAC,IAAD,CAA1C,CAVuD,CAUL;;AAElD,QAAM6B,WAAW,GAAGN,YAAY,GAAGE,eAAnC;;AAEA,QAAMK,cAAc,GAAIC,CAAD,IAAO;AAC1BX,IAAAA,YAAY,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACH,GAFD;;AAIA,QAAMC,aAAa,GAAIH,CAAD,IAAO;AACzBT,IAAAA,WAAW,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH,GAFD;;AAIA,QAAME,iBAAiB,GAAIJ,CAAD,IAAO;AAC7BP,IAAAA,eAAe,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACH,GAFD;;AAIA,QAAMG,oBAAoB,GAAIL,CAAD,IAAO;AAChCL,IAAAA,kBAAkB,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AACH,GAFD;;AAIA,QAAMI,qBAAqB,GAAIN,CAAD,IAAO;AACjCL,IAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACH,GAFD;;AAIA,QAAMY,cAAc,GAAIP,CAAD,IAAO;AAC1BH,IAAAA,YAAY,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACH,GAFD;;AAIA,QAAMM,QAAQ,GAAG,MAAM;AACnBzB,IAAAA,WAAW,CAAC,IAAD,CAAX;AAEAM,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACAE,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GARD;;AAUA,QAAMY,cAAc,GAAG,MAAOC,OAAP,IAAmB;AACtC,QAAI;AACA;AACA,YAAMC,GAAG,GAAG,MAAMrC,GAAG,CAACsC,GAAJ,CAAS,OAAMF,OAAO,CAACG,MAAO,EAA9B,CAAlB,CAFA,CAGA;;AACA,YAAMC,SAAS,GAAGH,GAAG,CAACI,IAAtB,CAJA,CAKA;;AACAlC,MAAAA,SAAS,CAACiC,SAAD,CAAT;AACH,KAPD,CAOE,OAAOE,GAAP,EAAY;AACV,UAAIA,GAAG,CAACC,QAAJ,CAAaC,MAAb,KAAwB,GAA5B,EAAiC;AAC7BC,QAAAA,KAAK,CAACH,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBK,KAAnB,CAAL;AACH;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCN,GAAtC;AACH;AACJ,GAdD;;AAgBA,QAAMH,MAAM,GAAGnC,gBAAf;;AAEA,QAAM6C,YAAY,GAAG,MAAOC,EAAP,IAAc;AAC/B,UAAMC,IAAI,GAAG7C,MAAM,CAAC8C,MAAP,CAAeD,IAAD,IAAUA,IAAI,CAACE,GAAL,KAAaH,EAArC,EAAyC,CAAzC,CAAb;;AAEA,QAAIC,IAAI,KAAKG,SAAT,IAAsBH,IAAI,CAACI,MAAL,KAAgB,KAA1C,EAAiD;AAC7C,UAAI;AACA;AACA,cAAMvD,GAAG,CAACwD,IAAJ,CAAU,MAAV,EAAiB;AACnB1C,UAAAA,SADmB;AAEnBE,UAAAA,QAFmB;AAGnBE,UAAAA,YAHmB;AAInBE,UAAAA,eAJmB;AAKnBE,UAAAA;AALmB,SAAjB,CAAN;AAQAb,QAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,QAAAA,SAAS,CAAC,KAAD,CAAT;AAEAwB,QAAAA,cAAc,CAAC;AAAEI,UAAAA;AAAF,SAAD,CAAd;AAEAxB,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,QAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,QAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,QAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACAE,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACH,OApBD,CAoBE,OAAOmB,GAAP,EAAY;AACV,YAAIA,GAAG,CAACC,QAAJ,CAAaC,MAAb,KAAwB,GAA5B,EAAiC;AAC7BC,UAAAA,KAAK,CAACH,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBK,KAAnB,CAAL;AACH;;AACDC,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BN,GAA/B;AACH;AACJ,KA3BD,MA2BO;AACH,UAAI;AACA;AACA,cAAM1C,GAAG,CAACyD,GAAJ,CAAS,OAAMN,IAAI,CAACE,GAAI,EAAxB,EAA2B;AAC7BvC,UAAAA,SAD6B;AAE7BE,UAAAA,QAF6B;AAG7BE,UAAAA,YAH6B;AAI7BE,UAAAA,eAJ6B;AAK7BE,UAAAA;AAL6B,SAA3B,CAAN;AAQAb,QAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,QAAAA,SAAS,CAAC,KAAD,CAAT;AAEAwB,QAAAA,cAAc,CAAC;AAAEI,UAAAA;AAAF,SAAD,CAAd;AACH,OAdD,CAcE,OAAOG,GAAP,EAAY;AACV,YAAIA,GAAG,CAACC,QAAJ,CAAaC,MAAb,KAAwB,GAA5B,EAAiC;AAC7BC,UAAAA,KAAK,CAACH,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBK,KAAnB,CAAL;AACH;;AACDC,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BN,GAA/B;AACH;AACJ;AACJ,GApDD;;AAsDA,QAAMgB,UAAU,GAAIR,EAAD,IAAQ;AACvB3C,IAAAA,SAAS,CAAEoD,SAAD,IAAe;AACrB,aAAOA,SAAS,CAACC,GAAV,CAAeT,IAAD,IAAU;AAC3B,YAAIA,IAAI,CAACE,GAAL,KAAaH,EAAjB,EAAqB;AACjB,iBAAO,EACH,GAAGC,IADA;AAEHzC,YAAAA,MAAM,EAAE;AAFL,WAAP;AAIH,SALD,MAKO;AACH,iBAAOyC,IAAP;AACH;AACJ,OATM,CAAP;AAUH,KAXQ,CAAT;AAaA,UAAMA,IAAI,GAAG7C,MAAM,CAAC8C,MAAP,CAAeD,IAAD,IAAUA,IAAI,CAACE,GAAL,KAAaH,EAArC,EAAyC,CAAzC,CAAb;AACAnC,IAAAA,YAAY,CAACoC,IAAI,CAACrC,SAAN,CAAZ;AACAG,IAAAA,WAAW,CAACkC,IAAI,CAACnC,QAAN,CAAX;AACAG,IAAAA,eAAe,CAACgC,IAAI,CAACjC,YAAN,CAAf;AACAG,IAAAA,kBAAkB,CAAC8B,IAAI,CAAC/B,eAAN,CAAlB;AACAG,IAAAA,YAAY,CAAC4B,IAAI,CAAC7B,SAAN,CAAZ;AAEAT,IAAAA,gBAAgB,CAACsC,IAAI,CAACE,GAAN,CAAhB;AACA1C,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH,GAvBD;;AAyBA,QAAMkD,YAAY,GAAG,MAAM;AACvB1B,IAAAA,cAAc,CAAC;AAAEI,MAAAA;AAAF,KAAD,CAAd;AAEA9B,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,IAAAA,SAAS,CAAC,KAAD,CAAT;AACH,GALD;;AAOA,QAAMmD,YAAY,GAAG,MAAOZ,EAAP,IAAc;AAC/B,QAAI;AACA;AACA,YAAMlD,GAAG,CAAC+D,MAAJ,CAAY,OAAMb,EAAG,EAArB,CAAN;AAEAf,MAAAA,cAAc,CAAC;AAAEI,QAAAA;AAAF,OAAD,CAAd;AAEA9B,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,MAAAA,SAAS,CAAC,KAAD,CAAT;AACH,KARD,CAQE,OAAO+B,GAAP,EAAY;AACV,UAAIA,GAAG,CAACC,QAAJ,CAAaC,MAAb,KAAwB,GAA5B,EAAiC;AAC7BC,QAAAA,KAAK,CAACH,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBK,KAAnB,CAAL;AACH;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BN,GAA/B;AACH;AACJ,GAfD;;AAiBA9C,EAAAA,SAAS,CAAC,MAAM;AACZuC,IAAAA,cAAc,CAAC;AAAEI,MAAAA;AAAF,KAAD,CAAd;AACH,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;AAIA,QAAMyB,gBAAgB,GAAG;AACrBf,IAAAA,YADqB;AAErBY,IAAAA,YAFqB;AAGrBC,IAAAA,YAHqB;AAIrBrC,IAAAA,cAJqB;AAKrBI,IAAAA,aALqB;AAMrBC,IAAAA,iBANqB;AAOrBC,IAAAA,oBAPqB;AAQrBC,IAAAA,qBARqB;AASrBC,IAAAA;AATqB,GAAzB;AAWA,QAAMgC,mBAAmB,GAAG;AAAEnD,IAAAA,SAAF;AAAaE,IAAAA,QAAb;AAAuBE,IAAAA,YAAvB;AAAqCE,IAAAA,eAArC;AAAsDE,IAAAA,SAAtD;AAAiEV,IAAAA;AAAjE,GAA5B;AACA,QAAMsD,cAAc,GAAG;AAAE1C,IAAAA;AAAF,GAAvB;AACA,QAAM2C,aAAa,GAAG;AAAET,IAAAA;AAAF,GAAtB;AACA,QAAMU,WAAW,GAAG;AAAE/D,IAAAA,UAAF;AAAcG,IAAAA,QAAd;AAAwBE,IAAAA;AAAxB,GAApB;AAEA,sBACI;AAAA,eACKJ,MAAM,CAACsD,GAAP,CAAYT,IAAD,iBACR;AAAA,gBACKA,IAAI,CAACI,MAAL,KAAgB,IAAhB,IAAwBJ,IAAI,CAACzC,MAAL,KAAgB,KAAxC,gBACG,QAAC,UAAD;AAAY,QAAA,aAAa,EAAEyD,aAA3B;AAA0C,QAAA,MAAM,EAAEC,WAAlD;AAA+D,QAAA,IAAI,EAAEjB;AAArE;AAAA;AAAA;AAAA;AAAA,cADH,gBAGG,QAAC,aAAD;AACI,QAAA,gBAAgB,EAAEa,gBADtB;AAEI,QAAA,WAAW,EAAEC,mBAFjB;AAGI,QAAA,MAAM,EAAEC,cAHZ;AAII,QAAA,IAAI,EAAEf;AAJV;AAAA;AAAA;AAAA;AAAA;AAJR,OAAUA,IAAI,CAACE,GAAf;AAAA;AAAA;AAAA;AAAA,YADH,CADL,EAeK7C,QAAQ,KAAK,IAAb,gBACG;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACI,QAAC,aAAD;AAAe,UAAA,SAAS,EAAC,eAAzB;AAAyC,UAAA,KAAK,EAAC,2BAA/C;AAAuD,UAAA,SAAS,EAAC,MAAjE;AAAA,iCACI,QAAC,IAAD,CAAM,OAAN;AACI,YAAA,KAAK,EAAE;AAAE6D,cAAAA,KAAK,EAAE;AAAT,aADX;AAEI,YAAA,IAAI,EAAC,MAFT;AAGI,YAAA,WAAW,EAAC,0BAHhB;AAII,YAAA,KAAK,EAAEvD,SAJX;AAKI,YAAA,QAAQ,EAAEW;AALd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACI,QAAC,aAAD;AAAe,UAAA,SAAS,EAAC,eAAzB;AAAyC,UAAA,KAAK,EAAC,eAA/C;AAAqD,UAAA,SAAS,EAAC,MAA/D;AAAA,iCACI,QAAC,IAAD,CAAM,OAAN;AACI,YAAA,KAAK,EAAE;AAAE4C,cAAAA,KAAK,EAAE;AAAT,aADX;AAEI,YAAA,IAAI,EAAC,MAFT;AAGI,YAAA,WAAW,EAAC,cAHhB;AAII,YAAA,KAAK,EAAErD,QAJX;AAKI,YAAA,QAAQ,EAAEa;AALd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAZJ,eAuBI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACI,QAAC,aAAD;AAAe,UAAA,SAAS,EAAC,eAAzB;AAAyC,UAAA,KAAK,EAAC,2BAA/C;AAAuD,UAAA,SAAS,EAAC,MAAjE;AAAA,iCACI,QAAC,IAAD,CAAM,OAAN;AACI,YAAA,KAAK,EAAE;AAAEwC,cAAAA,KAAK,EAAE;AAAT,aADX;AAEI,YAAA,IAAI,EAAC,MAFT;AAGI,YAAA,WAAW,EAAC,0BAHhB;AAII,YAAA,KAAK,EAAEnD,YAJX;AAKI,YAAA,QAAQ,EAAEY;AALd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAvBJ,eAkCI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI,QAAC,aAAD;AAAe,UAAA,SAAS,EAAC,eAAzB;AAAyC,UAAA,KAAK,EAAC,0BAA/C;AAAsD,UAAA,SAAS,EAAC,MAAhE;AAAA,iCACI,QAAC,IAAD,CAAM,OAAN;AACI,YAAA,KAAK,EAAE;AAAEuC,cAAAA,KAAK,EAAE;AAAT,aADX;AAEI,YAAA,IAAI,EAAC,MAFT;AAGI,YAAA,WAAW,EAAC,0BAHhB;AAII,YAAA,KAAK,EAAE/C,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,IAApC,GAA2C,EAA3C,GAAgDF,eAJ3D;AAKI,YAAA,QAAQ,EACJE,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,IAApC,GAA2CU,qBAA3C,GAAmED,oBAN3E;AAQI,YAAA,QAAQ,EAAET,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,IAApC,GAA2C,IAA3C,GAAkD;AARhE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,EAaKJ,YAAY,IAAIE,eAAhB,IAAmC,CAACI,WAApC,IAAmDF,SAAS,KAAK,IAAjE,IAAyEA,SAAS,KAAK,IAAvF,iBACG,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,SAAS,EAAC,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdR;AAAA;AAAA;AAAA;AAAA;AAAA,cAlCJ,eAmDI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AACI,UAAA,MAAM,MADV;AAEI,UAAA,KAAK,EAAC,cAFV;AAGI,UAAA,IAAI,EAAC,QAHT;AAII,UAAA,IAAI,EAAC,OAJT;AAKI,UAAA,KAAK,EAAC,cALV;AAMI,UAAA,OAAO,EAAEA,SAAS,KAAK,IAN3B;AAOI,UAAA,QAAQ,EAAEW;AAPd;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI,QAAC,IAAD,CAAM,KAAN;AACI,UAAA,MAAM,MADV;AAEI,UAAA,KAAK,EAAC,cAFV;AAGI,UAAA,IAAI,EAAC,QAHT;AAII,UAAA,IAAI,EAAC,OAJT;AAKI,UAAA,KAAK,EAAC,cALV;AAMI,UAAA,OAAO,EAAEX,SAAS,KAAK,IAN3B;AAOI,UAAA,QAAQ,EAAEW;AAPd;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAmBI,QAAC,IAAD,CAAM,KAAN;AACI,UAAA,MAAM,MADV;AAEI,UAAA,KAAK,EAAC,0BAFV;AAGI,UAAA,IAAI,EAAC,QAHT;AAII,UAAA,IAAI,EAAC,OAJT;AAKI,UAAA,KAAK,EAAC,0BALV;AAMI,UAAA,OAAO,EAAEX,SAAS,KAAK,MAN3B;AAOI,UAAA,QAAQ,EAAEW;AAPd;AAAA;AAAA;AAAA;AAAA,gBAnBJ,eA4BI,QAAC,IAAD,CAAM,KAAN;AACI,UAAA,MAAM,MADV;AAEI,UAAA,KAAK,EAAC,0BAFV;AAGI,UAAA,IAAI,EAAC,QAHT;AAII,UAAA,IAAI,EAAC,OAJT;AAKI,UAAA,KAAK,EAAC,0BALV;AAMI,UAAA,OAAO,EAAEX,SAAS,KAAK,MAN3B;AAOI,UAAA,QAAQ,EAAEW;AAPd;AAAA;AAAA;AAAA;AAAA,gBA5BJ,eAqCI,QAAC,IAAD,CAAM,KAAN;AACI,UAAA,MAAM,MADV;AAEI,UAAA,KAAK,EAAC,0BAFV;AAGI,UAAA,IAAI,EAAC,QAHT;AAII,UAAA,IAAI,EAAC,OAJT;AAKI,UAAA,KAAK,EAAC,0BALV;AAMI,UAAA,OAAO,EAAEX,SAAS,KAAK,MAN3B;AAOI,UAAA,QAAQ,EAAEW;AAPd;AAAA;AAAA;AAAA;AAAA,gBArCJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAnDJ,eAkGI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACI,QAAC,KAAD,CAAO,QAAP;AAAA,kCACI,QAAC,MAAD;AACI,YAAA,KAAK,EAAE;AAAEqC,cAAAA,eAAe,EAAE,SAAnB;AAA8BC,cAAAA,MAAM,EAAE;AAAtC,aADX;AAEI,YAAA,OAAO,EAAC,SAFZ;AAGI,YAAA,SAAS,EAAC,MAHd;AAII,YAAA,OAAO,EAAE,MAAMtB,YAAY,EAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAQI,QAAC,MAAD;AACI,YAAA,KAAK,EAAE;AAAEqB,cAAAA,eAAe,EAAE,SAAnB;AAA8BC,cAAAA,MAAM,EAAE;AAAtC,aADX;AAEI,YAAA,OAAO,EAAC,WAFZ;AAGI,YAAA,OAAO,EAAE,MAAMV,YAAY,EAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAlGJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,GAsHG,EArIR,EAuIKxD,UAAU,iBACP;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBACKC,MAAM,CAACkE,MAAP,GAAgB,EAAhB,iBACG,QAAC,MAAD;AACI,QAAA,KAAK,EAAE;AAAEF,UAAAA,eAAe,EAAE,SAAnB;AAA8BC,UAAAA,MAAM,EAAE;AAAtC,SADX;AAEI,QAAA,OAAO,EAAC,SAFZ;AAGI,QAAA,OAAO,EAAErC,QAHb;AAII,QAAA,QAAQ,EAAE1B,QAAQ,IAAIE,MAAZ,GAAqB,IAArB,GAA4B,KAJ1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,YAxIR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuJH;;GApVQP,e;;KAAAA,e;AAsVT,eAAeA,eAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Form, FloatingLabel } from 'react-bootstrap';\n\nimport * as Api from '../../api';\n\nimport EducationForm from './EducationForm';\nimport EducationP from './EducationP';\n\nfunction EducationDetail({ portfolioOwnerId, isEditable }) {\n    const [dbItem, setDbItem] = useState([]);\n    const [isToggle, setIsToggle] = useState(false); // 추가 버튼 클릭 유무\n    const [isEdit, setIsEdit] = useState(false); // 편집 버튼 클릭 유무\n    const [currentEditId, setcurrentEditId] = useState(''); // Edit 버튼을 클릭 시 버튼 표시를 구분하기 위한 값\n\n    const [eduSchool, setEduSchool] = useState(''); // 학교이름\n    const [eduMajor, setEduMajor] = useState(''); // 전공\n    const [eduEnterDate, setEduEnterDate] = useState(''); // 입학일자\n    const [eduGraduateDate, setEduGraduateDate] = useState(''); // 졸업일자\n    const [eduDegree, setEduDegree] = useState('재학'); // 학위\n\n    const isDateValid = eduEnterDate < eduGraduateDate;\n\n    const onChangeSchool = (e) => {\n        setEduSchool(e.target.value);\n    };\n\n    const onChangeMajor = (e) => {\n        setEduMajor(e.target.value);\n    };\n\n    const onChangeEnterDate = (e) => {\n        setEduEnterDate(e.target.value);\n    };\n\n    const onChangeGraduateDate = (e) => {\n        setEduGraduateDate(e.target.value);\n    };\n\n    const offChangeGraduateDate = (e) => {\n        setEduGraduateDate('');\n    };\n\n    const onChangeDegree = (e) => {\n        setEduDegree(e.target.value);\n    };\n\n    const AddInput = () => {\n        setIsToggle(true);\n\n        setEduSchool('');\n        setEduMajor('');\n        setEduEnterDate('');\n        setEduGraduateDate('');\n        setEduDegree('재학');\n    };\n\n    const fetchEducation = async (ownerId) => {\n        try {\n            // \"/edu\" 엔드포인트로 요청해 사용자 정보를 불러옴.(userId는 req.currentUserId 사용)\n            const res = await Api.get(`edu/${ownerId.userId}`);\n            // 사용자 정보는 response의 data임.\n            const ownerData = res.data;\n            // portfolioOwner을 해당 사용자 정보로 세팅함.\n            setDbItem(ownerData);\n        } catch (err) {\n            if (err.response.status === 400) {\n                alert(err.response.data.error);\n            }\n            console.log('사용자 데이터 불러오기에 실패하였습니다.', err);\n        }\n    };\n\n    const userId = portfolioOwnerId;\n\n    const handleSubmit = async (id) => {\n        const item = dbItem.filter((item) => item._id === id)[0];\n\n        if (item === undefined || item.isSave === false) {\n            try {\n                // \"/edu\" 엔드포인트로 post요청함.(userId는 req.currentUserId 사용)\n                await Api.post(`edu/`, {\n                    eduSchool,\n                    eduMajor,\n                    eduEnterDate,\n                    eduGraduateDate,\n                    eduDegree,\n                });\n\n                setIsToggle(false);\n                setIsEdit(false);\n\n                fetchEducation({ userId });\n\n                setEduSchool('');\n                setEduMajor('');\n                setEduEnterDate('');\n                setEduGraduateDate('');\n                setEduDegree('');\n            } catch (err) {\n                if (err.response.status === 400) {\n                    alert(err.response.data.error);\n                }\n                console.log('학위 추가에 실패하였습니다.', err);\n            }\n        } else {\n            try {\n                // \"edu/educationId\" 엔드포인트로 put요청함.\n                await Api.put(`edu/${item._id}`, {\n                    eduSchool,\n                    eduMajor,\n                    eduEnterDate,\n                    eduGraduateDate,\n                    eduDegree,\n                });\n\n                setIsToggle(false);\n                setIsEdit(false);\n\n                fetchEducation({ userId });\n            } catch (err) {\n                if (err.response.status === 400) {\n                    alert(err.response.data.error);\n                }\n                console.log('학위 수정에 실패하였습니다.', err);\n            }\n        }\n    };\n\n    const handleEdit = (id) => {\n        setDbItem((prevItems) => {\n            return prevItems.map((item) => {\n                if (item._id === id) {\n                    return {\n                        ...item,\n                        isEdit: true,\n                    };\n                } else {\n                    return item;\n                }\n            });\n        });\n\n        const item = dbItem.filter((item) => item._id === id)[0];\n        setEduSchool(item.eduSchool);\n        setEduMajor(item.eduMajor);\n        setEduEnterDate(item.eduEnterDate);\n        setEduGraduateDate(item.eduGraduateDate);\n        setEduDegree(item.eduDegree);\n\n        setcurrentEditId(item._id);\n        setIsEdit(true);\n    };\n\n    const handleCancel = () => {\n        fetchEducation({ userId });\n\n        setIsToggle(false);\n        setIsEdit(false);\n    };\n\n    const handleDelete = async (id) => {\n        try {\n            // \"edu/educationId\" 엔드포인트로 delete 요청함.\n            await Api.delete(`edu/${id}`);\n\n            fetchEducation({ userId });\n\n            setIsToggle(false);\n            setIsEdit(false);\n        } catch (err) {\n            if (err.response.status === 400) {\n                alert(err.response.data.error);\n            }\n            console.log('학위 삭제에 실패하였습니다.', err);\n        }\n    };\n\n    useEffect(() => {\n        fetchEducation({ userId });\n    }, [userId]);\n\n    const formSendFunction = {\n        handleSubmit,\n        handleCancel,\n        handleDelete,\n        onChangeSchool,\n        onChangeMajor,\n        onChangeEnterDate,\n        onChangeGraduateDate,\n        offChangeGraduateDate,\n        onChangeDegree,\n    };\n    const formSendcurrentData = { eduSchool, eduMajor, eduEnterDate, eduGraduateDate, eduDegree, currentEditId };\n    const formSendisFlag = { isDateValid };\n    const pSendFunction = { handleEdit };\n    const pSendisFlag = { isEditable, isToggle, isEdit };\n\n    return (\n        <div>\n            {dbItem.map((item) => (\n                <div key={item._id}>\n                    {item.isSave === true && item.isEdit === false ? (\n                        <EducationP pSendFunction={pSendFunction} isFlag={pSendisFlag} item={item} />\n                    ) : (\n                        <EducationForm\n                            formSendFunction={formSendFunction}\n                            currentData={formSendcurrentData}\n                            isFlag={formSendisFlag}\n                            item={item}\n                        />\n                    )}\n                </div>\n            ))}\n            {isToggle === true ? (\n                <div>\n                    <div className='mb-2'>\n                        <FloatingLabel controlId='floatingInput' label='학교이름*' className='mb-3'>\n                            <Form.Control\n                                style={{ width: '100%' }}\n                                type='text'\n                                placeholder='학교이름'\n                                value={eduSchool}\n                                onChange={onChangeSchool}\n                            />\n                        </FloatingLabel>\n                    </div>\n                    <div className='mb-2'>\n                        <FloatingLabel controlId='floatingInput' label='전공*' className='mb-3'>\n                            <Form.Control\n                                style={{ width: '100%' }}\n                                type='text'\n                                placeholder='전공'\n                                value={eduMajor}\n                                onChange={onChangeMajor}\n                            />\n                        </FloatingLabel>\n                    </div>\n                    <div className='mb-2'>\n                        <FloatingLabel controlId='floatingInput' label='입학일자*' className='mb-3'>\n                            <Form.Control\n                                style={{ width: '100%' }}\n                                type='date'\n                                placeholder='입학일자'\n                                value={eduEnterDate}\n                                onChange={onChangeEnterDate}\n                            />\n                        </FloatingLabel>\n                    </div>\n                    <div className='mb-2'>\n                        <FloatingLabel controlId='floatingInput' label='졸업일자' className='mb-3'>\n                            <Form.Control\n                                style={{ width: '100%' }}\n                                type='date'\n                                placeholder='졸업일자'\n                                value={eduDegree === '재학' || eduDegree === '휴학' ? '' : eduGraduateDate}\n                                onChange={\n                                    eduDegree === '재학' || eduDegree === '휴학' ? offChangeGraduateDate : onChangeGraduateDate\n                                }\n                                disabled={eduDegree === '재학' || eduDegree === '휴학' ? true : false}\n                            />\n                        </FloatingLabel>\n                        {eduEnterDate && eduGraduateDate && !isDateValid && eduDegree !== '재학' && eduDegree !== '휴학' && (\n                            <Form.Text className='date-success'>입학날짜보다 졸업일자가 이전입니다.</Form.Text>\n                        )}\n                    </div>\n                    <div className='mb-2'>\n                        <Form.Check\n                            inline\n                            label='재학'\n                            name='group1'\n                            type='radio'\n                            value='재학'\n                            checked={eduDegree === '재학'}\n                            onChange={onChangeDegree}\n                        />\n                        <Form.Check\n                            inline\n                            label='휴학'\n                            name='group1'\n                            type='radio'\n                            value='휴학'\n                            checked={eduDegree === '휴학'}\n                            onChange={onChangeDegree}\n                        />\n                        <Form.Check\n                            inline\n                            label='학사졸업'\n                            name='group1'\n                            type='radio'\n                            value='학사졸업'\n                            checked={eduDegree === '학사졸업'}\n                            onChange={onChangeDegree}\n                        />\n                        <Form.Check\n                            inline\n                            label='석사졸업'\n                            name='group1'\n                            type='radio'\n                            value='석사졸업'\n                            checked={eduDegree === '석사졸업'}\n                            onChange={onChangeDegree}\n                        />\n                        <Form.Check\n                            inline\n                            label='박사졸업'\n                            name='group1'\n                            type='radio'\n                            value='박사졸업'\n                            checked={eduDegree === '박사졸업'}\n                            onChange={onChangeDegree}\n                        />\n                    </div>\n                    <div className='mb-3 text-center'>\n                        <React.Fragment>\n                            <Button\n                                style={{ backgroundColor: '#3077e1', border: 'none' }}\n                                variant='primary'\n                                className='me-2'\n                                onClick={() => handleSubmit()}>\n                                확인\n                            </Button>\n                            <Button\n                                style={{ backgroundColor: '#7469bc', border: 'none' }}\n                                variant='secondary'\n                                onClick={() => handleCancel()}>\n                                취소\n                            </Button>\n                        </React.Fragment>\n                    </div>\n                </div>\n            ) : (\n                ''\n            )}\n            {isEditable && (\n                <div className='mb-3 text-center'>\n                    {dbItem.length < 10 && (\n                        <Button\n                            style={{ backgroundColor: '#2a3741', border: 'none' }}\n                            variant='primary'\n                            onClick={AddInput}\n                            disabled={isToggle || isEdit ? true : false}>\n                            +\n                        </Button>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default EducationDetail;\n"]},"metadata":{},"sourceType":"module"}