{"ast":null,"code":"var _jsxFileName = \"/Users/luna/Documents/Elice_1st_Project/portfolio-share-service-racer/front/src/pages/register/RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Container, Col, Row, Form, Button } from \"react-bootstrap\";\nimport * as Api from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegisterForm() {\n  _s();\n\n  const navigate = useNavigate(); //useState로 email 상태를 생성함.\n\n  const [email, setEmail] = useState(\"\"); //useState로 password 상태를 생성함.\n\n  const [password, setPassword] = useState(\"\"); //useState로 confirmPassword 상태를 생성함.\n\n  const [confirmPassword, setConfirmPassword] = useState(\"\"); //useState로 name 상태를 생성함.\n\n  const [name, setName] = useState(\"\"); //이메일이 abc@example.com 형태인지 regex를 이용해 확인함.\n\n  const validateEmail = email => {\n    return email.toLowerCase().match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n  }; //위 validateEmail 함수를 통해 이메일 형태 적합 여부를 확인함.\n\n\n  const isEmailValid = validateEmail(email); // 비밀번호가 4글자 이상인지 여부를 확인함.\n\n  const isPasswordValid = password.length >= 4; // 비밀번호와 확인용 비밀번호가 일치하는지 여부를 확인함.\n\n  const isPasswordSame = password === confirmPassword; // 이름이 2글자 이상인지 여부를 확인함.\n\n  const isNameValid = name.length >= 2; // 위 4개 조건이 모두 동시에 만족되는지 여부를 확인함.\n\n  const isFormValid = isEmailValid && isPasswordValid && isPasswordSame && isNameValid;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      // \"user/register\" 엔드포인트로 post요청함.\n      await Api.post(\"user/register\", {\n        email,\n        password,\n        name\n      }); // 로그인 페이지로 이동함.\n\n      navigate(\"/login\");\n    } catch (err) {\n      console.log(\"회원가입에 실패하였습니다.\", err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-md-center mt-5\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        lg: 8,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"registerEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              autoComplete: \"off\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), !isEmailValid && /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-success\",\n              children: \"\\uC774\\uBA54\\uC77C \\uD615\\uC2DD\\uC774 \\uC62C\\uBC14\\uB974\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"registerPassword\",\n            className: \"mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              autoComplete: \"off\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), !isPasswordValid && /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-success\",\n              children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB294 4\\uAE00\\uC790 \\uC774\\uC0C1\\uC73C\\uB85C \\uC124\\uC815\\uD574 \\uC8FC\\uC138\\uC694.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"registerConfirmPassword\",\n            className: \"mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC7AC\\uD655\\uC778\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              autoComplete: \"off\",\n              value: confirmPassword,\n              onChange: e => setConfirmPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), !isPasswordSame && /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-success\",\n              children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"registerName\",\n            className: \"mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\uC774\\uB984\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              autoComplete: \"off\",\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), !isNameValid && /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-success\",\n              children: \"\\uC774\\uB984\\uC740 2\\uAE00\\uC790 \\uC774\\uC0C1\\uC73C\\uB85C \\uC124\\uC815\\uD574 \\uC8FC\\uC138\\uC694.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            className: \"mt-3 text-center\",\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              sm: {\n                span: 20\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                type: \"submit\",\n                disabled: !isFormValid,\n                onClick: handleSubmit,\n                children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            className: \"mt-3 text-center\",\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              sm: {\n                span: 20\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"light\",\n                onClick: () => navigate(\"/login\"),\n                children: \"\\uB85C\\uADF8\\uC778\\uD558\\uAE30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterForm, \"ETPRkUoztj8kFxWb54ysOqkq/0w=\", false, function () {\n  return [useNavigate];\n});\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/Users/luna/Documents/Elice_1st_Project/portfolio-share-service-racer/front/src/pages/register/RegisterForm.js"],"names":["React","useState","useNavigate","Container","Col","Row","Form","Button","Api","RegisterForm","navigate","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","name","setName","validateEmail","toLowerCase","match","isEmailValid","isPasswordValid","length","isPasswordSame","isNameValid","isFormValid","handleSubmit","e","preventDefault","post","err","console","log","target","value","span"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Container, Col, Row, Form, Button } from \"react-bootstrap\";\n\nimport * as Api from \"../../api\";\n\nfunction RegisterForm() {\n  const navigate = useNavigate();\n\n  //useState로 email 상태를 생성함.\n  const [email, setEmail] = useState(\"\");\n  //useState로 password 상태를 생성함.\n  const [password, setPassword] = useState(\"\");\n  //useState로 confirmPassword 상태를 생성함.\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  //useState로 name 상태를 생성함.\n  const [name, setName] = useState(\"\");\n\n  //이메일이 abc@example.com 형태인지 regex를 이용해 확인함.\n  const validateEmail = (email) => {\n    return email\n      .toLowerCase()\n      .match(\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n      );\n  };\n\n  //위 validateEmail 함수를 통해 이메일 형태 적합 여부를 확인함.\n  const isEmailValid = validateEmail(email);\n  // 비밀번호가 4글자 이상인지 여부를 확인함.\n  const isPasswordValid = password.length >= 4;\n  // 비밀번호와 확인용 비밀번호가 일치하는지 여부를 확인함.\n  const isPasswordSame = password === confirmPassword;\n  // 이름이 2글자 이상인지 여부를 확인함.\n  const isNameValid = name.length >= 2;\n\n  // 위 4개 조건이 모두 동시에 만족되는지 여부를 확인함.\n  const isFormValid =\n    isEmailValid && isPasswordValid && isPasswordSame && isNameValid;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      // \"user/register\" 엔드포인트로 post요청함.\n      await Api.post(\"user/register\", {\n        email,\n        password,\n        name,\n      });\n\n      // 로그인 페이지로 이동함.\n      navigate(\"/login\");\n    } catch (err) {\n      console.log(\"회원가입에 실패하였습니다.\", err);\n    }\n  };\n\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center mt-5\">\n        <Col lg={8}>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group controlId=\"registerEmail\">\n              <Form.Label>이메일 주소</Form.Label>\n              <Form.Control\n                type=\"email\"\n                autoComplete=\"off\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              {!isEmailValid && (\n                <Form.Text className=\"text-success\">\n                  이메일 형식이 올바르지 않습니다.\n                </Form.Text>\n              )}\n            </Form.Group>\n\n            <Form.Group controlId=\"registerPassword\" className=\"mt-3\">\n              <Form.Label>비밀번호</Form.Label>\n              <Form.Control\n                type=\"password\"\n                autoComplete=\"off\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              {!isPasswordValid && (\n                <Form.Text className=\"text-success\">\n                  비밀번호는 4글자 이상으로 설정해 주세요.\n                </Form.Text>\n              )}\n            </Form.Group>\n\n            <Form.Group controlId=\"registerConfirmPassword\" className=\"mt-3\">\n              <Form.Label>비밀번호 재확인</Form.Label>\n              <Form.Control\n                type=\"password\"\n                autoComplete=\"off\"\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n              />\n              {!isPasswordSame && (\n                <Form.Text className=\"text-success\">\n                  비밀번호가 일치하지 않습니다.\n                </Form.Text>\n              )}\n            </Form.Group>\n\n            <Form.Group controlId=\"registerName\" className=\"mt-3\">\n              <Form.Label>이름</Form.Label>\n              <Form.Control\n                type=\"text\"\n                autoComplete=\"off\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n              {!isNameValid && (\n                <Form.Text className=\"text-success\">\n                  이름은 2글자 이상으로 설정해 주세요.\n                </Form.Text>\n              )}\n            </Form.Group>\n\n            <Form.Group as={Row} className=\"mt-3 text-center\" >\n              <Col sm={{ span: 20 }}>\n                <Button variant=\"primary\" type=\"submit\" disabled={!isFormValid} onClick={handleSubmit}>\n                  회원가입\n                </Button>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} className=\"mt-3 text-center\">\n              <Col sm={{ span: 20 }}>\n                <Button variant=\"light\" onClick={() => navigate(\"/login\")}>\n                  로그인하기\n                </Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}