{"ast":null,"code":"var _jsxFileName = \"/Users/luna/Documents/Elice_1st_Project/my_test/front/src/components/Portfolio.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport { UserStateContext } from '../App';\nimport * as Api from '../api';\nimport User from './user/User';\nimport Award from './Award/Award';\nimport Education from './user/education/Education';\nimport Certificate from './user/certificate/Certificate'; // import Project from './user/project/Project';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Portfolio() {\n  _s();\n\n  var _userState$user, _userState$user2, _userState$user3;\n\n  const navigate = useNavigate();\n  const params = useParams(); // useState 훅을 통해 portfolioOwner 상태를 생성함.\n\n  const [portfolioOwner, setPortfolioOwner] = useState(null); // fetchPorfolioOwner 함수가 완료된 이후에만 (isFetchCompleted가 true여야) 컴포넌트가 구현되도록 함.\n  // 아래 코드를 보면, isFetchCompleted가 false이면 \"loading...\"만 반환되어서, 화면에 이 로딩 문구만 뜨게 됨.\n\n  const [isFetchCompleted, setIsFetchCompleted] = useState(false);\n  const userState = useContext(UserStateContext);\n\n  const fetchPorfolioOwner = async ownerId => {\n    // 유저 id를 가지고 \"/users/유저id\" 엔드포인트로 요청해 사용자 정보를 불러옴.\n    const res = await Api.get('users', ownerId); // 사용자 정보는 response의 data임.\n\n    const ownerData = res.data; // portfolioOwner을 해당 사용자 정보로 세팅함.\n\n    setPortfolioOwner(ownerData); // fetchPorfolioOwner 과정이 끝났으므로, isFetchCompleted를 true로 바꿈.\n\n    setIsFetchCompleted(true);\n  };\n\n  useEffect(() => {\n    // 전역 상태의 user가 null이라면 로그인이 안 된 상태이므로, 로그인 페이지로 돌림.\n    if (!userState.user) {\n      navigate('/login', {\n        replace: true\n      });\n      return;\n    }\n\n    if (params.userId) {\n      // 만약 현재 URL이 \"/users/:userId\" 라면, 이 userId를 유저 id로 설정함.\n      const ownerId = params.userId; // 해당 유저 id로 fetchPorfolioOwner 함수를 실행함.\n\n      fetchPorfolioOwner(ownerId);\n    } else {\n      // 이외의 경우, 즉 URL이 \"/\" 라면, 전역 상태의 user.id를 유저 id로 설정함.\n      const ownerId = userState.user.id; // 해당 유저 id로 fetchPorfolioOwner 함수를 실행함.\n\n      fetchPorfolioOwner(ownerId);\n    }\n  }, [params, userState, navigate]);\n\n  if (!isFetchCompleted) {\n    return 'loading...';\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(User, {\n          portfolioOwnerId: portfolioOwner.id,\n          isEditable: portfolioOwner.id === ((_userState$user = userState.user) === null || _userState$user === void 0 ? void 0 : _userState$user.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: true,\n        md: \"9\",\n        lg: \"9\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'left'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Award, {\n              portfolioOwnerId: portfolioOwner.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Education, {\n              portfolioOwnerId: portfolioOwner.id,\n              isEditable: portfolioOwner.id === ((_userState$user2 = userState.user) === null || _userState$user2 === void 0 ? void 0 : _userState$user2.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Certificate, {\n              portfolioOwnerId: portfolioOwner.id,\n              isEditable: portfolioOwner.id === ((_userState$user3 = userState.user) === null || _userState$user3 === void 0 ? void 0 : _userState$user3.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Portfolio, \"ozN5wJsbZI17qb28PSn+j5/v+Ps=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Portfolio;\nexport default Portfolio;\n\nvar _c;\n\n$RefreshReg$(_c, \"Portfolio\");","map":{"version":3,"sources":["/Users/luna/Documents/Elice_1st_Project/my_test/front/src/components/Portfolio.js"],"names":["React","useContext","useState","useEffect","useNavigate","useParams","Container","Col","Row","UserStateContext","Api","User","Award","Education","Certificate","Portfolio","navigate","params","portfolioOwner","setPortfolioOwner","isFetchCompleted","setIsFetchCompleted","userState","fetchPorfolioOwner","ownerId","res","get","ownerData","data","user","replace","userId","id","textAlign"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Container, Col, Row } from 'react-bootstrap';\n\nimport { UserStateContext } from '../App';\nimport * as Api from '../api';\nimport User from './user/User';\n\nimport Award from './Award/Award';\nimport Education from './user/education/Education';\nimport Certificate from './user/certificate/Certificate';\n// import Project from './user/project/Project';\n\nfunction Portfolio() {\n    const navigate = useNavigate();\n    const params = useParams();\n    // useState 훅을 통해 portfolioOwner 상태를 생성함.\n    const [portfolioOwner, setPortfolioOwner] = useState(null);\n    // fetchPorfolioOwner 함수가 완료된 이후에만 (isFetchCompleted가 true여야) 컴포넌트가 구현되도록 함.\n    // 아래 코드를 보면, isFetchCompleted가 false이면 \"loading...\"만 반환되어서, 화면에 이 로딩 문구만 뜨게 됨.\n    const [isFetchCompleted, setIsFetchCompleted] = useState(false);\n    const userState = useContext(UserStateContext);\n\n    const fetchPorfolioOwner = async (ownerId) => {\n        // 유저 id를 가지고 \"/users/유저id\" 엔드포인트로 요청해 사용자 정보를 불러옴.\n        const res = await Api.get('users', ownerId);\n        // 사용자 정보는 response의 data임.\n        const ownerData = res.data;\n        // portfolioOwner을 해당 사용자 정보로 세팅함.\n        setPortfolioOwner(ownerData);\n        // fetchPorfolioOwner 과정이 끝났으므로, isFetchCompleted를 true로 바꿈.\n        setIsFetchCompleted(true);\n    };\n\n    useEffect(() => {\n        // 전역 상태의 user가 null이라면 로그인이 안 된 상태이므로, 로그인 페이지로 돌림.\n        if (!userState.user) {\n            navigate('/login', { replace: true });\n            return;\n        }\n\n        if (params.userId) {\n            // 만약 현재 URL이 \"/users/:userId\" 라면, 이 userId를 유저 id로 설정함.\n            const ownerId = params.userId;\n            // 해당 유저 id로 fetchPorfolioOwner 함수를 실행함.\n            fetchPorfolioOwner(ownerId);\n        } else {\n            // 이외의 경우, 즉 URL이 \"/\" 라면, 전역 상태의 user.id를 유저 id로 설정함.\n            const ownerId = userState.user.id;\n            // 해당 유저 id로 fetchPorfolioOwner 함수를 실행함.\n            fetchPorfolioOwner(ownerId);\n        }\n    }, [params, userState, navigate]);\n\n    if (!isFetchCompleted) {\n        return 'loading...';\n    }\n\n    return (\n        <Container>\n            <Row>\n                <Col>\n                    <User portfolioOwnerId={portfolioOwner.id} isEditable={portfolioOwner.id === userState.user?.id} />\n                </Col>\n                <Col sm md='9' lg='9'>\n                    <div style={{ textAlign: 'left' }}>\n                        <div className='mb-3'>\n                            <Award portfolioOwnerId={portfolioOwner.id} />\n                        </div>\n                        <div className='mb-3'>\n                            <Education portfolioOwnerId={portfolioOwner.id} isEditable={portfolioOwner.id === userState.user?.id} />\n                        </div>\n                        <div className='mb-3'>\n                            <Certificate portfolioOwnerId={portfolioOwner.id} isEditable={portfolioOwner.id === userState.user?.id} />\n                        </div>\n                        <div className='mb-3'>{/* <Project portfolioOwnerId={portfolioOwner.id} /> */}</div>\n                    </div>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Portfolio;\n"]},"metadata":{},"sourceType":"module"}