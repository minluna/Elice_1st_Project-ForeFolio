{"ast":null,"code":"var _jsxFileName = \"/Users/luna/Documents/Elice_1st_Project/portfolio-share-service-racer/front/src/pages/register/RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FloatingLabel, Card, Container, Col, Row, Form, Button } from \"react-bootstrap\";\nimport * as Api from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegisterForm() {\n  _s();\n\n  const navigate = useNavigate(); //useState로 email 상태를 생성함.\n\n  const [email, setEmail] = useState(\"\"); //useState로 password 상태를 생성함.\n\n  const [password, setPassword] = useState(\"\"); //useState로 confirmPassword 상태를 생성함.\n\n  const [confirmPassword, setConfirmPassword] = useState(\"\"); //useState로 name 상태를 생성함.\n\n  const [name, setName] = useState(\"\"); //이메일이 abc@example.com 형태인지 regex를 이용해 확인함.\n\n  const validateEmail = email => {\n    return email.toLowerCase().match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n  }; //위 validateEmail 함수를 통해 이메일 형태 적합 여부를 확인함.\n\n\n  const isEmailValid = validateEmail(email); // 비밀번호가 4글자 이상인지 여부를 확인함.\n\n  const isPasswordValid = password.length >= 4; // 비밀번호와 확인용 비밀번호가 일치하는지 여부를 확인함.\n\n  const isPasswordSame = password === confirmPassword; // 이름이 2글자 이상인지 여부를 확인함.\n\n  const isNameValid = name.length >= 2; // 위 4개 조건이 모두 동시에 만족되는지 여부를 확인함.\n\n  const isFormValid = isEmailValid && isPasswordValid && isPasswordSame && isNameValid;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      // \"register\" 엔드포인트로 post요청함.\n      await Api.post(\"user/register/\", {\n        email,\n        password,\n        name\n      }); // 로그인 페이지로 이동함.\n\n      navigate(\"/login\");\n    } catch (err) {\n      if (err.response.status === 400) {\n        alert(err.response.data.error);\n      }\n\n      console.log(\"회원가입에 실패하였습니다.\", err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    style: {\n      height: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-md-center mt-5\",\n      children: \"Sign up for more!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-md-center mt-5\",\n      style: {\n        marginTop: \"100px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: 8,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"registerEmail\",\n              children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n                controlId: \"floatingInput\",\n                label: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\",\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"email\",\n                  autoComplete: \"off\",\n                  value: email,\n                  placeholder: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\",\n                  onChange: e => setEmail(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 19\n                }, this), !isEmailValid && /*#__PURE__*/_jsxDEV(Form.Text, {\n                  className: \"text-success\",\n                  children: \"\\uC774\\uBA54\\uC77C \\uD615\\uC2DD\\uC774 \\uC62C\\uBC14\\uB974\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"registerPassword\",\n              className: \"mt-3\",\n              children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n                controlId: \"floatingInput\",\n                label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  autoComplete: \"off\",\n                  value: password,\n                  placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n                  onChange: e => setPassword(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, this), !isPasswordValid && /*#__PURE__*/_jsxDEV(Form.Text, {\n                  className: \"text-success\",\n                  children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB294 4\\uAE00\\uC790 \\uC774\\uC0C1\\uC73C\\uB85C \\uC124\\uC815\\uD574 \\uC8FC\\uC138\\uC694.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"registerConfirmPassword\",\n              className: \"mt-3\",\n              children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n                controlId: \"floatingInput\",\n                label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC7AC\\uD655\\uC778\",\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  autoComplete: \"off\",\n                  value: confirmPassword,\n                  placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC7AC\\uD655\\uC778\",\n                  onChange: e => setConfirmPassword(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 19\n                }, this), !isPasswordSame && /*#__PURE__*/_jsxDEV(Form.Text, {\n                  className: \"text-success\",\n                  children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 39\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"registerName\",\n              className: \"mt-3\",\n              children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n                controlId: \"floatingInput\",\n                label: \"\\uC774\\uB984\",\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  autoComplete: \"off\",\n                  value: name,\n                  placeholder: \"\\uC774\\uB984\",\n                  onChange: e => setName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 19\n                }, this), !isNameValid && /*#__PURE__*/_jsxDEV(Form.Text, {\n                  className: \"text-success\",\n                  children: \"\\uC774\\uB984\\uC740 2\\uAE00\\uC790 \\uC774\\uC0C1\\uC73C\\uB85C \\uC124\\uC815\\uD574 \\uC8FC\\uC138\\uC694.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 36\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Row,\n              className: \"mt-3 text-center\",\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                sm: {\n                  span: 20\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  style: {\n                    backgroundColor: \"#2a3741\",\n                    border: \"none\"\n                  },\n                  type: \"submit\",\n                  disabled: !isFormValid,\n                  onClick: handleSubmit,\n                  children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Row,\n              className: \"mt-3 text-center\",\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                sm: {\n                  span: 20\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"light\",\n                  onClick: () => navigate(\"/login\"),\n                  children: \"\\uB85C\\uADF8\\uC778\\uD558\\uAE30\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterForm, \"ETPRkUoztj8kFxWb54ysOqkq/0w=\", false, function () {\n  return [useNavigate];\n});\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/Users/luna/Documents/Elice_1st_Project/portfolio-share-service-racer/front/src/pages/register/RegisterForm.js"],"names":["React","useState","useNavigate","FloatingLabel","Card","Container","Col","Row","Form","Button","Api","RegisterForm","navigate","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","name","setName","validateEmail","toLowerCase","match","isEmailValid","isPasswordValid","length","isPasswordSame","isNameValid","isFormValid","handleSubmit","e","preventDefault","post","err","response","status","alert","data","error","console","log","height","marginTop","target","value","span","backgroundColor","border"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FloatingLabel, Card, Container, Col, Row, Form, Button } from \"react-bootstrap\";\n\nimport * as Api from \"../../api\";\n\nfunction RegisterForm() {\n  const navigate = useNavigate();\n\n  //useState로 email 상태를 생성함.\n  const [email, setEmail] = useState(\"\");\n  //useState로 password 상태를 생성함.\n  const [password, setPassword] = useState(\"\");\n  //useState로 confirmPassword 상태를 생성함.\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  //useState로 name 상태를 생성함.\n  const [name, setName] = useState(\"\");\n\n  //이메일이 abc@example.com 형태인지 regex를 이용해 확인함.\n  const validateEmail = (email) => {\n    return email\n      .toLowerCase()\n      .match(\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n      );\n  };\n\n  //위 validateEmail 함수를 통해 이메일 형태 적합 여부를 확인함.\n  const isEmailValid = validateEmail(email);\n  // 비밀번호가 4글자 이상인지 여부를 확인함.\n  const isPasswordValid = password.length >= 4;\n  // 비밀번호와 확인용 비밀번호가 일치하는지 여부를 확인함.\n  const isPasswordSame = password === confirmPassword;\n  // 이름이 2글자 이상인지 여부를 확인함.\n  const isNameValid = name.length >= 2;\n\n  // 위 4개 조건이 모두 동시에 만족되는지 여부를 확인함.\n  const isFormValid = isEmailValid && isPasswordValid && isPasswordSame && isNameValid;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      // \"register\" 엔드포인트로 post요청함.\n      await Api.post(\"user/register/\", {\n        email,\n        password,\n        name,\n      });\n\n      // 로그인 페이지로 이동함.\n      navigate(\"/login\");\n    } catch (err) {\n      if (err.response.status === 400) {\n        alert(err.response.data.error);\n      }\n      console.log(\"회원가입에 실패하였습니다.\", err);\n    }\n  };\n\n  return (\n    <Container fluid style={{ height: \"100%\" }}>\n      <Row className=\"justify-content-md-center mt-5\">Sign up for more!</Row>\n      <Row className=\"justify-content-md-center mt-5\" style={{ marginTop: \"100px\" }}>\n        <Card>\n          <br />\n          <Col lg={8}>\n            <Form onSubmit={handleSubmit}>\n              <Form.Group controlId=\"registerEmail\">\n                <FloatingLabel controlId=\"floatingInput\" label=\"이메일 주소\" className=\"mb-3\">\n                  <Form.Control\n                    type=\"email\"\n                    autoComplete=\"off\"\n                    value={email}\n                    placeholder=\"이메일 주소\"\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                  {!isEmailValid && <Form.Text className=\"text-success\">이메일 형식이 올바르지 않습니다.</Form.Text>}\n                </FloatingLabel>\n              </Form.Group>\n\n              <Form.Group controlId=\"registerPassword\" className=\"mt-3\">\n                <FloatingLabel controlId=\"floatingInput\" label=\"비밀번호\" className=\"mb-3\">\n                  <Form.Control\n                    type=\"password\"\n                    autoComplete=\"off\"\n                    value={password}\n                    placeholder=\"비밀번호\"\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                  {!isPasswordValid && (\n                    <Form.Text className=\"text-success\">비밀번호는 4글자 이상으로 설정해 주세요.</Form.Text>\n                  )}\n                </FloatingLabel>\n              </Form.Group>\n\n              <Form.Group controlId=\"registerConfirmPassword\" className=\"mt-3\">\n                <FloatingLabel controlId=\"floatingInput\" label=\"비밀번호 재확인\" className=\"mb-3\">\n                  <Form.Control\n                    type=\"password\"\n                    autoComplete=\"off\"\n                    value={confirmPassword}\n                    placeholder=\"비밀번호 재확인\"\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                  />\n                  {!isPasswordSame && <Form.Text className=\"text-success\">비밀번호가 일치하지 않습니다.</Form.Text>}\n                </FloatingLabel>\n              </Form.Group>\n\n              <Form.Group controlId=\"registerName\" className=\"mt-3\">\n                <FloatingLabel controlId=\"floatingInput\" label=\"이름\" className=\"mb-3\">\n                  <Form.Control\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    value={name}\n                    placeholder=\"이름\"\n                    onChange={(e) => setName(e.target.value)}\n                  />\n                  {!isNameValid && <Form.Text className=\"text-success\">이름은 2글자 이상으로 설정해 주세요.</Form.Text>}\n                </FloatingLabel>\n              </Form.Group>\n\n              <Form.Group as={Row} className=\"mt-3 text-center\">\n                <Col sm={{ span: 20 }}>\n                  <Button\n                    style={{ backgroundColor: \"#2a3741\", border: \"none\" }}\n                    type=\"submit\"\n                    disabled={!isFormValid}\n                    onClick={handleSubmit}\n                  >\n                    회원가입\n                  </Button>\n                </Col>\n              </Form.Group>\n\n              <Form.Group as={Row} className=\"mt-3 text-center\">\n                <Col sm={{ span: 20 }}>\n                  <Button variant=\"light\" onClick={() => navigate(\"/login\")}>\n                    로그인하기\n                  </Button>\n                </Col>\n              </Form.Group>\n            </Form>\n          </Col>\n          <br />\n        </Card>\n      </Row>\n    </Container>\n  );\n}\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}