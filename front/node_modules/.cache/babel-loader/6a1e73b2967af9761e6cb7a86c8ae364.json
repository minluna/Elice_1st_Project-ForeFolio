{"ast":null,"code":"var _jsxFileName = \"/Users/luna/Documents/Elice_1st_Project/my_test/front/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, createContext } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport * as Api from \"./api\";\nimport { loginReducer } from \"./reducer\";\nimport Header from \"./components/Header\";\nimport LoginForm from \"./components/user/LoginForm\";\nimport Network from \"./components/user/Network\";\nimport RegisterForm from \"./components/user/RegisterForm\";\nimport Portfolio from \"./components/Portfolio\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserStateContext = /*#__PURE__*/createContext(null);\nexport const DispatchContext = /*#__PURE__*/createContext(null);\n\nfunction App() {\n  _s();\n\n  // useReducer 훅을 통해 userState 상태와 dispatch함수를 생성함.\n  const [userState, dispatch] = useReducer(loginReducer, {\n    user: null\n  }); // 아래의 fetchCurrentUser 함수가 실행된 다음에 컴포넌트가 구현되도록 함.\n  // 아래 코드를 보면 isFetchCompleted 가 true여야 컴포넌트가 구현됨.\n\n  const [isFetchCompleted, setIsFetchCompleted] = useState(false);\n\n  const fetchCurrentUser = async () => {\n    try {\n      // 이전에 발급받은 토큰이 있다면, 이를 가지고 유저 정보를 받아옴.\n      const res = await Api.get(\"user/current\");\n      const currentUser = res.data; // dispatch 함수를 통해 로그인 성공 상태로 만듦.\n\n      dispatch({\n        type: \"LOGIN_SUCCESS\",\n        payload: currentUser\n      });\n      console.log(\"%c sessionStorage에 토큰 있음.\", \"color: #d93d1a;\");\n    } catch {\n      console.log(\"%c SessionStorage에 토큰 없음.\", \"color: #d93d1a;\");\n    } // fetchCurrentUser 과정이 끝났으므로, isFetchCompleted 상태를 true로 바꿔줌\n\n\n    setIsFetchCompleted(true);\n  }; // useEffect함수를 통해 fetchCurrentUser 함수를 실행함.\n\n\n  useEffect(() => {\n    fetchCurrentUser();\n  }, []);\n\n  if (!isFetchCompleted) {\n    return \"loading...\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(DispatchContext.Provider, {\n    value: dispatch,\n    children: /*#__PURE__*/_jsxDEV(UserStateContext.Provider, {\n      value: userState,\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            element: /*#__PURE__*/_jsxDEV(Portfolio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            element: /*#__PURE__*/_jsxDEV(RegisterForm, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/users/:userId\",\n            element: /*#__PURE__*/_jsxDEV(Portfolio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/network\",\n            element: /*#__PURE__*/_jsxDEV(Network, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(Portfolio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9tW+rtyZuhwlYcU7PGwoQsbj2Gg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/luna/Documents/Elice_1st_Project/my_test/front/src/App.js"],"names":["React","useState","useEffect","useReducer","createContext","BrowserRouter","Router","Routes","Route","Api","loginReducer","Header","LoginForm","Network","RegisterForm","Portfolio","UserStateContext","DispatchContext","App","userState","dispatch","user","isFetchCompleted","setIsFetchCompleted","fetchCurrentUser","res","get","currentUser","data","type","payload","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer, createContext } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nimport * as Api from \"./api\";\nimport { loginReducer } from \"./reducer\";\n\nimport Header from \"./components/Header\";\nimport LoginForm from \"./components/user/LoginForm\";\nimport Network from \"./components/user/Network\";\nimport RegisterForm from \"./components/user/RegisterForm\";\nimport Portfolio from \"./components/Portfolio\";\n\nexport const UserStateContext = createContext(null);\nexport const DispatchContext = createContext(null);\n\nfunction App() {\n  // useReducer 훅을 통해 userState 상태와 dispatch함수를 생성함.\n  const [userState, dispatch] = useReducer(loginReducer, {\n    user: null,\n  });\n\n  // 아래의 fetchCurrentUser 함수가 실행된 다음에 컴포넌트가 구현되도록 함.\n  // 아래 코드를 보면 isFetchCompleted 가 true여야 컴포넌트가 구현됨.\n  const [isFetchCompleted, setIsFetchCompleted] = useState(false);\n\n  const fetchCurrentUser = async () => {\n    try {\n      // 이전에 발급받은 토큰이 있다면, 이를 가지고 유저 정보를 받아옴.\n      const res = await Api.get(\"user/current\");\n      const currentUser = res.data;\n\n      // dispatch 함수를 통해 로그인 성공 상태로 만듦.\n      dispatch({\n        type: \"LOGIN_SUCCESS\",\n        payload: currentUser,\n      });\n\n      console.log(\"%c sessionStorage에 토큰 있음.\", \"color: #d93d1a;\");\n    } catch {\n      console.log(\"%c SessionStorage에 토큰 없음.\", \"color: #d93d1a;\");\n    }\n    // fetchCurrentUser 과정이 끝났으므로, isFetchCompleted 상태를 true로 바꿔줌\n    setIsFetchCompleted(true);\n  };\n\n  // useEffect함수를 통해 fetchCurrentUser 함수를 실행함.\n  useEffect(() => {\n    fetchCurrentUser();\n  }, []);\n\n  if (!isFetchCompleted) {\n    return \"loading...\";\n  }\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      <UserStateContext.Provider value={userState}>\n        <Router>\n          <Header />\n          <Routes>\n            <Route path=\"/\" exact element={<Portfolio />} />\n            <Route path=\"/login\" element={<LoginForm />} />\n            <Route path=\"/register\" element={<RegisterForm />} />\n            <Route path=\"/users/:userId\" element={<Portfolio />} />\n            <Route path=\"/network\" element={<Network />} />\n            <Route path=\"*\" element={<Portfolio />} />\n          </Routes>\n        </Router>\n      </UserStateContext.Provider>\n    </DispatchContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}