{"ast":null,"code":"var _jsxFileName = \"/Users/luna/Documents/Elice_1st_Project/portfolio-share-service-racer/front/src/pages/register/RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FloatingLabel, Card, Container, Col, Row, Form, Button } from 'react-bootstrap';\nimport * as Api from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegisterForm() {\n  _s();\n\n  const navigate = useNavigate(); //useState로 email 상태를 생성함.\n\n  const [email, setEmail] = useState(''); //useState로 password 상태를 생성함.\n\n  const [password, setPassword] = useState(''); //useState로 confirmPassword 상태를 생성함.\n\n  const [confirmPassword, setConfirmPassword] = useState(''); //useState로 name 상태를 생성함.\n\n  const [name, setName] = useState(''); //이메일이 abc@example.com 형태인지 regex를 이용해 확인함.\n\n  const validateEmail = email => {\n    return email.toLowerCase().match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n  }; //위 validateEmail 함수를 통해 이메일 형태 적합 여부를 확인함.\n\n\n  const isEmailValid = validateEmail(email); // 비밀번호가 4글자 이상인지 여부를 확인함.\n\n  const isPasswordValid = password.length >= 4; // 비밀번호와 확인용 비밀번호가 일치하는지 여부를 확인함.\n\n  const isPasswordSame = password === confirmPassword; // 이름이 2글자 이상인지 여부를 확인함.\n\n  const isNameValid = name.length >= 2; // 위 4개 조건이 모두 동시에 만족되는지 여부를 확인함.\n\n  const isFormValid = isEmailValid && isPasswordValid && isPasswordSame && isNameValid;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      // \"register\" 엔드포인트로 post요청함.\n      await Api.post('user/register/', {\n        email,\n        password,\n        name\n      }); // 로그인 페이지로 이동함.\n\n      navigate('/login');\n    } catch (err) {\n      if (err.response.status === 400) {\n        alert(err.response.data.error);\n      }\n\n      console.log('회원가입에 실패하였습니다.', err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    style: {\n      height: '100%',\n      width: '70%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-md-center mt-5\",\n      children: \"Sign up for more!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      lg: 8,\n      className: \"justify-content-md-center mt-5\",\n      style: {\n        marginTop: '100px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: 12,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"registerEmail\",\n              style: {\n                height: '10px'\n              },\n              children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n                controlId: \"floatingInput\",\n                label: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\",\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"email\",\n                  autoComplete: \"off\",\n                  value: email,\n                  placeholder: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\",\n                  onChange: e => setEmail(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 37\n                }, this), !isEmailValid && /*#__PURE__*/_jsxDEV(Form.Text, {\n                  className: \"text-success\",\n                  children: \"\\uC774\\uBA54\\uC77C \\uD615\\uC2DD\\uC774 \\uC62C\\uBC14\\uB974\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"registerPassword\",\n              className: \"mt-3\",\n              children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n                controlId: \"floatingInput\",\n                label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  autoComplete: \"off\",\n                  value: password,\n                  placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n                  onChange: e => setPassword(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 37\n                }, this), !isPasswordValid && /*#__PURE__*/_jsxDEV(Form.Text, {\n                  className: \"text-success\",\n                  children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB294 4\\uAE00\\uC790 \\uC774\\uC0C1\\uC73C\\uB85C \\uC124\\uC815\\uD574 \\uC8FC\\uC138\\uC694.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"registerConfirmPassword\",\n              className: \"mt-3\",\n              children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n                controlId: \"floatingInput\",\n                label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC7AC\\uD655\\uC778\",\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  autoComplete: \"off\",\n                  value: confirmPassword,\n                  placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC7AC\\uD655\\uC778\",\n                  onChange: e => setConfirmPassword(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 37\n                }, this), !isPasswordSame && /*#__PURE__*/_jsxDEV(Form.Text, {\n                  className: \"text-success\",\n                  children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"registerName\",\n              className: \"mt-3\",\n              children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n                controlId: \"floatingInput\",\n                label: \"\\uC774\\uB984\",\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  autoComplete: \"off\",\n                  value: name,\n                  placeholder: \"\\uC774\\uB984\",\n                  onChange: e => setName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 37\n                }, this), !isNameValid && /*#__PURE__*/_jsxDEV(Form.Text, {\n                  className: \"text-success\",\n                  children: \"\\uC774\\uB984\\uC740 2\\uAE00\\uC790 \\uC774\\uC0C1\\uC73C\\uB85C \\uC124\\uC815\\uD574 \\uC8FC\\uC138\\uC694.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Row,\n              className: \"mt-3 text-center\",\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                sm: {\n                  span: 20\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  style: {\n                    backgroundColor: '#2a3741',\n                    border: 'none'\n                  },\n                  type: \"submit\",\n                  disabled: !isFormValid,\n                  onClick: handleSubmit,\n                  children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Row,\n              className: \"mt-3 text-center\",\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                sm: {\n                  span: 20\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"light\",\n                  onClick: () => navigate('/login'),\n                  children: \"\\uB85C\\uADF8\\uC778\\uD558\\uAE30\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RegisterForm, \"5GKD16MB7iO1apkBv4uH3zsODJM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/Users/luna/Documents/Elice_1st_Project/portfolio-share-service-racer/front/src/pages/register/RegisterForm.js"],"names":["React","useState","useNavigate","FloatingLabel","Card","Container","Col","Row","Form","Button","Api","RegisterForm","navigate","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","name","setName","validateEmail","toLowerCase","match","isEmailValid","isPasswordValid","length","isPasswordSame","isNameValid","isFormValid","handleSubmit","e","preventDefault","post","err","response","status","alert","data","error","console","log","height","width","marginTop","target","value","span","backgroundColor","border"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FloatingLabel, Card, Container, Col, Row, Form, Button } from 'react-bootstrap';\n\nimport * as Api from '../../api';\n\nfunction RegisterForm() {\n    const navigate = useNavigate();\n\n    //useState로 email 상태를 생성함.\n    const [email, setEmail] = useState('');\n    //useState로 password 상태를 생성함.\n    const [password, setPassword] = useState('');\n    //useState로 confirmPassword 상태를 생성함.\n    const [confirmPassword, setConfirmPassword] = useState('');\n    //useState로 name 상태를 생성함.\n    const [name, setName] = useState('');\n\n    //이메일이 abc@example.com 형태인지 regex를 이용해 확인함.\n    const validateEmail = (email) => {\n        return email\n            .toLowerCase()\n            .match(\n                /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n            );\n    };\n\n    //위 validateEmail 함수를 통해 이메일 형태 적합 여부를 확인함.\n    const isEmailValid = validateEmail(email);\n    // 비밀번호가 4글자 이상인지 여부를 확인함.\n    const isPasswordValid = password.length >= 4;\n    // 비밀번호와 확인용 비밀번호가 일치하는지 여부를 확인함.\n    const isPasswordSame = password === confirmPassword;\n    // 이름이 2글자 이상인지 여부를 확인함.\n    const isNameValid = name.length >= 2;\n\n    // 위 4개 조건이 모두 동시에 만족되는지 여부를 확인함.\n    const isFormValid = isEmailValid && isPasswordValid && isPasswordSame && isNameValid;\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        try {\n            // \"register\" 엔드포인트로 post요청함.\n            await Api.post('user/register/', {\n                email,\n                password,\n                name,\n            });\n\n            // 로그인 페이지로 이동함.\n            navigate('/login');\n        } catch (err) {\n            if (err.response.status === 400) {\n                alert(err.response.data.error);\n            }\n            console.log('회원가입에 실패하였습니다.', err);\n        }\n    };\n\n    return (\n        <Container fluid style={{ height: '100%', width: '70%' }}>\n            <Row className='justify-content-md-center mt-5'>Sign up for more!</Row>\n            <Row lg={8} className='justify-content-md-center mt-5' style={{ marginTop: '100px' }}>\n                <Card>\n                    <br />\n                    <Col lg={12}>\n                        <Form onSubmit={handleSubmit}>\n                            <Form.Group controlId='registerEmail' style={{ height: '10px' }}>\n                                <FloatingLabel controlId='floatingInput' label='이메일 주소' className='mb-3'>\n                                    <Form.Control\n                                        type='email'\n                                        autoComplete='off'\n                                        value={email}\n                                        placeholder='이메일 주소'\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    />\n                                    {!isEmailValid && (\n                                        <Form.Text className='text-success'>이메일 형식이 올바르지 않습니다.</Form.Text>\n                                    )}\n                                </FloatingLabel>\n                            </Form.Group>\n\n                            <Form.Group controlId='registerPassword' className='mt-3'>\n                                <FloatingLabel controlId='floatingInput' label='비밀번호' className='mb-3'>\n                                    <Form.Control\n                                        type='password'\n                                        autoComplete='off'\n                                        value={password}\n                                        placeholder='비밀번호'\n                                        onChange={(e) => setPassword(e.target.value)}\n                                    />\n                                    {!isPasswordValid && (\n                                        <Form.Text className='text-success'>비밀번호는 4글자 이상으로 설정해 주세요.</Form.Text>\n                                    )}\n                                </FloatingLabel>\n                            </Form.Group>\n\n                            <Form.Group controlId='registerConfirmPassword' className='mt-3'>\n                                <FloatingLabel controlId='floatingInput' label='비밀번호 재확인' className='mb-3'>\n                                    <Form.Control\n                                        type='password'\n                                        autoComplete='off'\n                                        value={confirmPassword}\n                                        placeholder='비밀번호 재확인'\n                                        onChange={(e) => setConfirmPassword(e.target.value)}\n                                    />\n                                    {!isPasswordSame && (\n                                        <Form.Text className='text-success'>비밀번호가 일치하지 않습니다.</Form.Text>\n                                    )}\n                                </FloatingLabel>\n                            </Form.Group>\n\n                            <Form.Group controlId='registerName' className='mt-3'>\n                                <FloatingLabel controlId='floatingInput' label='이름' className='mb-3'>\n                                    <Form.Control\n                                        type='text'\n                                        autoComplete='off'\n                                        value={name}\n                                        placeholder='이름'\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                    {!isNameValid && (\n                                        <Form.Text className='text-success'>이름은 2글자 이상으로 설정해 주세요.</Form.Text>\n                                    )}\n                                </FloatingLabel>\n                            </Form.Group>\n\n                            <Form.Group as={Row} className='mt-3 text-center'>\n                                <Col sm={{ span: 20 }}>\n                                    <Button\n                                        style={{ backgroundColor: '#2a3741', border: 'none' }}\n                                        type='submit'\n                                        disabled={!isFormValid}\n                                        onClick={handleSubmit}>\n                                        회원가입\n                                    </Button>\n                                </Col>\n                            </Form.Group>\n\n                            <Form.Group as={Row} className='mt-3 text-center'>\n                                <Col sm={{ span: 20 }}>\n                                    <Button variant='light' onClick={() => navigate('/login')}>\n                                        로그인하기\n                                    </Button>\n                                </Col>\n                            </Form.Group>\n                        </Form>\n                    </Col>\n                    <br />\n                </Card>\n            </Row>\n        </Container>\n    );\n}\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}