{"ast":null,"code":"var _jsxFileName = \"/Users/luna/Documents/Elice_1st_Project/my_test/front/src/pages/network/Network.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Row } from 'react-bootstrap';\nimport * as Api from '../../api';\nimport UserCard from '../../components/user/UserCard';\nimport { UserStateContext } from '../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Network() {\n  _s();\n\n  const navigate = useNavigate();\n  const userState = useContext(UserStateContext); // useState 훅을 통해 users 상태를 생성함.\n\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    // 만약 전역 상태의 user가 null이라면, 로그인 페이지로 이동함.\n    if (!userState.user) {\n      navigate('/login');\n      return;\n    } // \"userlist\" 엔드포인트로 GET 요청을 하고, users를 response의 data로 세팅함.\n\n\n    Api.get('userlist').then(res => setUsers(res.data));\n  }, [userState, navigate]);\n  console.log(users);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      xs: \"auto\",\n      className: \"jusify-content-center\",\n      children: users.map(user => /*#__PURE__*/_jsxDEV(UserCard, {\n        user: user,\n        isNetwork: true,\n        userImageUrl: userImageUrl\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Network, \"PlKx3ocMpq5Cb2OvL+cRycYiMco=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Network;\nexport default Network;\n\nvar _c;\n\n$RefreshReg$(_c, \"Network\");","map":{"version":3,"sources":["/Users/luna/Documents/Elice_1st_Project/my_test/front/src/pages/network/Network.js"],"names":["React","useEffect","useContext","useState","useNavigate","Container","Row","Api","UserCard","UserStateContext","Network","navigate","userState","users","setUsers","user","get","then","res","data","console","log","map","userImageUrl","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,EAAoBC,GAApB,QAA+B,iBAA/B;AAEA,OAAO,KAAKC,GAAZ,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAASC,gBAAT,QAAiC,WAAjC;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACf,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,SAAS,GAAGV,UAAU,CAACO,gBAAD,CAA5B,CAFe,CAGf;;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAI,CAACW,SAAS,CAACG,IAAf,EAAqB;AACjBJ,MAAAA,QAAQ,CAAC,QAAD,CAAR;AACA;AACH,KALW,CAMZ;;;AACAJ,IAAAA,GAAG,CAACS,GAAJ,CAAQ,UAAR,EAAoBC,IAApB,CAA0BC,GAAD,IAASJ,QAAQ,CAACI,GAAG,CAACC,IAAL,CAA1C;AACH,GARQ,EAQN,CAACP,SAAD,EAAYD,QAAZ,CARM,CAAT;AAUAS,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACA,sBACI,QAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAC,MAAR;AAAe,MAAA,SAAS,EAAC,uBAAzB;AAAA,gBACKA,KAAK,CAACS,GAAN,CAAWP,IAAD,iBACP,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAEA,IAA9B;AAAoC,QAAA,SAAS,MAA7C;AAA8C,QAAA,YAAY,EAAEQ;AAA5D,SAAeR,IAAI,CAACS,EAApB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GA1BQd,O;UACYN,W;;;KADZM,O;AA4BT,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Row } from 'react-bootstrap';\n\nimport * as Api from '../../api';\nimport UserCard from '../../components/user/UserCard';\nimport { UserStateContext } from '../../App';\n\nfunction Network() {\n    const navigate = useNavigate();\n    const userState = useContext(UserStateContext);\n    // useState 훅을 통해 users 상태를 생성함.\n    const [users, setUsers] = useState([]);\n\n    useEffect(() => {\n        // 만약 전역 상태의 user가 null이라면, 로그인 페이지로 이동함.\n        if (!userState.user) {\n            navigate('/login');\n            return;\n        }\n        // \"userlist\" 엔드포인트로 GET 요청을 하고, users를 response의 data로 세팅함.\n        Api.get('userlist').then((res) => setUsers(res.data));\n    }, [userState, navigate]);\n\n    console.log(users);\n    return (\n        <Container fluid>\n            <Row xs='auto' className='jusify-content-center'>\n                {users.map((user) => (\n                    <UserCard key={user.id} user={user} isNetwork userImageUrl={userImageUrl} />\n                ))}\n            </Row>\n        </Container>\n    );\n}\n\nexport default Network;\n"]},"metadata":{},"sourceType":"module"}