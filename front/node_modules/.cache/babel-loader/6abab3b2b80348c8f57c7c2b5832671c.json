{"ast":null,"code":"import axios from \"axios\";\nconst backendPortNumber = \"5001\";\nconst serverUrl = \"http://\" + window.location.hostname + \":\" + backendPortNumber + \"/\";\n\nasync function get(endpoint) {\n  let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  console.log(`%cGET 요청 ${serverUrl + endpoint + \"/\" + params}`, \"color: #a25cd1;\");\n  return axios.get(serverUrl + endpoint + \"/\" + params, {\n    // JWT 토큰을 헤더에 담아 백엔드 서버에 보냄.\n    headers: {\n      Authorization: `Bearer ${sessionStorage.getItem(\"userToken\")}`\n    }\n  });\n}\n\nasync function post(endpoint, data) {\n  // JSON.stringify 함수: Javascript 객체를 JSON 형태로 변환함.\n  // 예시: {name: \"Kim\"} => {\"name\": \"Kim\"}\n  const bodyData = JSON.stringify(data);\n  console.log(`%cPOST 요청: ${serverUrl + endpoint}`, \"color: #296aba;\");\n  console.log(`%cPOST 요청 데이터: ${bodyData}`, \"color: #296aba;\");\n  return axios.post(serverUrl + endpoint, bodyData, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${sessionStorage.getItem(\"userToken\")}`\n    }\n  });\n}\n\nasync function put(endpoint, data) {\n  // JSON.stringify 함수: Javascript 객체를 JSON 형태로 변환함.\n  // 예시: {name: \"Kim\"} => {\"name\": \"Kim\"}\n  const bodyData = JSON.stringify(data);\n  console.log(`%cPUT 요청: ${serverUrl + endpoint}`, \"color: #059c4b;\");\n  console.log(`%cPUT 요청 데이터: ${bodyData}`, \"color: #059c4b;\");\n  return axios.put(serverUrl + endpoint, bodyData, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${sessionStorage.getItem(\"userToken\")}`\n    }\n  });\n} // 아래 함수명에 관해, delete 단어는 자바스크립트의 reserved 단어이기에,\n// 여기서는 우선 delete 대신 del로 쓰고 아래 export 시에 delete로 alias 함.\n\n\nasync function del(endpoint) {\n  let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  console.log(`DELETE 요청 ${serverUrl + endpoint + \"/\" + params}`);\n  return axios.delete(serverUrl + endpoint + \"/\" + params, {\n    headers: {\n      Authorization: `Bearer ${sessionStorage.getItem(\"userToken\")}`\n    }\n  });\n} // 아래처럼 export한 후, import * as A 방식으로 가져오면,\n// A.get, A.post 로 쓸 수 있음.\n\n\nexport { get, post, put, del as delete };","map":{"version":3,"sources":["/Users/luna/Documents/Elice_1st_Project/portfolio-share-service-racer/front/src/api.js"],"names":["axios","backendPortNumber","serverUrl","window","location","hostname","get","endpoint","params","console","log","headers","Authorization","sessionStorage","getItem","post","data","bodyData","JSON","stringify","put","del","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,iBAAiB,GAAG,MAA1B;AACA,MAAMC,SAAS,GACb,YAAYC,MAAM,CAACC,QAAP,CAAgBC,QAA5B,GAAuC,GAAvC,GAA6CJ,iBAA7C,GAAiE,GADnE;;AAGA,eAAeK,GAAf,CAAmBC,QAAnB,EAA0C;AAAA,MAAbC,MAAa,uEAAJ,EAAI;AACxCC,EAAAA,OAAO,CAACC,GAAR,CACG,YAAWR,SAAS,GAAGK,QAAZ,GAAuB,GAAvB,GAA6BC,MAAO,EADlD,EAEE,iBAFF;AAKA,SAAOR,KAAK,CAACM,GAAN,CAAUJ,SAAS,GAAGK,QAAZ,GAAuB,GAAvB,GAA6BC,MAAvC,EAA+C;AACpD;AACAG,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASC,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAoC;AADtD;AAF2C,GAA/C,CAAP;AAMD;;AAED,eAAeC,IAAf,CAAoBR,QAApB,EAA8BS,IAA9B,EAAoC;AAClC;AACA;AACA,QAAMC,QAAQ,GAAGC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAjB;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAa,cAAaR,SAAS,GAAGK,QAAS,EAA/C,EAAkD,iBAAlD;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAa,kBAAiBO,QAAS,EAAvC,EAA0C,iBAA1C;AAEA,SAAOjB,KAAK,CAACe,IAAN,CAAWb,SAAS,GAAGK,QAAvB,EAAiCU,QAAjC,EAA2C;AAChDN,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAG,UAASC,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAoC;AAFtD;AADuC,GAA3C,CAAP;AAMD;;AAED,eAAeM,GAAf,CAAmBb,QAAnB,EAA6BS,IAA7B,EAAmC;AACjC;AACA;AACA,QAAMC,QAAQ,GAAGC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAjB;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAa,aAAYR,SAAS,GAAGK,QAAS,EAA9C,EAAiD,iBAAjD;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAa,iBAAgBO,QAAS,EAAtC,EAAyC,iBAAzC;AAEA,SAAOjB,KAAK,CAACoB,GAAN,CAAUlB,SAAS,GAAGK,QAAtB,EAAgCU,QAAhC,EAA0C;AAC/CN,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAG,UAASC,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAoC;AAFtD;AADsC,GAA1C,CAAP;AAMD,C,CAED;AACA;;;AACA,eAAeO,GAAf,CAAmBd,QAAnB,EAA0C;AAAA,MAAbC,MAAa,uEAAJ,EAAI;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAa,aAAYR,SAAS,GAAGK,QAAZ,GAAuB,GAAvB,GAA6BC,MAAO,EAA7D;AACA,SAAOR,KAAK,CAACsB,MAAN,CAAapB,SAAS,GAAGK,QAAZ,GAAuB,GAAvB,GAA6BC,MAA1C,EAAkD;AACvDG,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASC,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAoC;AADtD;AAD8C,GAAlD,CAAP;AAKD,C,CAED;AACA;;;AACA,SAASR,GAAT,EAAcS,IAAd,EAAoBK,GAApB,EAAyBC,GAAG,IAAIC,MAAhC","sourcesContent":["import axios from \"axios\";\n\nconst backendPortNumber = \"5001\";\nconst serverUrl =\n  \"http://\" + window.location.hostname + \":\" + backendPortNumber + \"/\";\n\nasync function get(endpoint, params = \"\") {\n  console.log(\n    `%cGET 요청 ${serverUrl + endpoint + \"/\" + params}`,\n    \"color: #a25cd1;\"\n  );\n\n  return axios.get(serverUrl + endpoint + \"/\" + params, {\n    // JWT 토큰을 헤더에 담아 백엔드 서버에 보냄.\n    headers: {\n      Authorization: `Bearer ${sessionStorage.getItem(\"userToken\")}`,\n    },\n  });\n}\n\nasync function post(endpoint, data) {\n  // JSON.stringify 함수: Javascript 객체를 JSON 형태로 변환함.\n  // 예시: {name: \"Kim\"} => {\"name\": \"Kim\"}\n  const bodyData = JSON.stringify(data);\n  console.log(`%cPOST 요청: ${serverUrl + endpoint}`, \"color: #296aba;\");\n  console.log(`%cPOST 요청 데이터: ${bodyData}`, \"color: #296aba;\");\n\n  return axios.post(serverUrl + endpoint, bodyData, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${sessionStorage.getItem(\"userToken\")}`,\n    },\n  });\n}\n\nasync function put(endpoint, data) {\n  // JSON.stringify 함수: Javascript 객체를 JSON 형태로 변환함.\n  // 예시: {name: \"Kim\"} => {\"name\": \"Kim\"}\n  const bodyData = JSON.stringify(data);\n  console.log(`%cPUT 요청: ${serverUrl + endpoint}`, \"color: #059c4b;\");\n  console.log(`%cPUT 요청 데이터: ${bodyData}`, \"color: #059c4b;\");\n\n  return axios.put(serverUrl + endpoint, bodyData, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${sessionStorage.getItem(\"userToken\")}`,\n    },\n  });\n}\n\n// 아래 함수명에 관해, delete 단어는 자바스크립트의 reserved 단어이기에,\n// 여기서는 우선 delete 대신 del로 쓰고 아래 export 시에 delete로 alias 함.\nasync function del(endpoint, params = \"\") {\n  console.log(`DELETE 요청 ${serverUrl + endpoint + \"/\" + params}`);\n  return axios.delete(serverUrl + endpoint + \"/\" + params, {\n    headers: {\n      Authorization: `Bearer ${sessionStorage.getItem(\"userToken\")}`,\n    },\n  });\n}\n\n// 아래처럼 export한 후, import * as A 방식으로 가져오면,\n// A.get, A.post 로 쓸 수 있음.\nexport { get, post, put, del as delete };\n"]},"metadata":{},"sourceType":"module"}