{"ast":null,"code":"var _jsxFileName = \"/Users/luna/Documents/Elice_1st_Project/portfolio-share-service-racer/front/src/components/user/UserEditForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Form, Card, Col, Row } from 'react-bootstrap';\nimport * as Api from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserEditForm(_ref) {\n  _s();\n\n  let {\n    user,\n    setIsEditing,\n    setUser\n  } = _ref;\n  //useState로 name 상태를 생성함.\n  const [name, setName] = useState(user.name); //useState로 email 상태를 생성함.\n\n  const [email, setEmail] = useState(user.email); //useState로 description 상태를 생성함.\n\n  const [description, setDescription] = useState(user.description); //useState로 gitLink 상태를 생성함.\n\n  const [gitLink, setGitLink] = useState(user.gitLink === 'undefined' ? '' : user.gitLink); //useState로 userImage 상태를 생성함.\n\n  const [userImage, setUserImage] = useState(user.userImage);\n\n  const onChangeImage = e => {\n    const selectedImage = e.target.files[0];\n\n    if (selectedImage && selectedImage.size > 1024 * 1024) {\n      // 1MB를 초과하는 경우, 이미지 선택을 제한\n      alert('이미지 크기는 1MB 이하이어야 합니다.');\n      return;\n    }\n\n    setUserImage(selectedImage);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const formData = new FormData();\n      formData.append('userImage', userImage);\n      formData.append('name', name);\n      formData.append('description', description);\n      formData.append('gitLink', gitLink); // \"user/유저id\" 엔드포인트로 PUT 요청함.\n\n      const res = await Api.putFile(`user/${user._id}`, formData); // 유저 정보는 response의 data임.\n\n      const updatedUser = res.data; // 해당 유저 정보로 user을 세팅함.\n\n      setUser(updatedUser); // isEditing을 false로 세팅함.\n\n      setIsEditing(false);\n    } catch (err) {\n      if (err.response.status === 400) {\n        alert(err.response.data.error);\n      }\n\n      console.log('유저 수정에 실패하였습니다.', err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-2 ms-3 mr-5\",\n    style: {\n      width: '18rem'\n    },\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"useEditName\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"\\uC774\\uB984\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"userEditEmail\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"\\uC774\\uBA54\\uC77C\",\n            value: email,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"userEditDescription\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"\\uC815\\uBCF4, \\uC778\\uC0AC\\uB9D0\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"userEditGitLink\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Git \\uC8FC\\uC18C\",\n            value: gitLink,\n            onChange: e => setGitLink(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"userEditGitLink\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"file\",\n            onChange: e => setUserImage(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Row,\n          className: \"mt-3 text-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            sm: {\n              span: 20\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              className: \"me-3\",\n              children: \"\\uD655\\uC778\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: () => setIsEditing(false),\n              children: \"\\uCDE8\\uC18C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserEditForm, \"YioOdT3ihjBRuNtAT5khT5Gjxeg=\");\n\n_c = UserEditForm;\nexport default UserEditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditForm\");","map":{"version":3,"sources":["/Users/luna/Documents/Elice_1st_Project/portfolio-share-service-racer/front/src/components/user/UserEditForm.js"],"names":["React","useState","Button","Form","Card","Col","Row","Api","UserEditForm","user","setIsEditing","setUser","name","setName","email","setEmail","description","setDescription","gitLink","setGitLink","userImage","setUserImage","onChangeImage","e","selectedImage","target","files","size","alert","handleSubmit","preventDefault","formData","FormData","append","res","putFile","_id","updatedUser","data","err","response","status","error","console","log","width","value","span"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Form, Card, Col, Row } from 'react-bootstrap';\nimport * as Api from '../../api';\n\nfunction UserEditForm({ user, setIsEditing, setUser }) {\n    //useState로 name 상태를 생성함.\n    const [name, setName] = useState(user.name);\n    //useState로 email 상태를 생성함.\n    const [email, setEmail] = useState(user.email);\n    //useState로 description 상태를 생성함.\n    const [description, setDescription] = useState(user.description);\n    //useState로 gitLink 상태를 생성함.\n    const [gitLink, setGitLink] = useState(user.gitLink === 'undefined' ? '' : user.gitLink);\n    //useState로 userImage 상태를 생성함.\n    const [userImage, setUserImage] = useState(user.userImage);\n\n    const onChangeImage = (e) => {\n        const selectedImage = e.target.files[0];\n\n        if (selectedImage && selectedImage.size > 1024 * 1024) {\n            // 1MB를 초과하는 경우, 이미지 선택을 제한\n            alert('이미지 크기는 1MB 이하이어야 합니다.');\n            return;\n        }\n\n        setUserImage(selectedImage);\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const formData = new FormData();\n            formData.append('userImage', userImage);\n            formData.append('name', name);\n            formData.append('description', description);\n            formData.append('gitLink', gitLink);\n\n            // \"user/유저id\" 엔드포인트로 PUT 요청함.\n            const res = await Api.putFile(`user/${user._id}`, formData);\n            // 유저 정보는 response의 data임.\n            const updatedUser = res.data;\n            // 해당 유저 정보로 user을 세팅함.\n            setUser(updatedUser);\n\n            // isEditing을 false로 세팅함.\n            setIsEditing(false);\n        } catch (err) {\n            if (err.response.status === 400) {\n                alert(err.response.data.error);\n            }\n            console.log('유저 수정에 실패하였습니다.', err);\n        }\n    };\n\n    return (\n        <Card className='mb-2 ms-3 mr-5' style={{ width: '18rem' }}>\n            <Card.Body>\n                <Form onSubmit={handleSubmit}>\n                    <Form.Group controlId='useEditName' className='mb-3'>\n                        <Form.Control type='text' placeholder='이름' value={name} onChange={(e) => setName(e.target.value)} />\n                    </Form.Group>\n\n                    <Form.Group controlId='userEditEmail' className='mb-3'>\n                        <Form.Control type='email' placeholder='이메일' value={email} disabled />\n                    </Form.Group>\n\n                    <Form.Group controlId='userEditDescription' className='mb-3'>\n                        <Form.Control\n                            type='text'\n                            placeholder='정보, 인사말'\n                            value={description}\n                            onChange={(e) => setDescription(e.target.value)}\n                        />\n                    </Form.Group>\n\n                    <Form.Group controlId='userEditGitLink' className='mb-3'>\n                        <Form.Control\n                            type='text'\n                            placeholder='Git 주소'\n                            value={gitLink}\n                            onChange={(e) => setGitLink(e.target.value)}\n                        />\n                    </Form.Group>\n\n                    <Form.Group controlId='userEditGitLink'>\n                        <Form.Control type='file' onChange={(e) => setUserImage(e.target.files[0])} />\n                    </Form.Group>\n\n                    <Form.Group as={Row} className='mt-3 text-center'>\n                        <Col sm={{ span: 20 }}>\n                            <Button variant='primary' type='submit' className='me-3'>\n                                확인\n                            </Button>\n                            <Button variant='secondary' onClick={() => setIsEditing(false)}>\n                                취소\n                            </Button>\n                        </Col>\n                    </Form.Group>\n                </Form>\n            </Card.Body>\n        </Card>\n    );\n}\n\nexport default UserEditForm;\n"]},"metadata":{},"sourceType":"module"}