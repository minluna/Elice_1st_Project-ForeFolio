{"ast":null,"code":"var _jsxFileName = \"/Users/luna/Documents/Elice_1st_Project/portfolio-share-service-racer/front/src/components/project/ProjectDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Form, FloatingLabel } from \"react-bootstrap\";\nimport * as Api from \"../../api\";\nimport ProjectForm from \"./ProjectForm\";\nimport ProjectP from \"./ProjectP\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProjectDetail(_ref) {\n  _s();\n\n  let {\n    portfolioOwnerId,\n    isEditable\n  } = _ref;\n  const [dbItem, setDbItem] = useState([]);\n  const [isToggle, setIsToggle] = useState(false); // 추가 버튼 클릭 유무\n\n  const [isEdit, setIsEdit] = useState(false); // 편집 버튼 클릭 유무\n\n  const [currentEditId, setcurrentEditId] = useState(\"\"); // Edit 버튼을 클릭 시 버튼 표시를 구분하기 위한 값\n\n  const [projectName, setProjectName] = useState(\"\"); // 프로젝트 이름\n\n  const [projectStartDate, setProjectStartDate] = useState(\"\"); // 프로젝트 시작일자\n\n  const [projectEndDate, setProjectEndDate] = useState(\"\"); // 프로젝트 종료일자\n\n  const [projectDescription, setProjectDescription] = useState(\"\"); // 프로젝트 설명\n\n  const [projectGitLink, setProjectGitLink] = useState(\"\"); // 프로젝트 GitLink 주소\n\n  const isDateValid = projectStartDate < projectEndDate;\n\n  const onChangeName = e => {\n    setProjectName(e.target.value);\n  };\n\n  const onChangeStartDate = e => {\n    setProjectStartDate(e.target.value);\n  };\n\n  const onChangeEndDate = e => {\n    setProjectEndDate(e.target.value);\n  };\n\n  const onChangeDescription = e => {\n    setProjectDescription(e.target.value);\n  };\n\n  const onChangeGitLink = e => {\n    setProjectGitLink(e.target.value);\n  };\n\n  const AddInput = () => {\n    setIsToggle(true);\n    setProjectName(\"\");\n    setProjectStartDate(\"\");\n    setProjectEndDate(\"\");\n    setProjectDescription(\"\");\n    setProjectGitLink(\"\");\n  };\n\n  const fetchProject = async ownerId => {\n    try {\n      // \"/project\" 엔드포인트로 요청해 사용자 정보를 불러옴.(userId는 req.currentUserId 사용)\n      const res = await Api.get(`project/${ownerId.userId}`); // 사용자 정보는 response의 data임.\n\n      const ownerData = res.data; // portfolioOwner을 해당 사용자 정보로 세팅함.\n\n      setDbItem(ownerData);\n    } catch (err) {\n      if (err.response.status === 400) {\n        alert(err.response.data.error);\n      }\n\n      console.log(\"사용자 데이터 불러오기에 실패하였습니다.\", err);\n    }\n  };\n\n  const userId = portfolioOwnerId;\n\n  const handleSubmit = async id => {\n    const item = dbItem.filter(item => item._id === id)[0];\n\n    if (item === undefined || item.isSave === false) {\n      try {\n        // \"/project\" 엔드포인트로 post요청함.(userId는 req.currentUserId 사용)\n        await Api.post(`project/`, {\n          projectName,\n          projectStartDate,\n          projectEndDate,\n          projectDescription,\n          projectGitLink\n        });\n        setIsToggle(false);\n        setIsEdit(false);\n        fetchProject({\n          userId\n        });\n        setProjectName(\"\");\n        setProjectStartDate(\"\");\n        setProjectEndDate(\"\");\n        setProjectDescription(\"\");\n        setProjectGitLink(\"\");\n      } catch (err) {\n        if (err.response.status === 400) {\n          alert(err.response.data.error);\n        }\n\n        console.log(\"프로젝트 추가에 실패하였습니다.\", err);\n      }\n    } else {\n      try {\n        // \"project/projectId\" 엔드포인트로 put요청함.\n        await Api.put(`project/${item._id}`, {\n          projectName,\n          projectStartDate,\n          projectEndDate,\n          projectDescription,\n          projectGitLink\n        });\n        setIsToggle(false);\n        setIsEdit(false);\n        fetchProject({\n          userId\n        });\n      } catch (err) {\n        if (err.response.status === 400) {\n          alert(err.response.data.error);\n        }\n\n        console.log(\"프로젝트 수정에 실패하였습니다.\", err);\n      }\n    }\n  };\n\n  const handleEdit = id => {\n    setDbItem(prevItems => {\n      return prevItems.map(item => {\n        if (item._id === id) {\n          return { ...item,\n            isEdit: true\n          };\n        } else {\n          return item;\n        }\n      });\n    });\n    const item = dbItem.filter(item => item._id === id)[0];\n    setProjectName(item.projectName);\n    setProjectStartDate(item.projectStartDate);\n    setProjectEndDate(item.projectEndDate);\n    setProjectDescription(item.projectDescription);\n    setProjectGitLink(item.projectGitLink);\n    setcurrentEditId(item._id);\n    setIsEdit(true);\n  };\n\n  const handleCancel = () => {\n    fetchProject({\n      userId\n    });\n    setIsToggle(false);\n    setIsEdit(false);\n  };\n\n  const handleDelete = async id => {\n    try {\n      // \"project/projectId\" 엔드포인트로 delete 요청함.\n      await Api.delete(`project/${id}`);\n      fetchProject({\n        userId\n      });\n      setIsToggle(false);\n      setIsEdit(false);\n    } catch (err) {\n      if (err.response.status === 400) {\n        alert(err.response.data.error);\n      }\n\n      console.log(\"프로젝트 삭제에 실패하였습니다.\", err);\n    }\n  };\n\n  useEffect(() => {\n    fetchProject({\n      userId\n    });\n  }, [userId]);\n  const formSendFunction = {\n    handleSubmit,\n    handleCancel,\n    handleDelete,\n    onChangeName,\n    onChangeStartDate,\n    onChangeEndDate,\n    onChangeDescription,\n    onChangeGitLink\n  };\n  const formSendcurrentData = {\n    projectName,\n    projectStartDate,\n    projectEndDate,\n    projectDescription,\n    projectGitLink,\n    currentEditId\n  };\n  const formSendisFlag = {\n    isDateValid\n  };\n  const pSendFunction = {\n    handleEdit\n  };\n  const pSendisFlag = {\n    isEditable,\n    isToggle,\n    isEdit\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [dbItem.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: item.isSave === true && item.isEdit === false ? /*#__PURE__*/_jsxDEV(ProjectP, {\n        pSendFunction: pSendFunction,\n        isFlag: pSendisFlag,\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(ProjectForm, {\n        formSendFunction: formSendFunction,\n        currentData: formSendcurrentData,\n        isFlag: formSendisFlag,\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }, this)\n    }, item._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this)), isToggle === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n          controlId: \"floatingInput\",\n          label: \"\\uD504\\uB85C\\uC81D\\uD2B8 \\uBA85\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            style: {\n              width: \"100%\"\n            },\n            type: \"text\",\n            placeholder: \"\\uD504\\uB85C\\uC81D\\uD2B8 \\uBA85\",\n            value: projectName,\n            onChange: onChangeName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n          controlId: \"floatingInput\",\n          label: \"\\uD504\\uB85C\\uC81D\\uD2B8 \\uC2DC\\uC791\\uC77C\\uC790\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            style: {\n              width: \"100%\"\n            },\n            type: \"date\",\n            placeholder: \"\\uD504\\uB85C\\uC81D\\uD2B8 \\uC2DC\\uC791\\uC77C\\uC790\",\n            value: projectStartDate,\n            onChange: onChangeStartDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(FloatingLabel, {\n          controlId: \"floatingInput\",\n          label: \"\\uD504\\uB85C\\uC81D\\uD2B8 \\uC885\\uB8CC\\uC77C\\uC790\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            style: {\n              width: \"100%\"\n            },\n            type: \"date\",\n            placeholder: \"\\uD504\\uB85C\\uC81D\\uD2B8 \\uC885\\uB8CC\\uC77C\\uC790\",\n            value: projectEndDate,\n            onChange: onChangeEndDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this), projectStartDate && projectEndDate && !isDateValid && /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"date-success\",\n          children: \"\\uD504\\uB85C\\uC81D\\uD2B8 \\uC2DC\\uC791\\uC77C\\uC790\\uBCF4\\uB2E4 \\uD504\\uB85C\\uC81D\\uD2B8 \\uC885\\uB8CC\\uC77C\\uC790\\uAC00 \\uC774\\uC804\\uC785\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n          controlId: \"floatingInput\",\n          label: \"\\uD504\\uB85C\\uC81D\\uD2B8 \\uC124\\uBA85\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            style: {\n              width: \"100%\"\n            },\n            type: \"text\",\n            placeholder: \"\\uD504\\uB85C\\uC81D\\uD2B8 \\uC124\\uBA85\",\n            value: projectDescription,\n            onChange: onChangeDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n          controlId: \"floatingInput\",\n          label: \"\\uD504\\uB85C\\uC81D\\uD2B8 GitLink\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            style: {\n              width: \"100%\"\n            },\n            type: \"text\",\n            placeholder: \"\\uD504\\uB85C\\uC81D\\uD2B8 GitLink\",\n            value: projectGitLink,\n            onChange: onChangeGitLink\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 text-center\",\n        children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              backgroundColor: \"#3077e1\",\n              border: \"none\"\n            },\n            className: \"me-2\",\n            onClick: () => handleSubmit(),\n            children: \"\\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => handleCancel(),\n            children: \"\\uCDE8\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }, this) : \"\", isEditable && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 text-center\",\n      children: dbItem.length < 10 && /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          backgroundColor: \"#2a3741\",\n          border: \"none\"\n        },\n        onClick: AddInput,\n        disabled: isToggle || isEdit ? true : false,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProjectDetail, \"Sc3CKpTlsmUVtaGMuN9UvT1tkLo=\");\n\n_c = ProjectDetail;\nexport default ProjectDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectDetail\");","map":{"version":3,"sources":["/Users/luna/Documents/Elice_1st_Project/portfolio-share-service-racer/front/src/components/project/ProjectDetail.js"],"names":["React","useState","useEffect","Button","Form","FloatingLabel","Api","ProjectForm","ProjectP","ProjectDetail","portfolioOwnerId","isEditable","dbItem","setDbItem","isToggle","setIsToggle","isEdit","setIsEdit","currentEditId","setcurrentEditId","projectName","setProjectName","projectStartDate","setProjectStartDate","projectEndDate","setProjectEndDate","projectDescription","setProjectDescription","projectGitLink","setProjectGitLink","isDateValid","onChangeName","e","target","value","onChangeStartDate","onChangeEndDate","onChangeDescription","onChangeGitLink","AddInput","fetchProject","ownerId","res","get","userId","ownerData","data","err","response","status","alert","error","console","log","handleSubmit","id","item","filter","_id","undefined","isSave","post","put","handleEdit","prevItems","map","handleCancel","handleDelete","delete","formSendFunction","formSendcurrentData","formSendisFlag","pSendFunction","pSendisFlag","width","backgroundColor","border","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Form, FloatingLabel } from \"react-bootstrap\";\n\nimport * as Api from \"../../api\";\n\nimport ProjectForm from \"./ProjectForm\";\nimport ProjectP from \"./ProjectP\";\n\nfunction ProjectDetail({ portfolioOwnerId, isEditable }) {\n  const [dbItem, setDbItem] = useState([]);\n  const [isToggle, setIsToggle] = useState(false); // 추가 버튼 클릭 유무\n  const [isEdit, setIsEdit] = useState(false); // 편집 버튼 클릭 유무\n  const [currentEditId, setcurrentEditId] = useState(\"\"); // Edit 버튼을 클릭 시 버튼 표시를 구분하기 위한 값\n\n  const [projectName, setProjectName] = useState(\"\"); // 프로젝트 이름\n  const [projectStartDate, setProjectStartDate] = useState(\"\"); // 프로젝트 시작일자\n  const [projectEndDate, setProjectEndDate] = useState(\"\"); // 프로젝트 종료일자\n  const [projectDescription, setProjectDescription] = useState(\"\"); // 프로젝트 설명\n  const [projectGitLink, setProjectGitLink] = useState(\"\"); // 프로젝트 GitLink 주소\n\n  const isDateValid = projectStartDate < projectEndDate;\n\n  const onChangeName = (e) => {\n    setProjectName(e.target.value);\n  };\n\n  const onChangeStartDate = (e) => {\n    setProjectStartDate(e.target.value);\n  };\n\n  const onChangeEndDate = (e) => {\n    setProjectEndDate(e.target.value);\n  };\n\n  const onChangeDescription = (e) => {\n    setProjectDescription(e.target.value);\n  };\n\n  const onChangeGitLink = (e) => {\n    setProjectGitLink(e.target.value);\n  };\n\n  const AddInput = () => {\n    setIsToggle(true);\n\n    setProjectName(\"\");\n    setProjectStartDate(\"\");\n    setProjectEndDate(\"\");\n    setProjectDescription(\"\");\n    setProjectGitLink(\"\");\n  };\n\n  const fetchProject = async (ownerId) => {\n    try {\n      // \"/project\" 엔드포인트로 요청해 사용자 정보를 불러옴.(userId는 req.currentUserId 사용)\n      const res = await Api.get(`project/${ownerId.userId}`);\n      // 사용자 정보는 response의 data임.\n      const ownerData = res.data;\n      // portfolioOwner을 해당 사용자 정보로 세팅함.\n      setDbItem(ownerData);\n    } catch (err) {\n      if (err.response.status === 400) {\n        alert(err.response.data.error);\n      }\n      console.log(\"사용자 데이터 불러오기에 실패하였습니다.\", err);\n    }\n  };\n\n  const userId = portfolioOwnerId;\n\n  const handleSubmit = async (id) => {\n    const item = dbItem.filter((item) => item._id === id)[0];\n\n    if (item === undefined || item.isSave === false) {\n      try {\n        // \"/project\" 엔드포인트로 post요청함.(userId는 req.currentUserId 사용)\n        await Api.post(`project/`, {\n          projectName,\n          projectStartDate,\n          projectEndDate,\n          projectDescription,\n          projectGitLink,\n        });\n\n        setIsToggle(false);\n        setIsEdit(false);\n\n        fetchProject({ userId });\n\n        setProjectName(\"\");\n        setProjectStartDate(\"\");\n        setProjectEndDate(\"\");\n        setProjectDescription(\"\");\n        setProjectGitLink(\"\");\n      } catch (err) {\n        if (err.response.status === 400) {\n          alert(err.response.data.error);\n        }\n        console.log(\"프로젝트 추가에 실패하였습니다.\", err);\n      }\n    } else {\n      try {\n        // \"project/projectId\" 엔드포인트로 put요청함.\n        await Api.put(`project/${item._id}`, {\n          projectName,\n          projectStartDate,\n          projectEndDate,\n          projectDescription,\n          projectGitLink,\n        });\n\n        setIsToggle(false);\n        setIsEdit(false);\n\n        fetchProject({ userId });\n      } catch (err) {\n        if (err.response.status === 400) {\n          alert(err.response.data.error);\n        }\n        console.log(\"프로젝트 수정에 실패하였습니다.\", err);\n      }\n    }\n  };\n\n  const handleEdit = (id) => {\n    setDbItem((prevItems) => {\n      return prevItems.map((item) => {\n        if (item._id === id) {\n          return {\n            ...item,\n            isEdit: true,\n          };\n        } else {\n          return item;\n        }\n      });\n    });\n\n    const item = dbItem.filter((item) => item._id === id)[0];\n    setProjectName(item.projectName);\n    setProjectStartDate(item.projectStartDate);\n    setProjectEndDate(item.projectEndDate);\n    setProjectDescription(item.projectDescription);\n    setProjectGitLink(item.projectGitLink);\n\n    setcurrentEditId(item._id);\n    setIsEdit(true);\n  };\n\n  const handleCancel = () => {\n    fetchProject({ userId });\n\n    setIsToggle(false);\n    setIsEdit(false);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      // \"project/projectId\" 엔드포인트로 delete 요청함.\n      await Api.delete(`project/${id}`);\n\n      fetchProject({ userId });\n\n      setIsToggle(false);\n      setIsEdit(false);\n    } catch (err) {\n      if (err.response.status === 400) {\n        alert(err.response.data.error);\n      }\n      console.log(\"프로젝트 삭제에 실패하였습니다.\", err);\n    }\n  };\n\n  useEffect(() => {\n    fetchProject({ userId });\n  }, [userId]);\n\n  const formSendFunction = {\n    handleSubmit,\n    handleCancel,\n    handleDelete,\n    onChangeName,\n    onChangeStartDate,\n    onChangeEndDate,\n    onChangeDescription,\n    onChangeGitLink,\n  };\n  const formSendcurrentData = {\n    projectName,\n    projectStartDate,\n    projectEndDate,\n    projectDescription,\n    projectGitLink,\n    currentEditId,\n  };\n  const formSendisFlag = { isDateValid };\n  const pSendFunction = { handleEdit };\n  const pSendisFlag = { isEditable, isToggle, isEdit };\n\n  return (\n    <div>\n      {dbItem.map((item) => (\n        <div key={item._id}>\n          {item.isSave === true && item.isEdit === false ? (\n            <ProjectP pSendFunction={pSendFunction} isFlag={pSendisFlag} item={item} />\n          ) : (\n            <ProjectForm\n              formSendFunction={formSendFunction}\n              currentData={formSendcurrentData}\n              isFlag={formSendisFlag}\n              item={item}\n            />\n          )}\n        </div>\n      ))}\n      {isToggle === true ? (\n        <div>\n          <div className=\"mb-2\">\n            <FloatingLabel controlId=\"floatingInput\" label=\"프로젝트 명\" className=\"mb-3\">\n              <Form.Control\n                style={{ width: \"100%\" }}\n                type=\"text\"\n                placeholder=\"프로젝트 명\"\n                value={projectName}\n                onChange={onChangeName}\n              />\n            </FloatingLabel>\n          </div>\n          <div className=\"mb-2\">\n            <FloatingLabel controlId=\"floatingInput\" label=\"프로젝트 시작일자\" className=\"mb-3\">\n              <Form.Control\n                style={{ width: \"100%\" }}\n                type=\"date\"\n                placeholder=\"프로젝트 시작일자\"\n                value={projectStartDate}\n                onChange={onChangeStartDate}\n              />\n            </FloatingLabel>\n          </div>\n          <div className=\"mb-2\">\n            <FloatingLabel controlId=\"floatingInput\" label=\"프로젝트 종료일자\" className=\"mb-3\">\n              <Form.Control\n                style={{ width: \"100%\" }}\n                type=\"date\"\n                placeholder=\"프로젝트 종료일자\"\n                value={projectEndDate}\n                onChange={onChangeEndDate}\n              />\n            </FloatingLabel>\n            {projectStartDate && projectEndDate && !isDateValid && (\n              <Form.Text className=\"date-success\">프로젝트 시작일자보다 프로젝트 종료일자가 이전입니다.</Form.Text>\n            )}\n          </div>\n          <div className=\"mb-2\">\n            <FloatingLabel controlId=\"floatingInput\" label=\"프로젝트 설명\" className=\"mb-3\">\n              <Form.Control\n                style={{ width: \"100%\" }}\n                type=\"text\"\n                placeholder=\"프로젝트 설명\"\n                value={projectDescription}\n                onChange={onChangeDescription}\n              />\n            </FloatingLabel>\n          </div>\n          <div className=\"mb-2\">\n            <FloatingLabel controlId=\"floatingInput\" label=\"프로젝트 GitLink\" className=\"mb-3\">\n              <Form.Control\n                style={{ width: \"100%\" }}\n                type=\"text\"\n                placeholder=\"프로젝트 GitLink\"\n                value={projectGitLink}\n                onChange={onChangeGitLink}\n              />\n            </FloatingLabel>\n          </div>\n          <div className=\"mb-3 text-center\">\n            <React.Fragment>\n              <Button\n                style={{ backgroundColor: \"#3077e1\", border: \"none\" }}\n                className=\"me-2\"\n                onClick={() => handleSubmit()}\n              >\n                확인\n              </Button>\n              <Button variant=\"secondary\" onClick={() => handleCancel()}>\n                취소\n              </Button>\n            </React.Fragment>\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n      {isEditable && (\n        <div className=\"mb-3 text-center\">\n          {dbItem.length < 10 && (\n            <Button\n              style={{ backgroundColor: \"#2a3741\", border: \"none\" }}\n              onClick={AddInput}\n              disabled={isToggle || isEdit ? true : false}\n            >\n              +\n            </Button>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ProjectDetail;\n"]},"metadata":{},"sourceType":"module"}