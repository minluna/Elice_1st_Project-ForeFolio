{"ast":null,"code":"var _jsxFileName = \"/Users/luna/Documents/Elice_1st_Project/portfolio-share-service-racer/front/src/components/certificate/CertificateDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Form, FloatingLabel } from 'react-bootstrap';\nimport * as Api from '../../api';\nimport CertificateForm from './CertificateForm';\nimport CertificateP from './CertificateP';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CertificateDetail(_ref) {\n  _s();\n\n  let {\n    portfolioOwnerId,\n    isEditable\n  } = _ref;\n  const [dbItem, setDbItem] = useState([]);\n  const [isToggle, setIsToggle] = useState(false); // 추가 버튼 클릭 유무\n\n  const [isEdit, setIsEdit] = useState(false); // 편집 버튼 클릭 유무\n\n  const [currentEditId, setcurrentEditId] = useState(''); // Edit 버튼을 클릭 시 버튼 표시를 구분하기 위한 값\n\n  const [certName, setCertName] = useState(''); // 자격증 명\n\n  const [certAcDate, setCertAcDate] = useState(''); // 취득일자\n\n  const onChangeName = e => {\n    setCertName(e.target.value);\n  };\n\n  const onChangeDate = e => {\n    setCertAcDate(e.target.value);\n  };\n\n  const AddInput = () => {\n    setIsToggle(true);\n    setCertName('');\n    setCertAcDate('');\n  };\n\n  const fetchCert = async ownerId => {\n    try {\n      // \"/cert\" 엔드포인트로 요청해 사용자 정보를 불러옴.\n      const res = await Api.get(`cert/${ownerId.userId}`); // 사용자 정보는 response의 data임.\n\n      const ownerData = res.data; // portfolioOwner을 해당 사용자 정보로 세팅함.\n\n      setDbItem(ownerData);\n    } catch (err) {\n      if (err.response.status === 400) {\n        alert(err.response.data.error);\n      }\n\n      console.log('사용자 데이터 불러오기에 실패하였습니다.', err);\n    }\n  };\n\n  const userId = portfolioOwnerId;\n\n  const handleSubmit = async id => {\n    const item = dbItem.filter(item => item._id === id)[0];\n\n    if (item === undefined || item.isSave === false) {\n      try {\n        // \"/cert\" 엔드포인트로 post요청함.(userId는 req.currentUserId 사용)\n        await Api.post(`cert/`, {\n          certName,\n          certAcDate\n        });\n        setIsToggle(false);\n        setIsEdit(false);\n        fetchCert({\n          userId\n        });\n        setCertName('');\n        setCertAcDate('');\n      } catch (err) {\n        if (err.response.status === 400) {\n          alert(err.response.data.error);\n        }\n\n        console.log('자격증 추가에 실패하였습니다.', err);\n      }\n    } else {\n      try {\n        // \"cert/certId\" 엔드포인트로 put요청함.\n        await Api.put(`cert/${item._id}`, {\n          certName,\n          certAcDate\n        });\n        setIsToggle(false);\n        setIsEdit(false);\n        fetchCert({\n          userId\n        });\n      } catch (err) {\n        if (err.response.status === 400) {\n          alert(err.response.data.error);\n        }\n\n        console.log('자격증 수정에 실패하였습니다.', err);\n      }\n    }\n  };\n\n  const handleEdit = id => {\n    setDbItem(prevItems => {\n      return prevItems.map(item => {\n        if (item._id === id) {\n          return { ...item,\n            isEdit: true\n          };\n        } else {\n          return item;\n        }\n      });\n    });\n    const item = dbItem.filter(item => item._id === id)[0];\n    setCertName(item.certName);\n    setCertAcDate(item.certAcDate);\n    setcurrentEditId(item._id);\n    setIsEdit(true);\n  };\n\n  const handleCancel = () => {\n    fetchCert({\n      userId\n    });\n    setIsToggle(false);\n    setIsEdit(false);\n  };\n\n  const handleDelete = async id => {\n    try {\n      // \"cert/certId\" 엔드포인트로 delete 요청함.\n      await Api.delete(`cert/${id}`);\n      fetchCert({\n        userId\n      });\n      setIsToggle(false);\n      setIsEdit(false);\n    } catch (err) {\n      if (err.response.status === 400) {\n        alert(err.response.data.error);\n      }\n\n      console.log('자격증 삭제에 실패하였습니다.', err);\n    }\n  };\n\n  useEffect(() => {\n    fetchCert({\n      userId\n    });\n  }, [userId]);\n  const formSendFunction = {\n    handleSubmit,\n    handleCancel,\n    handleDelete,\n    onChangeName,\n    onChangeDate\n  };\n  const formSendcurrentData = {\n    certName,\n    certAcDate,\n    currentEditId\n  };\n  const pSendFunction = {\n    handleEdit\n  };\n  const pSendisFlag = {\n    isEditable,\n    isToggle,\n    isEdit\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [dbItem.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: item.isSave === true && item.isEdit === false ? /*#__PURE__*/_jsxDEV(CertificateP, {\n        pSendFunction: pSendFunction,\n        isFlag: pSendisFlag,\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(CertificateForm, {\n        formSendFunction: formSendFunction,\n        currentData: formSendcurrentData,\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }, this)\n    }, item._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }, this)), isToggle === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n          controlId: \"floatingInput\",\n          label: \"\\uC790\\uACA9\\uC99D \\uBA85*\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            style: {\n              width: '100%'\n            },\n            type: \"text\",\n            placeholder: \"\\uC790\\uACA9\\uC99D \\uBA85\",\n            value: certName,\n            onChange: onChangeName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n          controlId: \"floatingInput\",\n          label: \"\\uCDE8\\uB4DD\\uC77C\\uC790*\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            style: {\n              width: '100%'\n            },\n            type: \"date\",\n            placeholder: \"\\uCDE8\\uB4DD\\uC77C\\uC790\",\n            value: certAcDate,\n            onChange: onChangeDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 text-center\",\n        children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              backgroundColor: '#3077e1',\n              border: 'none'\n            },\n            className: \"me-2\",\n            onClick: () => handleSubmit(),\n            children: \"\\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              backgroundColor: '#7469bc',\n              border: 'none'\n            },\n            variant: \"secondary\",\n            onClick: () => handleCancel(),\n            children: \"\\uCDE8\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }, this) : '', isEditable && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 text-center\",\n      children: dbItem.length < 10 && /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          backgroundColor: '#2a3741',\n          border: 'none'\n        },\n        onClick: AddInput,\n        disabled: isToggle || isEdit ? true : false,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CertificateDetail, \"hU9xQ7KqRG8h/A3dF0L86Jfiqmk=\");\n\n_c = CertificateDetail;\nexport default CertificateDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"CertificateDetail\");","map":{"version":3,"sources":["/Users/luna/Documents/Elice_1st_Project/portfolio-share-service-racer/front/src/components/certificate/CertificateDetail.js"],"names":["React","useState","useEffect","Button","Form","FloatingLabel","Api","CertificateForm","CertificateP","CertificateDetail","portfolioOwnerId","isEditable","dbItem","setDbItem","isToggle","setIsToggle","isEdit","setIsEdit","currentEditId","setcurrentEditId","certName","setCertName","certAcDate","setCertAcDate","onChangeName","e","target","value","onChangeDate","AddInput","fetchCert","ownerId","res","get","userId","ownerData","data","err","response","status","alert","error","console","log","handleSubmit","id","item","filter","_id","undefined","isSave","post","put","handleEdit","prevItems","map","handleCancel","handleDelete","delete","formSendFunction","formSendcurrentData","pSendFunction","pSendisFlag","width","backgroundColor","border","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Form, FloatingLabel } from 'react-bootstrap';\n\nimport * as Api from '../../api';\n\nimport CertificateForm from './CertificateForm';\nimport CertificateP from './CertificateP';\n\nfunction CertificateDetail({ portfolioOwnerId, isEditable }) {\n    const [dbItem, setDbItem] = useState([]);\n    const [isToggle, setIsToggle] = useState(false); // 추가 버튼 클릭 유무\n    const [isEdit, setIsEdit] = useState(false); // 편집 버튼 클릭 유무\n    const [currentEditId, setcurrentEditId] = useState(''); // Edit 버튼을 클릭 시 버튼 표시를 구분하기 위한 값\n\n    const [certName, setCertName] = useState(''); // 자격증 명\n    const [certAcDate, setCertAcDate] = useState(''); // 취득일자\n\n    const onChangeName = e => {\n        setCertName(e.target.value);\n    };\n\n    const onChangeDate = e => {\n        setCertAcDate(e.target.value);\n    };\n\n    const AddInput = () => {\n        setIsToggle(true);\n\n        setCertName('');\n        setCertAcDate('');\n    };\n\n    const fetchCert = async ownerId => {\n        try {\n            // \"/cert\" 엔드포인트로 요청해 사용자 정보를 불러옴.\n            const res = await Api.get(`cert/${ownerId.userId}`);\n            // 사용자 정보는 response의 data임.\n            const ownerData = res.data;\n            // portfolioOwner을 해당 사용자 정보로 세팅함.\n            setDbItem(ownerData);\n        } catch (err) {\n            if (err.response.status === 400) {\n                alert(err.response.data.error);\n            }\n            console.log('사용자 데이터 불러오기에 실패하였습니다.', err);\n        }\n    };\n\n    const userId = portfolioOwnerId;\n\n    const handleSubmit = async id => {\n        const item = dbItem.filter(item => item._id === id)[0];\n\n        if (item === undefined || item.isSave === false) {\n            try {\n                // \"/cert\" 엔드포인트로 post요청함.(userId는 req.currentUserId 사용)\n                await Api.post(`cert/`, {\n                    certName,\n                    certAcDate,\n                });\n\n                setIsToggle(false);\n                setIsEdit(false);\n\n                fetchCert({ userId });\n\n                setCertName('');\n                setCertAcDate('');\n            } catch (err) {\n                if (err.response.status === 400) {\n                    alert(err.response.data.error);\n                }\n                console.log('자격증 추가에 실패하였습니다.', err);\n            }\n        } else {\n            try {\n                // \"cert/certId\" 엔드포인트로 put요청함.\n                await Api.put(`cert/${item._id}`, {\n                    certName,\n                    certAcDate,\n                });\n\n                setIsToggle(false);\n                setIsEdit(false);\n\n                fetchCert({ userId });\n            } catch (err) {\n                if (err.response.status === 400) {\n                    alert(err.response.data.error);\n                }\n                console.log('자격증 수정에 실패하였습니다.', err);\n            }\n        }\n    };\n\n    const handleEdit = id => {\n        setDbItem(prevItems => {\n            return prevItems.map(item => {\n                if (item._id === id) {\n                    return {\n                        ...item,\n                        isEdit: true,\n                    };\n                } else {\n                    return item;\n                }\n            });\n        });\n\n        const item = dbItem.filter(item => item._id === id)[0];\n        setCertName(item.certName);\n        setCertAcDate(item.certAcDate);\n\n        setcurrentEditId(item._id);\n        setIsEdit(true);\n    };\n\n    const handleCancel = () => {\n        fetchCert({ userId });\n\n        setIsToggle(false);\n        setIsEdit(false);\n    };\n\n    const handleDelete = async id => {\n        try {\n            // \"cert/certId\" 엔드포인트로 delete 요청함.\n            await Api.delete(`cert/${id}`);\n\n            fetchCert({ userId });\n\n            setIsToggle(false);\n            setIsEdit(false);\n        } catch (err) {\n            if (err.response.status === 400) {\n                alert(err.response.data.error);\n            }\n            console.log('자격증 삭제에 실패하였습니다.', err);\n        }\n    };\n\n    useEffect(() => {\n        fetchCert({ userId });\n    }, [userId]);\n\n    const formSendFunction = { handleSubmit, handleCancel, handleDelete, onChangeName, onChangeDate };\n    const formSendcurrentData = { certName, certAcDate, currentEditId };\n    const pSendFunction = { handleEdit };\n    const pSendisFlag = { isEditable, isToggle, isEdit };\n\n    return (\n        <div>\n            {dbItem.map(item => (\n                <div key={item._id}>\n                    {item.isSave === true && item.isEdit === false ? (\n                        <CertificateP pSendFunction={pSendFunction} isFlag={pSendisFlag} item={item} />\n                    ) : (\n                        <CertificateForm formSendFunction={formSendFunction} currentData={formSendcurrentData} item={item} />\n                    )}\n                </div>\n            ))}\n            {isToggle === true ? (\n                <div>\n                    <div className=\"mb-2\">\n                        <FloatingLabel controlId=\"floatingInput\" label=\"자격증 명*\" className=\"mb-3\">\n                            <Form.Control\n                                style={{ width: '100%' }}\n                                type=\"text\"\n                                placeholder=\"자격증 명\"\n                                value={certName}\n                                onChange={onChangeName}\n                            />\n                        </FloatingLabel>\n                    </div>\n                    <div className=\"mb-2\">\n                        <FloatingLabel controlId=\"floatingInput\" label=\"취득일자*\" className=\"mb-3\">\n                            <Form.Control\n                                style={{ width: '100%' }}\n                                type=\"date\"\n                                placeholder=\"취득일자\"\n                                value={certAcDate}\n                                onChange={onChangeDate}\n                            />\n                        </FloatingLabel>\n                    </div>\n                    <div className=\"mb-3 text-center\">\n                        <React.Fragment>\n                            <Button\n                                style={{ backgroundColor: '#3077e1', border: 'none' }}\n                                className=\"me-2\"\n                                onClick={() => handleSubmit()}>\n                                확인\n                            </Button>\n                            <Button\n                                style={{ backgroundColor: '#7469bc', border: 'none' }}\n                                variant=\"secondary\"\n                                onClick={() => handleCancel()}>\n                                취소\n                            </Button>\n                        </React.Fragment>\n                    </div>\n                </div>\n            ) : (\n                ''\n            )}\n            {isEditable && (\n                <div className=\"mb-3 text-center\">\n                    {dbItem.length < 10 && (\n                        <Button\n                            style={{ backgroundColor: '#2a3741', border: 'none' }}\n                            onClick={AddInput}\n                            disabled={isToggle || isEdit ? true : false}>\n                            +\n                        </Button>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default CertificateDetail;\n"]},"metadata":{},"sourceType":"module"}