{"ast":null,"code":"var _jsxFileName = \"/Users/luna/Documents/Elice_1st_Project/my_test/front/src/components/project/ProjectDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport * as Api from '../../api';\nimport ProjectForm from './ProjectForm';\nimport ProjectP from './ProjectP';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProjectDetail(_ref) {\n  _s();\n\n  let {\n    portfolioOwnerId,\n    isEditable\n  } = _ref;\n  const [dbItem, setDbItem] = useState([]);\n  const [isToggle, setIsToggle] = useState(false); // 추가 버튼 클릭 유무\n\n  const [isEdit, setIsEdit] = useState(false); // 편집 버튼 클릭 유무\n\n  const [currentEditId, setcurrentEditId] = useState(''); // Edit 버튼을 클릭 시 버튼 표시를 구분하기 위한 값\n\n  const [projectName, setProjectName] = useState(''); // 프로젝트 이름\n\n  const [projectStartDate, setProjectStartDate] = useState(''); // 프로젝트 시작일자\n\n  const [projectEndDate, setProjectEndDate] = useState(''); // 프로젝트 종료일자\n\n  const [projectDescription, setProjectDescription] = useState(''); // 프로젝트 설명\n\n  const [selectedProjectFile, setSelectedProejctFile] = useState(null); // 프로젝트 파일\n\n  const isDateValid = projectStartDate < projectEndDate;\n\n  const onChangeName = e => {\n    setProjectName(e.target.value);\n  };\n\n  const onChangeStartDate = e => {\n    setProjectStartDate(e.target.value);\n  };\n\n  const onChangeEndDate = e => {\n    setProjectEndDate(e.target.value);\n  };\n\n  const onChangeDescription = e => {\n    setProjectDescription(e.target.value);\n  };\n\n  const onChangeSelectFile = e => {\n    setSelectedProejctFile(e.target.files[0]);\n  };\n\n  const AddInput = () => {\n    setIsToggle(true);\n    setProjectName('');\n    setProjectStartDate('');\n    setProjectEndDate('');\n    setProjectDescription('');\n    setSelectedProejctFile(null);\n  };\n\n  const fetchProject = async ownerId => {\n    try {\n      // \"/project\" 엔드포인트로 요청해 사용자 정보를 불러옴.(userId는 req.currentUserId 사용)\n      const res = await Api.get('project'); // 사용자 정보는 response의 data임.\n\n      const ownerData = res.data; // portfolioOwner을 해당 사용자 정보로 세팅함.\n\n      setDbItem(ownerData);\n    } catch (err) {\n      console.log('사용자 데이터 불러오기에 실패하였습니다.', err);\n    }\n  };\n\n  const userId = portfolioOwnerId;\n\n  const handleSubmit = async id => {\n    const item = dbItem.filter(item => item._id === id)[0];\n    const formData = new FormData();\n    formData.append('file', selectedProjectFile);\n\n    if (item === undefined || item.isSave === false) {\n      try {\n        if (!isDateValid) {\n          throw new Error('프로젝트 시작일자보다 프로젝트 종료일자가 이전입니다.');\n        } // \"/project\" 엔드포인트로 post요청함.(userId는 req.currentUserId 사용)\n\n\n        await Api.post(`project/`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            'Content-Type': 'application/json'\n          },\n          body: {\n            projectName,\n            projectStartDate,\n            projectEndDate,\n            projectDescription\n          }\n        });\n        setIsToggle(false);\n        setIsEdit(false);\n        fetchProject({\n          userId\n        });\n        setProjectName('');\n        setProjectStartDate('');\n        setProjectEndDate('');\n        setProjectDescription('');\n      } catch (err) {\n        console.log('프로젝트 추가에 실패하였습니다.', err);\n      }\n    } else {\n      try {\n        // \"project/projectId\" 엔드포인트로 put요청함.\n        await Api.put(`project/${item._id}`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          },\n          params: {\n            projectName,\n            projectStartDate,\n            projectEndDate,\n            projectDescription\n          }\n        });\n        setIsToggle(false);\n        setIsEdit(false);\n        fetchProject({\n          userId\n        });\n      } catch (err) {\n        console.log('프로젝트 수정에 실패하였습니다.', err);\n      }\n    }\n  };\n\n  const handleEdit = id => {\n    setDbItem(prevItems => {\n      return prevItems.map(item => {\n        if (item._id === id) {\n          return { ...item,\n            isEdit: true\n          };\n        } else {\n          return item;\n        }\n      });\n    });\n    const item = dbItem.filter(item => item._id === id)[0];\n    setProjectName(item.projectName);\n    setProjectStartDate(item.projectStartDate);\n    setProjectEndDate(item.projectEndDate);\n    setProjectDescription(item.projectDescription);\n    setcurrentEditId(item._id);\n    setIsEdit(true);\n  };\n\n  const handleCancel = () => {\n    fetchProject({\n      userId\n    });\n    setIsToggle(false);\n    setIsEdit(false);\n  };\n\n  const handleDelete = async id => {\n    try {\n      // \"project/projectId\" 엔드포인트로 delete 요청함.\n      await Api.delete(`project/${id}`);\n      fetchProject({\n        userId\n      });\n      setIsToggle(false);\n      setIsEdit(false);\n    } catch (err) {\n      console.log('프로젝트 삭제에 실패하였습니다.', err);\n    }\n  };\n\n  useEffect(() => {\n    fetchProject({\n      userId\n    });\n  }, [userId]);\n  const formSendFunction = {\n    handleSubmit,\n    handleCancel,\n    handleDelete,\n    onChangeName,\n    onChangeStartDate,\n    onChangeEndDate,\n    onChangeDescription,\n    onChangeSelectFile\n  };\n  const formSendcurrentData = {\n    projectName,\n    projectStartDate,\n    projectEndDate,\n    projectDescription,\n    currentEditId\n  };\n  const formSendisFlag = {\n    isDateValid\n  };\n  const pSendFunction = {\n    handleEdit\n  };\n  const pSendisFlag = {\n    isEditable\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [dbItem.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: item.isSave === true && item.isEdit === false ? /*#__PURE__*/_jsxDEV(ProjectP, {\n        pSendFunction: pSendFunction,\n        isFlag: pSendisFlag,\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(ProjectForm, {\n        formSendFunction: formSendFunction,\n        currentData: formSendcurrentData,\n        isFlag: formSendisFlag,\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 25\n      }, this)\n    }, item._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }, this)), isToggle === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          style: {\n            width: '100%'\n          },\n          type: \"text\",\n          placeholder: \"\\uD504\\uB85C\\uC81D\\uD2B8 \\uBA85\",\n          value: projectName,\n          onChange: onChangeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          style: {\n            width: '100%'\n          },\n          type: \"date\",\n          placeholder: \"\\uD504\\uB85C\\uC81D\\uD2B8 \\uC2DC\\uC791\\uC77C\\uC790\",\n          value: projectStartDate,\n          onChange: onChangeStartDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          style: {\n            width: '100%'\n          },\n          type: \"date\",\n          placeholder: \"\\uD504\\uB85C\\uC81D\\uD2B8 \\uC885\\uB8CC\\uC77C\\uC790\",\n          value: projectEndDate,\n          onChange: onChangeEndDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }, this), projectStartDate && projectEndDate && !isDateValid && /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"date-success\",\n          children: \"\\uD504\\uB85C\\uC81D\\uD2B8 \\uC2DC\\uC791\\uC77C\\uC790\\uBCF4\\uB2E4 \\uD504\\uB85C\\uC81D\\uD2B8 \\uC885\\uB8CC\\uC77C\\uC790\\uAC00 \\uC774\\uC804\\uC785\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          style: {\n            width: '100%'\n          },\n          type: \"text\",\n          placeholder: \"\\uD504\\uB85C\\uC81D\\uD2B8 \\uC124\\uBA85\",\n          value: projectDescription,\n          onChange: onChangeDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"file\",\n          onChange: onChangeSelectFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 text-center\",\n        children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => handleSubmit(),\n            children: \"\\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 29\n          }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => handleCancel(),\n            children: \"\\uCDE8\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 29\n          }, this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }, this) : '', isEditable && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 text-center\",\n      children: dbItem.length < 10 && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: AddInput,\n        disabled: isToggle || isEdit ? true : false,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProjectDetail, \"pukT3y1jxR0atmByf8PFUVUuExI=\");\n\n_c = ProjectDetail;\nexport default ProjectDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectDetail\");","map":{"version":3,"sources":["/Users/luna/Documents/Elice_1st_Project/my_test/front/src/components/project/ProjectDetail.js"],"names":["React","useState","useEffect","Button","Form","Api","ProjectForm","ProjectP","ProjectDetail","portfolioOwnerId","isEditable","dbItem","setDbItem","isToggle","setIsToggle","isEdit","setIsEdit","currentEditId","setcurrentEditId","projectName","setProjectName","projectStartDate","setProjectStartDate","projectEndDate","setProjectEndDate","projectDescription","setProjectDescription","selectedProjectFile","setSelectedProejctFile","isDateValid","onChangeName","e","target","value","onChangeStartDate","onChangeEndDate","onChangeDescription","onChangeSelectFile","files","AddInput","fetchProject","ownerId","res","get","ownerData","data","err","console","log","userId","handleSubmit","id","item","filter","_id","formData","FormData","append","undefined","isSave","Error","post","headers","body","put","params","handleEdit","prevItems","map","handleCancel","handleDelete","delete","formSendFunction","formSendcurrentData","formSendisFlag","pSendFunction","pSendisFlag","width","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Form } from 'react-bootstrap';\n\nimport * as Api from '../../api';\n\nimport ProjectForm from './ProjectForm';\nimport ProjectP from './ProjectP';\n\nfunction ProjectDetail({ portfolioOwnerId, isEditable }) {\n    const [dbItem, setDbItem] = useState([]);\n    const [isToggle, setIsToggle] = useState(false); // 추가 버튼 클릭 유무\n    const [isEdit, setIsEdit] = useState(false); // 편집 버튼 클릭 유무\n    const [currentEditId, setcurrentEditId] = useState(''); // Edit 버튼을 클릭 시 버튼 표시를 구분하기 위한 값\n\n    const [projectName, setProjectName] = useState(''); // 프로젝트 이름\n    const [projectStartDate, setProjectStartDate] = useState(''); // 프로젝트 시작일자\n    const [projectEndDate, setProjectEndDate] = useState(''); // 프로젝트 종료일자\n    const [projectDescription, setProjectDescription] = useState(''); // 프로젝트 설명\n    const [selectedProjectFile, setSelectedProejctFile] = useState(null); // 프로젝트 파일\n\n    const isDateValid = projectStartDate < projectEndDate;\n\n    const onChangeName = (e) => {\n        setProjectName(e.target.value);\n    };\n\n    const onChangeStartDate = (e) => {\n        setProjectStartDate(e.target.value);\n    };\n\n    const onChangeEndDate = (e) => {\n        setProjectEndDate(e.target.value);\n    };\n\n    const onChangeDescription = (e) => {\n        setProjectDescription(e.target.value);\n    };\n\n    const onChangeSelectFile = (e) => {\n        setSelectedProejctFile(e.target.files[0]);\n    };\n\n    const AddInput = () => {\n        setIsToggle(true);\n\n        setProjectName('');\n        setProjectStartDate('');\n        setProjectEndDate('');\n        setProjectDescription('');\n        setSelectedProejctFile(null);\n    };\n\n    const fetchProject = async (ownerId) => {\n        try {\n            // \"/project\" 엔드포인트로 요청해 사용자 정보를 불러옴.(userId는 req.currentUserId 사용)\n            const res = await Api.get('project');\n            // 사용자 정보는 response의 data임.\n            const ownerData = res.data;\n            // portfolioOwner을 해당 사용자 정보로 세팅함.\n            setDbItem(ownerData);\n        } catch (err) {\n            console.log('사용자 데이터 불러오기에 실패하였습니다.', err);\n        }\n    };\n\n    const userId = portfolioOwnerId;\n\n    const handleSubmit = async (id) => {\n        const item = dbItem.filter((item) => item._id === id)[0];\n\n        const formData = new FormData();\n        formData.append('file', selectedProjectFile);\n\n        if (item === undefined || item.isSave === false) {\n            try {\n                if (!isDateValid) {\n                    throw new Error('프로젝트 시작일자보다 프로젝트 종료일자가 이전입니다.');\n                }\n\n                // \"/project\" 엔드포인트로 post요청함.(userId는 req.currentUserId 사용)\n                await Api.post(`project/`, formData, {\n                    headers: {\n                        'Content-Type': 'multipart/form-data',\n                        'Content-Type': 'application/json',\n                    },\n                    body: {\n                        projectName,\n                        projectStartDate,\n                        projectEndDate,\n                        projectDescription,\n                    },\n                });\n\n                setIsToggle(false);\n                setIsEdit(false);\n\n                fetchProject({ userId });\n\n                setProjectName('');\n                setProjectStartDate('');\n                setProjectEndDate('');\n                setProjectDescription('');\n            } catch (err) {\n                console.log('프로젝트 추가에 실패하였습니다.', err);\n            }\n        } else {\n            try {\n                // \"project/projectId\" 엔드포인트로 put요청함.\n                await Api.put(`project/${item._id}`, formData, {\n                    headers: {\n                        'Content-Type': 'multipart/form-data',\n                    },\n                    params: {\n                        projectName,\n                        projectStartDate,\n                        projectEndDate,\n                        projectDescription,\n                    },\n                });\n\n                setIsToggle(false);\n                setIsEdit(false);\n\n                fetchProject({ userId });\n            } catch (err) {\n                console.log('프로젝트 수정에 실패하였습니다.', err);\n            }\n        }\n    };\n\n    const handleEdit = (id) => {\n        setDbItem((prevItems) => {\n            return prevItems.map((item) => {\n                if (item._id === id) {\n                    return {\n                        ...item,\n                        isEdit: true,\n                    };\n                } else {\n                    return item;\n                }\n            });\n        });\n\n        const item = dbItem.filter((item) => item._id === id)[0];\n        setProjectName(item.projectName);\n        setProjectStartDate(item.projectStartDate);\n        setProjectEndDate(item.projectEndDate);\n        setProjectDescription(item.projectDescription);\n\n        setcurrentEditId(item._id);\n        setIsEdit(true);\n    };\n\n    const handleCancel = () => {\n        fetchProject({ userId });\n\n        setIsToggle(false);\n        setIsEdit(false);\n    };\n\n    const handleDelete = async (id) => {\n        try {\n            // \"project/projectId\" 엔드포인트로 delete 요청함.\n            await Api.delete(`project/${id}`);\n\n            fetchProject({ userId });\n\n            setIsToggle(false);\n            setIsEdit(false);\n        } catch (err) {\n            console.log('프로젝트 삭제에 실패하였습니다.', err);\n        }\n    };\n\n    useEffect(() => {\n        fetchProject({ userId });\n    }, [userId]);\n\n    const formSendFunction = {\n        handleSubmit,\n        handleCancel,\n        handleDelete,\n        onChangeName,\n        onChangeStartDate,\n        onChangeEndDate,\n        onChangeDescription,\n        onChangeSelectFile,\n    };\n    const formSendcurrentData = { projectName, projectStartDate, projectEndDate, projectDescription, currentEditId };\n    const formSendisFlag = { isDateValid };\n    const pSendFunction = { handleEdit };\n    const pSendisFlag = { isEditable };\n\n    return (\n        <div>\n            {dbItem.map((item) => (\n                <div key={item._id}>\n                    {item.isSave === true && item.isEdit === false ? (\n                        <ProjectP pSendFunction={pSendFunction} isFlag={pSendisFlag} item={item} />\n                    ) : (\n                        <ProjectForm\n                            formSendFunction={formSendFunction}\n                            currentData={formSendcurrentData}\n                            isFlag={formSendisFlag}\n                            item={item}\n                        />\n                    )}\n                </div>\n            ))}\n            {isToggle === true ? (\n                <div>\n                    <div className='mb-2'>\n                        <Form.Control\n                            style={{ width: '100%' }}\n                            type='text'\n                            placeholder='프로젝트 명'\n                            value={projectName}\n                            onChange={onChangeName}\n                        />\n                    </div>\n                    <div className='mb-2'>\n                        <Form.Control\n                            style={{ width: '100%' }}\n                            type='date'\n                            placeholder='프로젝트 시작일자'\n                            value={projectStartDate}\n                            onChange={onChangeStartDate}\n                        />\n                    </div>\n                    <div className='mb-2'>\n                        <Form.Control\n                            style={{ width: '100%' }}\n                            type='date'\n                            placeholder='프로젝트 종료일자'\n                            value={projectEndDate}\n                            onChange={onChangeEndDate}\n                        />\n                        {projectStartDate && projectEndDate && !isDateValid && (\n                            <Form.Text className='date-success'>\n                                프로젝트 시작일자보다 프로젝트 종료일자가 이전입니다.\n                            </Form.Text>\n                        )}\n                    </div>\n                    <div className='mb-2'>\n                        <Form.Control\n                            style={{ width: '100%' }}\n                            type='text'\n                            placeholder='프로젝트 설명'\n                            value={projectDescription}\n                            onChange={onChangeDescription}\n                        />\n                    </div>\n                    <div>\n                        <Form.Control type='file' onChange={onChangeSelectFile} />\n                    </div>\n                    <div className='mb-3 text-center'>\n                        <React.Fragment>\n                            <Button variant='primary' onClick={() => handleSubmit()}>\n                                확인\n                            </Button>{' '}\n                            <Button variant='secondary' onClick={() => handleCancel()}>\n                                취소\n                            </Button>{' '}\n                        </React.Fragment>\n                    </div>\n                </div>\n            ) : (\n                ''\n            )}\n            {isEditable && (\n                <div className='mb-3 text-center'>\n                    {dbItem.length < 10 && (\n                        <Button variant='primary' onClick={AddInput} disabled={isToggle || isEdit ? true : false}>\n                            +\n                        </Button>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ProjectDetail;\n"]},"metadata":{},"sourceType":"module"}