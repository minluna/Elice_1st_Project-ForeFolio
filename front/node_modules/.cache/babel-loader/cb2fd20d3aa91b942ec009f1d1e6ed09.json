{"ast":null,"code":"var _jsxFileName = \"/Users/luna/Documents/Elice_1st_Project/portfolio-share-service-racer/front/src/components/user/UserEditFormPortfolio.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Form, Col, FloatingLabel } from 'react-bootstrap';\nimport * as Api from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserEditForm(_ref) {\n  _s();\n\n  let {\n    user,\n    setIsEditing,\n    setUser\n  } = _ref;\n  //useState로 name 상태를 생성함.\n  const [name, setName] = useState(user.name); //useState로 email 상태를 생성함.\n\n  const [email, setEmail] = useState(user.email); //useState로 description 상태를 생성함.\n\n  const [description, setDescription] = useState(user.description); //useState로 gitLink 상태를 생성함.\n\n  const [gitLink, setGitLink] = useState(user.gitLink === 'undefined' ? '' : user.gitLink); //useState로 userImage 상태를 생성함.\n\n  const [userImage, setUserImage] = useState(user.userImage);\n\n  const validateForm = () => {\n    if (userImage && userImage.size > 1024 * 1024) {\n      alert('이미지 크기는 1MB 이하여야 합니다.');\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      if (!validateForm()) {\n        return;\n      }\n\n      const formData = new FormData();\n      formData.append('userImage', userImage);\n      formData.append('name', name);\n      formData.append('description', description);\n      formData.append('gitLink', gitLink); // \"user/유저id\" 엔드포인트로 PUT 요청함.\n\n      const res = await Api.putFile(`user/${user._id}`, formData); // 유저 정보는 response의 data임.\n\n      const updatedUser = res.data; // 해당 유저 정보로 user을 세팅함.\n\n      setUser(updatedUser); // isEditing을 false로 세팅함.\n\n      setIsEditing(false);\n    } catch (err) {\n      if (err.response.status === 400) {\n        alert(err.response.data.error);\n      }\n\n      console.log('유저 수정에 실패하였습니다.', err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2\",\n      children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n        controlId: \"floatingInput\",\n        label: \"\\uC774\\uB984\",\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"\\uC774\\uB984\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2\",\n      children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n        controlId: \"floatingInput\",\n        label: \"\\uC774\\uBA54\\uC77C\",\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"\\uC774\\uBA54\\uC77C\",\n          value: email,\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2\",\n      children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n        controlId: \"floatingInput\",\n        label: \"\\uC815\\uBCF4, \\uC778\\uC0AC\\uB9D0\",\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"\\uC815\\uBCF4, \\uC778\\uC0AC\\uB9D0\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          maxLength: 15\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2\",\n      children: /*#__PURE__*/_jsxDEV(FloatingLabel, {\n        controlId: \"floatingInput\",\n        label: \"Git \\uC8FC\\uC18C\",\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Git \\uC8FC\\uC18C\",\n          value: gitLink,\n          onChange: e => setGitLink(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2\",\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"file\",\n        onChange: e => setUserImage(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2 text-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: {\n          span: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            backgroundColor: '#3077e1',\n            border: 'none'\n          },\n          variant: \"primary\",\n          type: \"submit\",\n          className: \"me-3\",\n          onClick: e => handleSubmit(e),\n          children: \"\\uD655\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            backgroundColor: '#7469bc',\n            border: 'none'\n          },\n          variant: \"secondary\",\n          onClick: () => setIsEditing(false),\n          children: \"\\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserEditForm, \"YioOdT3ihjBRuNtAT5khT5Gjxeg=\");\n\n_c = UserEditForm;\nexport default UserEditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditForm\");","map":{"version":3,"sources":["/Users/luna/Documents/Elice_1st_Project/portfolio-share-service-racer/front/src/components/user/UserEditFormPortfolio.js"],"names":["React","useState","Button","Form","Col","FloatingLabel","Api","UserEditForm","user","setIsEditing","setUser","name","setName","email","setEmail","description","setDescription","gitLink","setGitLink","userImage","setUserImage","validateForm","size","alert","handleSubmit","e","preventDefault","formData","FormData","append","res","putFile","_id","updatedUser","data","err","response","status","error","console","log","target","value","files","span","backgroundColor","border"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Form, Col, FloatingLabel } from 'react-bootstrap';\nimport * as Api from '../../api';\n\nfunction UserEditForm({ user, setIsEditing, setUser }) {\n    //useState로 name 상태를 생성함.\n    const [name, setName] = useState(user.name);\n    //useState로 email 상태를 생성함.\n    const [email, setEmail] = useState(user.email);\n    //useState로 description 상태를 생성함.\n    const [description, setDescription] = useState(user.description);\n    //useState로 gitLink 상태를 생성함.\n    const [gitLink, setGitLink] = useState(user.gitLink === 'undefined' ? '' : user.gitLink);\n    //useState로 userImage 상태를 생성함.\n    const [userImage, setUserImage] = useState(user.userImage);\n\n    const validateForm = () => {\n        if (userImage && userImage.size > 1024 * 1024) {\n            alert('이미지 크기는 1MB 이하여야 합니다.');\n            return false;\n        }\n        return true;\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        try {\n            if (!validateForm()) {\n                return;\n            }\n            const formData = new FormData();\n            formData.append('userImage', userImage);\n            formData.append('name', name);\n            formData.append('description', description);\n            formData.append('gitLink', gitLink);\n\n            // \"user/유저id\" 엔드포인트로 PUT 요청함.\n            const res = await Api.putFile(`user/${user._id}`, formData);\n            // 유저 정보는 response의 data임.\n            const updatedUser = res.data;\n            // 해당 유저 정보로 user을 세팅함.\n            setUser(updatedUser);\n\n            // isEditing을 false로 세팅함.\n            setIsEditing(false);\n        } catch (err) {\n            if (err.response.status === 400) {\n                alert(err.response.data.error);\n            }\n            console.log('유저 수정에 실패하였습니다.', err);\n        }\n    };\n\n    return (\n        <div>\n            <div className='mb-2'>\n                <FloatingLabel controlId='floatingInput' label='이름' className='mb-3'>\n                    <Form.Control type='text' placeholder='이름' value={name} onChange={(e) => setName(e.target.value)} />\n                </FloatingLabel>\n            </div>\n            <div className='mb-2'>\n                <FloatingLabel controlId='floatingInput' label='이메일' className='mb-3'>\n                    <Form.Control type='email' placeholder='이메일' value={email} disabled />\n                </FloatingLabel>\n            </div>\n            <div className='mb-2'>\n                <FloatingLabel controlId='floatingInput' label='정보, 인사말' className='mb-3'>\n                    <Form.Control\n                        type='text'\n                        placeholder='정보, 인사말'\n                        value={description}\n                        onChange={(e) => setDescription(e.target.value)}\n                        maxLength={15}\n                    />\n                </FloatingLabel>\n            </div>\n            <div className='mb-2'>\n                <FloatingLabel controlId='floatingInput' label='Git 주소' className='mb-3'>\n                    <Form.Control\n                        type='text'\n                        placeholder='Git 주소'\n                        value={gitLink}\n                        onChange={(e) => setGitLink(e.target.value)}\n                    />\n                </FloatingLabel>\n            </div>\n            <div className='mb-2'>\n                <Form.Control type='file' onChange={(e) => setUserImage(e.target.files[0])} />\n            </div>\n            <div className='mb-2 text-center'>\n                <Col sm={{ span: 20 }}>\n                    <Button\n                        style={{ backgroundColor: '#3077e1', border: 'none' }}\n                        variant='primary'\n                        type='submit'\n                        className='me-3'\n                        onClick={(e) => handleSubmit(e)}>\n                        확인\n                    </Button>\n                    <Button\n                        style={{ backgroundColor: '#7469bc', border: 'none' }}\n                        variant='secondary'\n                        onClick={() => setIsEditing(false)}>\n                        취소\n                    </Button>\n                </Col>\n            </div>\n        </div>\n    );\n}\n\nexport default UserEditForm;\n"]},"metadata":{},"sourceType":"module"}