{"ast":null,"code":"var _jsxFileName = \"/Users/luna/Documents/Elice_1st_Project/my_test/front/src/pages/wanted/WantedCreate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Row, Col, Card, Form, Button } from 'react-bootstrap';\nimport * as Api from '../../api';\nimport { UserStateContext } from '../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Network() {\n  _s();\n\n  const navigate = useNavigate();\n  const userState = useContext(UserStateContext); // useState 훅을 통해 users 상태를 생성함.\n\n  const [wantedList, setWantedList] = useState([]); // useState 훅을 통해 userImageUrl 상태를 생성함.\n\n  const handleSubmit = async id => {\n    const wanted = wantedList.filter(item => item._id === id)[0];\n\n    try {\n      // \"/project\" 엔드포인트로 post요청함.(userId는 req.currentUserId 사용)\n      await Api.post(`project/`, {\n        projectName,\n        projectStartDate,\n        projectEndDate,\n        projectDescription,\n        projectGitLink\n      });\n      setIsToggle(false);\n      setIsEdit(false);\n    } catch (err) {\n      console.log('프로젝트 추가에 실패하였습니다.', err);\n    }\n  };\n\n  useEffect(() => {\n    // 만약 전역 상태의 user가 null이라면, 로그인 페이지로 이동함.\n    if (!userState.user) {\n      navigate('/login');\n      return;\n    } // \"wantedlist\" 엔드포인트로 GET 요청을 하고, wantedList response의 data로 세팅함.\n    // Api.get('wantedlist').then((res) => setWantedList(res.data));\n\n  }, [userState, navigate]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: 8,\n        className: \"text-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD300\\uC6D0 \\uAD6C\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uD300\\uC6D0 \\uBAA8\\uC9D1\\uC744 \\uD655\\uC778\\uD558\\uACE0 \\uD504\\uB85C\\uC81D\\uD2B8\\uC5D0 \\uCC38\\uC5EC\\uD574\\uBCF4\\uC138\\uC694.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), \"\\uC6D0\\uD558\\uB294 \\uD504\\uB85C\\uC81D\\uD2B8\\uAC00 \\uC5C6\\uC744 \\uACBD\\uC6B0 \\uC9C1\\uC811 \\uD300\\uC6D0\\uC744 \\uBAA8\\uC9D1\\uD560 \\uC218 \\uC788\\uC5B4\\uC694.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: \"\\uC81C\\uBAA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: \"\\uBCF8\\uBB38\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            placeholder: \"\\uBCF8\\uBB38\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n            as: \"textarea\",\n            rows: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      className: \"mt-3 position-absolute start-50 translate-middle\",\n      onClick: () => handleSubmit(),\n      children: \"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Network, \"krQd5o9KdApidBaZfeXF8hLg+eU=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Network;\nexport default Network;\n\nvar _c;\n\n$RefreshReg$(_c, \"Network\");","map":{"version":3,"sources":["/Users/luna/Documents/Elice_1st_Project/my_test/front/src/pages/wanted/WantedCreate.js"],"names":["React","useEffect","useContext","useState","useNavigate","Container","Row","Col","Card","Form","Button","Api","UserStateContext","Network","navigate","userState","wantedList","setWantedList","handleSubmit","id","wanted","filter","item","_id","post","projectName","projectStartDate","projectEndDate","projectDescription","projectGitLink","setIsToggle","setIsEdit","err","console","log","user"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Row, Col, Card, Form, Button } from 'react-bootstrap';\n\nimport * as Api from '../../api';\nimport { UserStateContext } from '../../App';\n\nfunction Network() {\n    const navigate = useNavigate();\n    const userState = useContext(UserStateContext);\n    // useState 훅을 통해 users 상태를 생성함.\n    const [wantedList, setWantedList] = useState([]);\n    // useState 훅을 통해 userImageUrl 상태를 생성함.\n\n    const handleSubmit = async (id) => {\n        const wanted = wantedList.filter((item) => item._id === id)[0];\n\n        try {\n            // \"/project\" 엔드포인트로 post요청함.(userId는 req.currentUserId 사용)\n            await Api.post(`project/`, {\n                projectName,\n                projectStartDate,\n                projectEndDate,\n                projectDescription,\n                projectGitLink,\n            });\n\n            setIsToggle(false);\n            setIsEdit(false);\n        } catch (err) {\n            console.log('프로젝트 추가에 실패하였습니다.', err);\n        }\n    };\n\n    useEffect(() => {\n        // 만약 전역 상태의 user가 null이라면, 로그인 페이지로 이동함.\n        if (!userState.user) {\n            navigate('/login');\n            return;\n        }\n        // \"wantedlist\" 엔드포인트로 GET 요청을 하고, wantedList response의 data로 세팅함.\n        // Api.get('wantedlist').then((res) => setWantedList(res.data));\n    }, [userState, navigate]);\n\n    return (\n        <Container>\n            <Row>\n                <Col xs={8} className='text-left'>\n                    <h3>팀원 구하기</h3>\n                    <p>\n                        팀원 모집을 확인하고 프로젝트에 참여해보세요.\n                        <br />\n                        원하는 프로젝트가 없을 경우 직접 팀원을 모집할 수 있어요.\n                    </p>\n                </Col>\n            </Row>\n            <Row>\n                <Card className='mb-3'>\n                    <Card.Body>\n                        <Card.Title>제목</Card.Title>\n                        <Form.Control placeholder='제목을 입력해주세요' />\n                    </Card.Body>\n                    <Card.Body>\n                        <Card.Title>본문</Card.Title>\n                        <Form.Control placeholder='본문을 입력해주세요' as='textarea' rows={4} />\n                    </Card.Body>\n                </Card>\n            </Row>\n            <Button variant='primary' className='mt-3 position-absolute start-50 translate-middle' onClick={() => handleSubmit()}>\n                게시글 작성\n            </Button>\n        </Container>\n    );\n}\n\nexport default Network;\n"]},"metadata":{},"sourceType":"module"}