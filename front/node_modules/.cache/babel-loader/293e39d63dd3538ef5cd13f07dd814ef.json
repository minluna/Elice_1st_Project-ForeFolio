{"ast":null,"code":"var _jsxFileName = \"/Users/luna/Documents/Elice_1st_Project/portfolio-share-service-racer/front/src/components/user/UserCard.js\",\n    _s = $RefreshSig$();\n\nimport { useNavigate } from 'react-router-dom';\nimport { Card, Row, Button, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserCard(_ref) {\n  _s();\n\n  let {\n    user,\n    setIsEditing,\n    isEditable,\n    isNetwork,\n    userImageUrl\n  } = _ref;\n  const navigate = useNavigate();\n\n  if (userImageUrl === undefined) {\n    userImageUrl = 'http://placekitten.com/200/200';\n  }\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      xs: 2,\n      children: /*#__PURE__*/_jsxDEV(Card.Img, {\n        style: {\n          width: '10rem',\n          height: '8rem',\n          borderRadius: '70%',\n          overflow: 'hidden'\n        },\n        className: \"mb-3\" // src='http://placekitten.com/200/200'\n        ,\n        src: userImageUrl,\n        alt: \"\\uB79C\\uB364 \\uACE0\\uC591\\uC774 \\uC0AC\\uC9C4 (http://placekitten.com API \\uC0AC\\uC6A9)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 2,\n          children: /*#__PURE__*/_jsxDEV(Card.Title, {\n            children: user === null || user === void 0 ? void 0 : user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 2,\n          children: /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n            className: \"text-muted\",\n            children: user === null || user === void 0 ? void 0 : user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Card.Text, {\n          className: \"mb-2 text-muted\",\n          children: user === null || user === void 0 ? void 0 : user.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 8,\n        children: [(!(user !== null && user !== void 0 && user.gitLink) || (user === null || user === void 0 ? void 0 : user.gitLink) !== 'undefined') && /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Github\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 75\n        }, this), isEditable && /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mt-3 text-center text-info\",\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              sm: {\n                span: 20\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-info\",\n                size: \"sm\",\n                onClick: () => setIsEditing(true),\n                children: \"\\uD3B8\\uC9D1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), isNetwork && /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Card.Link, {\n          className: \"mt-3\",\n          href: \"#\",\n          onClick: () => navigate(`/user/${user._id}`),\n          children: \"\\uD3EC\\uD2B8\\uD3F4\\uB9AC\\uC624\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserCard, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = UserCard;\nexport default UserCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserCard\");","map":{"version":3,"sources":["/Users/luna/Documents/Elice_1st_Project/portfolio-share-service-racer/front/src/components/user/UserCard.js"],"names":["useNavigate","Card","Row","Button","Col","UserCard","user","setIsEditing","isEditable","isNetwork","userImageUrl","navigate","undefined","width","height","borderRadius","overflow","name","email","description","gitLink","span","_id"],"mappings":"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","sourcesContent":["import { useNavigate } from 'react-router-dom';\nimport { Card, Row, Button, Col } from 'react-bootstrap';\n\nfunction UserCard({ user, setIsEditing, isEditable, isNetwork, userImageUrl }) {\n    const navigate = useNavigate();\n\n    if (userImageUrl === undefined) {\n        userImageUrl = 'http://placekitten.com/200/200';\n    }\n\n    return (\n        <Row>\n            <Col xs={2}>\n                <Card.Img\n                    style={{ width: '10rem', height: '8rem', borderRadius: '70%', overflow: 'hidden' }}\n                    className='mb-3'\n                    // src='http://placekitten.com/200/200'\n                    src={userImageUrl}\n                    alt='랜덤 고양이 사진 (http://placekitten.com API 사용)'\n                />\n            </Col>\n            <Col>\n                <Row>\n                    <Col xs={2}>\n                        <Card.Title>{user?.name}</Card.Title>\n                    </Col>\n                    <Col xs={2}>\n                        <Card.Subtitle className='text-muted'>{user?.email}</Card.Subtitle>\n                    </Col>\n                </Row>\n                <Row>\n                    <Card.Text className='mb-2 text-muted'>{user?.description}</Card.Text>\n                </Row>\n                <Col xs={8}>\n                    {(!user?.gitLink || user?.gitLink !== 'undefined') && <Button>Github</Button>}\n\n                    {isEditable && (\n                        <Col>\n                            <Row className='mt-3 text-center text-info'>\n                                <Col sm={{ span: 20 }}>\n                                    <Button variant='outline-info' size='sm' onClick={() => setIsEditing(true)}>\n                                        편집\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Col>\n                    )}\n                </Col>\n\n                {isNetwork && (\n                    <Row>\n                        <Card.Link className='mt-3' href='#' onClick={() => navigate(`/user/${user._id}`)}>\n                            포트폴리오\n                        </Card.Link>\n                    </Row>\n                )}\n            </Col>\n        </Row>\n    );\n}\n\nexport default UserCard;\n"]},"metadata":{},"sourceType":"module"}