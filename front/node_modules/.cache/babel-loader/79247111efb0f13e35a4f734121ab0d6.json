{"ast":null,"code":"var _jsxFileName = \"/Users/luna/Documents/Elice_1st_Project/my_test/front/src/components/user/UserEditForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Form, Card, Col, Row } from \"react-bootstrap\";\nimport * as Api from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserEditForm(_ref) {\n  _s();\n\n  let {\n    user,\n    setIsEditing,\n    setUser\n  } = _ref;\n  //useState로 name 상태를 생성함.\n  const [name, setName] = useState(user.name); //useState로 email 상태를 생성함.\n\n  const [email, setEmail] = useState(user.email); //useState로 description 상태를 생성함.\n\n  const [description, setDescription] = useState(user.description);\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // \"users/유저id\" 엔드포인트로 PUT 요청함.\n\n    const res = await Api.put(`users/${user.id}`, {\n      name,\n      email,\n      description\n    }); // 유저 정보는 response의 data임.\n\n    const updatedUser = res.data; // 해당 유저 정보로 user을 세팅함.\n\n    setUser(updatedUser); // isEditing을 false로 세팅함.\n\n    setIsEditing(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-2\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"useEditName\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"\\uC774\\uB984\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"userEditEmail\",\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"\\uC774\\uBA54\\uC77C\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"userEditDescription\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"\\uC815\\uBCF4, \\uC778\\uC0AC\\uB9D0\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Row,\n          className: \"mt-3 text-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            sm: {\n              span: 20\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              className: \"me-3\",\n              children: \"\\uD655\\uC778\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: () => setIsEditing(false),\n              children: \"\\uCDE8\\uC18C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserEditForm, \"NDrd4pdxs+a0bk+IycplMahVgmU=\");\n\n_c = UserEditForm;\nexport default UserEditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditForm\");","map":{"version":3,"sources":["/Users/luna/Documents/Elice_1st_Project/my_test/front/src/components/user/UserEditForm.js"],"names":["React","useState","Button","Form","Card","Col","Row","Api","UserEditForm","user","setIsEditing","setUser","name","setName","email","setEmail","description","setDescription","handleSubmit","e","preventDefault","res","put","id","updatedUser","data","target","value","span"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Form, Card, Col, Row } from \"react-bootstrap\";\nimport * as Api from \"../../api\";\n\nfunction UserEditForm({ user, setIsEditing, setUser }) {\n  //useState로 name 상태를 생성함.\n  const [name, setName] = useState(user.name);\n  //useState로 email 상태를 생성함.\n  const [email, setEmail] = useState(user.email);\n  //useState로 description 상태를 생성함.\n  const [description, setDescription] = useState(user.description);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // \"users/유저id\" 엔드포인트로 PUT 요청함.\n    const res = await Api.put(`users/${user.id}`, {\n      name,\n      email,\n      description,\n    });\n    // 유저 정보는 response의 data임.\n    const updatedUser = res.data;\n    // 해당 유저 정보로 user을 세팅함.\n    setUser(updatedUser);\n\n    // isEditing을 false로 세팅함.\n    setIsEditing(false);\n  };\n\n  return (\n    <Card className=\"mb-2\">\n      <Card.Body>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group controlId=\"useEditName\" className=\"mb-3\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"이름\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"userEditEmail\" className=\"mb-3\">\n            <Form.Control\n              type=\"email\"\n              placeholder=\"이메일\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"userEditDescription\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"정보, 인사말\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group as={Row} className=\"mt-3 text-center\">\n            <Col sm={{ span: 20 }}>\n              <Button variant=\"primary\" type=\"submit\" className=\"me-3\">\n                확인\n              </Button>\n              <Button variant=\"secondary\" onClick={() => setIsEditing(false)}>\n                취소\n              </Button>\n            </Col>\n          </Form.Group>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default UserEditForm;\n"]},"metadata":{},"sourceType":"module"}