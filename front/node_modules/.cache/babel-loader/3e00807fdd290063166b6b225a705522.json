{"ast":null,"code":"var _jsxFileName = \"/Users/luna/Documents/Elice_1st_Project/portfolio-share-service-racer/front/src/pages/portfolio/Portfolio.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Container, Col, ListGroup } from \"react-bootstrap\";\nimport { UserStateContext } from \"../../App\";\nimport * as Api from \"../../api\";\nimport User from \"../../components/user/User\";\nimport Award from \"../../components/award/Award\";\nimport Education from \"../../components/education/Education\";\nimport Certificate from \"../../components/certificate/Certificate\";\nimport Project from \"../../components/project/Project\";\nimport Stack from \"../../components/stack/Stack\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Portfolio() {\n  _s();\n\n  var _userState$user$_id2, _userState$user, _userState$user2, _userState$user$_id3, _userState$user3, _userState$user4, _userState$user$_id4, _userState$user5, _userState$user6, _userState$user$_id5, _userState$user7, _userState$user8, _userState$user$_id6, _userState$user9, _userState$user10, _userState$user$_id7, _userState$user11, _userState$user12;\n\n  const navigate = useNavigate();\n  const params = useParams(); // useState 훅을 통해 portfolioOwner 상태를 생성함.\n\n  const [portfolioOwner, setPortfolioOwner] = useState(null); // fetchPorfolioOwner 함수가 완료된 이후에만 (isFetchCompleted가 true여야) 컴포넌트가 구현되도록 함.\n  // 아래 코드를 보면, isFetchCompleted가 false이면 \"loading...\"만 반환되어서, 화면에 이 로딩 문구만 뜨게 됨.\n\n  const [isFetchCompleted, setIsFetchCompleted] = useState(false);\n  const userState = useContext(UserStateContext);\n\n  const fetchPorfolioOwner = async ownerId => {\n    try {\n      // 유저 id를 가지고 \"/user/유저id\" 엔드포인트로 요청해 사용자 정보를 불러옴.\n      const res = await Api.get(\"user\", ownerId); // 사용자 정보는 response의 data임.\n\n      const ownerData = res.data; // portfolioOwner을 해당 사용자 정보로 세팅함.\n\n      setPortfolioOwner(ownerData); // fetchPorfolioOwner 과정이 끝났으므로, isFetchCompleted를 true로 바꿈.\n\n      setIsFetchCompleted(true);\n    } catch (err) {\n      if (err.response.status === 400) {\n        alert(\"유저 정보를 불러오는데 실패하였습니다.\");\n      }\n\n      console.log(\"유저 정보를 불러오는데 실패하였습니다.\", err);\n    }\n  }; //페이지 경로에 따라 배경색이 달라짐\n\n\n  useEffect(() => {\n    const {\n      pathname\n    } = window.location;\n\n    if (pathname === \"/\" || pathname === \"/network\" || pathname === \"/wanted\") {\n      document.body.classList.add(\"portfolio\");\n    } else {\n      document.body.classList.remove(\"portfolio\");\n    } // cleanup 함수\n\n\n    return () => {\n      document.body.classList.remove(\"portfolio\");\n    };\n  }, [window.location]);\n  useEffect(() => {\n    // 전역 상태의 user가 null이라면 로그인이 안 된 상태이므로, 로그인 페이지로 돌림.\n    if (!userState.user) {\n      navigate(\"/login\", {\n        replace: true\n      });\n      return;\n    }\n\n    if (params.userId) {\n      // 만약 현재 URL이 \"/user/:userId\" 라면, 이 userId를 유저 id로 설정함.\n      const ownerId = params.userId; // 해당 유저 id로 fetchPorfolioOwner 함수를 실행함.\n\n      fetchPorfolioOwner(ownerId);\n    } else {\n      var _userState$user$_id;\n\n      // 이외의 경우, 즉 URL이 \"/\" 라면, 전역 상태의 user.id를 유저 id로 설정함.\n      const ownerId = (_userState$user$_id = userState.user._id) !== null && _userState$user$_id !== void 0 ? _userState$user$_id : userState.user.id; // 해당 유저 id로 fetchPorfolioOwner 함수를 실행함.\n\n      fetchPorfolioOwner(ownerId);\n    }\n  }, [params, userState, navigate]);\n\n  if (!isFetchCompleted) {\n    return \"loading...\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(ListGroup, {\n      variant: \"flush\",\n      style: {\n        borderRadius: \"0.5rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xs: true,\n          className: \"mb-2\",\n          children: /*#__PURE__*/_jsxDEV(User, {\n            portfolioOwnerId: portfolioOwner.userInfo._id,\n            isEditable: portfolioOwner.userInfo._id === ((_userState$user$_id2 = (_userState$user = userState.user) === null || _userState$user === void 0 ? void 0 : _userState$user._id) !== null && _userState$user$_id2 !== void 0 ? _userState$user$_id2 : (_userState$user2 = userState.user) === null || _userState$user2 === void 0 ? void 0 : _userState$user2.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        children: /*#__PURE__*/_jsxDEV(Education, {\n          portfolioOwnerId: portfolioOwner.userInfo._id,\n          isEditable: portfolioOwner.userInfo._id === ((_userState$user$_id3 = (_userState$user3 = userState.user) === null || _userState$user3 === void 0 ? void 0 : _userState$user3._id) !== null && _userState$user$_id3 !== void 0 ? _userState$user$_id3 : (_userState$user4 = userState.user) === null || _userState$user4 === void 0 ? void 0 : _userState$user4.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          portfolioOwnerId: portfolioOwner.userInfo._id,\n          isEditable: portfolioOwner.userInfo._id === ((_userState$user$_id4 = (_userState$user5 = userState.user) === null || _userState$user5 === void 0 ? void 0 : _userState$user5._id) !== null && _userState$user$_id4 !== void 0 ? _userState$user$_id4 : (_userState$user6 = userState.user) === null || _userState$user6 === void 0 ? void 0 : _userState$user6.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        children: /*#__PURE__*/_jsxDEV(Award, {\n          portfolioOwnerId: portfolioOwner.userInfo._id,\n          isEditable: portfolioOwner.userInfo._id === ((_userState$user$_id5 = (_userState$user7 = userState.user) === null || _userState$user7 === void 0 ? void 0 : _userState$user7._id) !== null && _userState$user$_id5 !== void 0 ? _userState$user$_id5 : (_userState$user8 = userState.user) === null || _userState$user8 === void 0 ? void 0 : _userState$user8.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        children: /*#__PURE__*/_jsxDEV(Certificate, {\n          portfolioOwnerId: portfolioOwner.userInfo._id,\n          isEditable: portfolioOwner.userInfo._id === ((_userState$user$_id6 = (_userState$user9 = userState.user) === null || _userState$user9 === void 0 ? void 0 : _userState$user9._id) !== null && _userState$user$_id6 !== void 0 ? _userState$user$_id6 : (_userState$user10 = userState.user) === null || _userState$user10 === void 0 ? void 0 : _userState$user10.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        children: /*#__PURE__*/_jsxDEV(Project, {\n          portfolioOwnerId: portfolioOwner.userInfo._id,\n          isEditable: portfolioOwner.userInfo._id === ((_userState$user$_id7 = (_userState$user11 = userState.user) === null || _userState$user11 === void 0 ? void 0 : _userState$user11._id) !== null && _userState$user$_id7 !== void 0 ? _userState$user$_id7 : (_userState$user12 = userState.user) === null || _userState$user12 === void 0 ? void 0 : _userState$user12.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Portfolio, \"xgkhAHGEiadWXDMcy9uLZLs9jQY=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Portfolio;\nexport default Portfolio;\n\nvar _c;\n\n$RefreshReg$(_c, \"Portfolio\");","map":{"version":3,"sources":["/Users/luna/Documents/Elice_1st_Project/portfolio-share-service-racer/front/src/pages/portfolio/Portfolio.js"],"names":["React","useContext","useState","useEffect","useNavigate","useParams","Container","Col","ListGroup","UserStateContext","Api","User","Award","Education","Certificate","Project","Stack","Portfolio","navigate","params","portfolioOwner","setPortfolioOwner","isFetchCompleted","setIsFetchCompleted","userState","fetchPorfolioOwner","ownerId","res","get","ownerData","data","err","response","status","alert","console","log","pathname","window","location","document","body","classList","add","remove","user","replace","userId","_id","id","borderRadius","userInfo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,SAAzB,QAA0C,iBAA1C;AACA,SAASC,gBAAT,QAAiC,WAAjC;AACA,OAAO,KAAKC,GAAZ,MAAqB,WAArB;AAEA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AAAA;;AACnB,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAMe,MAAM,GAAGd,SAAS,EAAxB,CAFmB,CAGnB;;AACA,QAAM,CAACe,cAAD,EAAiBC,iBAAjB,IAAsCnB,QAAQ,CAAC,IAAD,CAApD,CAJmB,CAKnB;AACA;;AACA,QAAM,CAACoB,gBAAD,EAAmBC,mBAAnB,IAA0CrB,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAMsB,SAAS,GAAGvB,UAAU,CAACQ,gBAAD,CAA5B;;AAEA,QAAMgB,kBAAkB,GAAG,MAAOC,OAAP,IAAmB;AAC5C,QAAI;AACF;AACA,YAAMC,GAAG,GAAG,MAAMjB,GAAG,CAACkB,GAAJ,CAAQ,MAAR,EAAgBF,OAAhB,CAAlB,CAFE,CAGF;;AACA,YAAMG,SAAS,GAAGF,GAAG,CAACG,IAAtB,CAJE,CAKF;;AACAT,MAAAA,iBAAiB,CAACQ,SAAD,CAAjB,CANE,CAOF;;AACAN,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,KATD,CASE,OAAOQ,GAAP,EAAY;AACZ,UAAIA,GAAG,CAACC,QAAJ,CAAaC,MAAb,KAAwB,GAA5B,EAAiC;AAC/BC,QAAAA,KAAK,CAAC,uBAAD,CAAL;AACD;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCL,GAArC;AACD;AACF,GAhBD,CAVmB,CA4BnB;;;AACA5B,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAEkC,MAAAA;AAAF,QAAeC,MAAM,CAACC,QAA5B;;AACA,QAAIF,QAAQ,KAAK,GAAb,IAAoBA,QAAQ,KAAK,UAAjC,IAA+CA,QAAQ,KAAK,SAAhE,EAA2E;AACzEG,MAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,WAA5B;AACD,KAFD,MAEO;AACLH,MAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBE,MAAxB,CAA+B,WAA/B;AACD,KANa,CAOd;;;AACA,WAAO,MAAM;AACXJ,MAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBE,MAAxB,CAA+B,WAA/B;AACD,KAFD;AAGD,GAXQ,EAWN,CAACN,MAAM,CAACC,QAAR,CAXM,CAAT;AAaApC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAI,CAACqB,SAAS,CAACqB,IAAf,EAAqB;AACnB3B,MAAAA,QAAQ,CAAC,QAAD,EAAW;AAAE4B,QAAAA,OAAO,EAAE;AAAX,OAAX,CAAR;AACA;AACD;;AAED,QAAI3B,MAAM,CAAC4B,MAAX,EAAmB;AACjB;AACA,YAAMrB,OAAO,GAAGP,MAAM,CAAC4B,MAAvB,CAFiB,CAGjB;;AACAtB,MAAAA,kBAAkB,CAACC,OAAD,CAAlB;AACD,KALD,MAKO;AAAA;;AACL;AACA,YAAMA,OAAO,0BAAGF,SAAS,CAACqB,IAAV,CAAeG,GAAlB,qEAAyBxB,SAAS,CAACqB,IAAV,CAAeI,EAArD,CAFK,CAIL;;AACAxB,MAAAA,kBAAkB,CAACC,OAAD,CAAlB;AACD;AACF,GAnBQ,EAmBN,CAACP,MAAD,EAASK,SAAT,EAAoBN,QAApB,CAnBM,CAAT;;AAqBA,MAAI,CAACI,gBAAL,EAAuB;AACrB,WAAO,YAAP;AACD;;AAED,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAA2B,MAAA,KAAK,EAAE;AAAE4B,QAAAA,YAAY,EAAE;AAAhB,OAAlC;AAAA,8BACE,QAAC,SAAD,CAAW,IAAX;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,EAAE,MAAP;AAAQ,UAAA,SAAS,EAAC,MAAlB;AAAA,iCACE,QAAC,IAAD;AACE,YAAA,gBAAgB,EAAE9B,cAAc,CAAC+B,QAAf,CAAwBH,GAD5C;AAEE,YAAA,UAAU,EAAE5B,cAAc,CAAC+B,QAAf,CAAwBH,GAAxB,iDAAiCxB,SAAS,CAACqB,IAA3C,oDAAiC,gBAAgBG,GAAjD,2FAAwDxB,SAAS,CAACqB,IAAlE,qDAAwD,iBAAgBI,EAAxE;AAFd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,SAAD,CAAW,IAAX;AAAA,+BACE,QAAC,SAAD;AACE,UAAA,gBAAgB,EAAE7B,cAAc,CAAC+B,QAAf,CAAwBH,GAD5C;AAEE,UAAA,UAAU,EAAE5B,cAAc,CAAC+B,QAAf,CAAwBH,GAAxB,kDAAiCxB,SAAS,CAACqB,IAA3C,qDAAiC,iBAAgBG,GAAjD,2FAAwDxB,SAAS,CAACqB,IAAlE,qDAAwD,iBAAgBI,EAAxE;AAFd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF,eAgBE,QAAC,SAAD,CAAW,IAAX;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,gBAAgB,EAAE7B,cAAc,CAAC+B,QAAf,CAAwBH,GAD5C;AAEE,UAAA,UAAU,EAAE5B,cAAc,CAAC+B,QAAf,CAAwBH,GAAxB,kDAAiCxB,SAAS,CAACqB,IAA3C,qDAAiC,iBAAgBG,GAAjD,2FAAwDxB,SAAS,CAACqB,IAAlE,qDAAwD,iBAAgBI,EAAxE;AAFd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAhBF,eAsBE,QAAC,SAAD,CAAW,IAAX;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,gBAAgB,EAAE7B,cAAc,CAAC+B,QAAf,CAAwBH,GAD5C;AAEE,UAAA,UAAU,EAAE5B,cAAc,CAAC+B,QAAf,CAAwBH,GAAxB,kDAAiCxB,SAAS,CAACqB,IAA3C,qDAAiC,iBAAgBG,GAAjD,2FAAwDxB,SAAS,CAACqB,IAAlE,qDAAwD,iBAAgBI,EAAxE;AAFd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAtBF,eA6BE,QAAC,SAAD,CAAW,IAAX;AAAA,+BACE,QAAC,WAAD;AACE,UAAA,gBAAgB,EAAE7B,cAAc,CAAC+B,QAAf,CAAwBH,GAD5C;AAEE,UAAA,UAAU,EAAE5B,cAAc,CAAC+B,QAAf,CAAwBH,GAAxB,kDAAiCxB,SAAS,CAACqB,IAA3C,qDAAiC,iBAAgBG,GAAjD,4FAAwDxB,SAAS,CAACqB,IAAlE,sDAAwD,kBAAgBI,EAAxE;AAFd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA7BF,eAmCE,QAAC,SAAD,CAAW,IAAX;AAAA,+BACE,QAAC,OAAD;AACE,UAAA,gBAAgB,EAAE7B,cAAc,CAAC+B,QAAf,CAAwBH,GAD5C;AAEE,UAAA,UAAU,EAAE5B,cAAc,CAAC+B,QAAf,CAAwBH,GAAxB,mDAAiCxB,SAAS,CAACqB,IAA3C,sDAAiC,kBAAgBG,GAAjD,4FAAwDxB,SAAS,CAACqB,IAAlE,sDAAwD,kBAAgBI,EAAxE;AAFd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAnCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8CD;;GAjHQhC,S;UACUb,W,EACFC,S;;;KAFRY,S;AAmHT,eAAeA,SAAf","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Container, Col, ListGroup } from \"react-bootstrap\";\nimport { UserStateContext } from \"../../App\";\nimport * as Api from \"../../api\";\n\nimport User from \"../../components/user/User\";\nimport Award from \"../../components/award/Award\";\nimport Education from \"../../components/education/Education\";\nimport Certificate from \"../../components/certificate/Certificate\";\nimport Project from \"../../components/project/Project\";\nimport Stack from \"../../components/stack/Stack\";\n\nfunction Portfolio() {\n  const navigate = useNavigate();\n  const params = useParams();\n  // useState 훅을 통해 portfolioOwner 상태를 생성함.\n  const [portfolioOwner, setPortfolioOwner] = useState(null);\n  // fetchPorfolioOwner 함수가 완료된 이후에만 (isFetchCompleted가 true여야) 컴포넌트가 구현되도록 함.\n  // 아래 코드를 보면, isFetchCompleted가 false이면 \"loading...\"만 반환되어서, 화면에 이 로딩 문구만 뜨게 됨.\n  const [isFetchCompleted, setIsFetchCompleted] = useState(false);\n  const userState = useContext(UserStateContext);\n\n  const fetchPorfolioOwner = async (ownerId) => {\n    try {\n      // 유저 id를 가지고 \"/user/유저id\" 엔드포인트로 요청해 사용자 정보를 불러옴.\n      const res = await Api.get(\"user\", ownerId);\n      // 사용자 정보는 response의 data임.\n      const ownerData = res.data;\n      // portfolioOwner을 해당 사용자 정보로 세팅함.\n      setPortfolioOwner(ownerData);\n      // fetchPorfolioOwner 과정이 끝났으므로, isFetchCompleted를 true로 바꿈.\n      setIsFetchCompleted(true);\n    } catch (err) {\n      if (err.response.status === 400) {\n        alert(\"유저 정보를 불러오는데 실패하였습니다.\");\n      }\n      console.log(\"유저 정보를 불러오는데 실패하였습니다.\", err);\n    }\n  };\n\n  //페이지 경로에 따라 배경색이 달라짐\n  useEffect(() => {\n    const { pathname } = window.location;\n    if (pathname === \"/\" || pathname === \"/network\" || pathname === \"/wanted\") {\n      document.body.classList.add(\"portfolio\");\n    } else {\n      document.body.classList.remove(\"portfolio\");\n    }\n    // cleanup 함수\n    return () => {\n      document.body.classList.remove(\"portfolio\");\n    };\n  }, [window.location]);\n\n  useEffect(() => {\n    // 전역 상태의 user가 null이라면 로그인이 안 된 상태이므로, 로그인 페이지로 돌림.\n    if (!userState.user) {\n      navigate(\"/login\", { replace: true });\n      return;\n    }\n\n    if (params.userId) {\n      // 만약 현재 URL이 \"/user/:userId\" 라면, 이 userId를 유저 id로 설정함.\n      const ownerId = params.userId;\n      // 해당 유저 id로 fetchPorfolioOwner 함수를 실행함.\n      fetchPorfolioOwner(ownerId);\n    } else {\n      // 이외의 경우, 즉 URL이 \"/\" 라면, 전역 상태의 user.id를 유저 id로 설정함.\n      const ownerId = userState.user._id ?? userState.user.id;\n\n      // 해당 유저 id로 fetchPorfolioOwner 함수를 실행함.\n      fetchPorfolioOwner(ownerId);\n    }\n  }, [params, userState, navigate]);\n\n  if (!isFetchCompleted) {\n    return \"loading...\";\n  }\n\n  return (\n    <Container>\n      <ListGroup variant=\"flush\" style={{ borderRadius: \"0.5rem\" }}>\n        <ListGroup.Item>\n          <Col xs className=\"mb-2\">\n            <User\n              portfolioOwnerId={portfolioOwner.userInfo._id}\n              isEditable={portfolioOwner.userInfo._id === (userState.user?._id ?? userState.user?.id)}\n            />\n          </Col>\n        </ListGroup.Item>\n\n        <ListGroup.Item>\n          <Education\n            portfolioOwnerId={portfolioOwner.userInfo._id}\n            isEditable={portfolioOwner.userInfo._id === (userState.user?._id ?? userState.user?.id)}\n          />\n        </ListGroup.Item>\n        <ListGroup.Item>\n          <Stack\n            portfolioOwnerId={portfolioOwner.userInfo._id}\n            isEditable={portfolioOwner.userInfo._id === (userState.user?._id ?? userState.user?.id)}\n          />\n        </ListGroup.Item>\n        <ListGroup.Item>\n          <Award\n            portfolioOwnerId={portfolioOwner.userInfo._id}\n            isEditable={portfolioOwner.userInfo._id === (userState.user?._id ?? userState.user?.id)}\n          />\n        </ListGroup.Item>\n\n        <ListGroup.Item>\n          <Certificate\n            portfolioOwnerId={portfolioOwner.userInfo._id}\n            isEditable={portfolioOwner.userInfo._id === (userState.user?._id ?? userState.user?.id)}\n          />\n        </ListGroup.Item>\n        <ListGroup.Item>\n          <Project\n            portfolioOwnerId={portfolioOwner.userInfo._id}\n            isEditable={portfolioOwner.userInfo._id === (userState.user?._id ?? userState.user?.id)}\n          />\n        </ListGroup.Item>\n      </ListGroup>\n    </Container>\n  );\n}\n\nexport default Portfolio;\n"]},"metadata":{},"sourceType":"module"}